
KEYPAD_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000069c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000069c  00000730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800070  00800070  00000740  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000740  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000770  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000195c  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000976  00000000  00000000  00002220  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d1c  00000000  00000000  00002b96  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002dc  00000000  00000000  000038b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000648  00000000  00000000  00003b90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a1d  00000000  00000000  000041d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00005bf5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e9       	ldi	r30, 0x9C	; 156
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 37       	cpi	r26, 0x71	; 113
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 43 03 	call	0x686	; 0x686 <main>
  8a:	0c 94 4c 03 	jmp	0x698	; 0x698 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_VoidSetPinDirection>:
			pinvalue =PIND_REG;
			break;
	}
	
	return (pinvalue) ;
}
  92:	63 30       	cpi	r22, 0x03	; 3
  94:	51 f1       	breq	.+84     	; 0xea <DIO_VoidSetPinDirection+0x58>
  96:	18 f4       	brcc	.+6      	; 0x9e <DIO_VoidSetPinDirection+0xc>
  98:	62 30       	cpi	r22, 0x02	; 2
  9a:	41 f0       	breq	.+16     	; 0xac <DIO_VoidSetPinDirection+0x1a>
  9c:	08 95       	ret
  9e:	64 30       	cpi	r22, 0x04	; 4
  a0:	09 f4       	brne	.+2      	; 0xa4 <DIO_VoidSetPinDirection+0x12>
  a2:	42 c0       	rjmp	.+132    	; 0x128 <DIO_VoidSetPinDirection+0x96>
  a4:	65 30       	cpi	r22, 0x05	; 5
  a6:	09 f4       	brne	.+2      	; 0xaa <DIO_VoidSetPinDirection+0x18>
  a8:	5e c0       	rjmp	.+188    	; 0x166 <DIO_VoidSetPinDirection+0xd4>
  aa:	08 95       	ret
  ac:	41 30       	cpi	r20, 0x01	; 1
  ae:	69 f4       	brne	.+26     	; 0xca <DIO_VoidSetPinDirection+0x38>
  b0:	4a b3       	in	r20, 0x1a	; 26
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	b9 01       	movw	r22, r18
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_VoidSetPinDirection+0x2c>
  ba:	66 0f       	add	r22, r22
  bc:	77 1f       	adc	r23, r23
  be:	8a 95       	dec	r24
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_VoidSetPinDirection+0x28>
  c2:	cb 01       	movw	r24, r22
  c4:	84 2b       	or	r24, r20
  c6:	8a bb       	out	0x1a, r24	; 26
  c8:	08 95       	ret
  ca:	41 11       	cpse	r20, r1
  cc:	6a c0       	rjmp	.+212    	; 0x1a2 <DIO_VoidSetPinDirection+0x110>
  ce:	4a b3       	in	r20, 0x1a	; 26
  d0:	21 e0       	ldi	r18, 0x01	; 1
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	b9 01       	movw	r22, r18
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_VoidSetPinDirection+0x4a>
  d8:	66 0f       	add	r22, r22
  da:	77 1f       	adc	r23, r23
  dc:	8a 95       	dec	r24
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_VoidSetPinDirection+0x46>
  e0:	cb 01       	movw	r24, r22
  e2:	80 95       	com	r24
  e4:	84 23       	and	r24, r20
  e6:	8a bb       	out	0x1a, r24	; 26
  e8:	08 95       	ret
  ea:	41 30       	cpi	r20, 0x01	; 1
  ec:	69 f4       	brne	.+26     	; 0x108 <DIO_VoidSetPinDirection+0x76>
  ee:	47 b3       	in	r20, 0x17	; 23
  f0:	21 e0       	ldi	r18, 0x01	; 1
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	b9 01       	movw	r22, r18
  f6:	02 c0       	rjmp	.+4      	; 0xfc <DIO_VoidSetPinDirection+0x6a>
  f8:	66 0f       	add	r22, r22
  fa:	77 1f       	adc	r23, r23
  fc:	8a 95       	dec	r24
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <DIO_VoidSetPinDirection+0x66>
 100:	cb 01       	movw	r24, r22
 102:	84 2b       	or	r24, r20
 104:	87 bb       	out	0x17, r24	; 23
 106:	08 95       	ret
 108:	41 11       	cpse	r20, r1
 10a:	4b c0       	rjmp	.+150    	; 0x1a2 <DIO_VoidSetPinDirection+0x110>
 10c:	47 b3       	in	r20, 0x17	; 23
 10e:	21 e0       	ldi	r18, 0x01	; 1
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	b9 01       	movw	r22, r18
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_VoidSetPinDirection+0x88>
 116:	66 0f       	add	r22, r22
 118:	77 1f       	adc	r23, r23
 11a:	8a 95       	dec	r24
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_VoidSetPinDirection+0x84>
 11e:	cb 01       	movw	r24, r22
 120:	80 95       	com	r24
 122:	84 23       	and	r24, r20
 124:	87 bb       	out	0x17, r24	; 23
 126:	08 95       	ret
 128:	41 30       	cpi	r20, 0x01	; 1
 12a:	69 f4       	brne	.+26     	; 0x146 <DIO_VoidSetPinDirection+0xb4>
 12c:	44 b3       	in	r20, 0x14	; 20
 12e:	21 e0       	ldi	r18, 0x01	; 1
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	b9 01       	movw	r22, r18
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_VoidSetPinDirection+0xa8>
 136:	66 0f       	add	r22, r22
 138:	77 1f       	adc	r23, r23
 13a:	8a 95       	dec	r24
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_VoidSetPinDirection+0xa4>
 13e:	cb 01       	movw	r24, r22
 140:	84 2b       	or	r24, r20
 142:	84 bb       	out	0x14, r24	; 20
 144:	08 95       	ret
 146:	41 11       	cpse	r20, r1
 148:	2c c0       	rjmp	.+88     	; 0x1a2 <DIO_VoidSetPinDirection+0x110>
 14a:	44 b3       	in	r20, 0x14	; 20
 14c:	21 e0       	ldi	r18, 0x01	; 1
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	b9 01       	movw	r22, r18
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_VoidSetPinDirection+0xc6>
 154:	66 0f       	add	r22, r22
 156:	77 1f       	adc	r23, r23
 158:	8a 95       	dec	r24
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_VoidSetPinDirection+0xc2>
 15c:	cb 01       	movw	r24, r22
 15e:	80 95       	com	r24
 160:	84 23       	and	r24, r20
 162:	84 bb       	out	0x14, r24	; 20
 164:	08 95       	ret
 166:	41 30       	cpi	r20, 0x01	; 1
 168:	69 f4       	brne	.+26     	; 0x184 <DIO_VoidSetPinDirection+0xf2>
 16a:	41 b3       	in	r20, 0x11	; 17
 16c:	21 e0       	ldi	r18, 0x01	; 1
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	b9 01       	movw	r22, r18
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_VoidSetPinDirection+0xe6>
 174:	66 0f       	add	r22, r22
 176:	77 1f       	adc	r23, r23
 178:	8a 95       	dec	r24
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_VoidSetPinDirection+0xe2>
 17c:	cb 01       	movw	r24, r22
 17e:	84 2b       	or	r24, r20
 180:	81 bb       	out	0x11, r24	; 17
 182:	08 95       	ret
 184:	41 11       	cpse	r20, r1
 186:	0d c0       	rjmp	.+26     	; 0x1a2 <DIO_VoidSetPinDirection+0x110>
 188:	41 b3       	in	r20, 0x11	; 17
 18a:	21 e0       	ldi	r18, 0x01	; 1
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	b9 01       	movw	r22, r18
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_VoidSetPinDirection+0x104>
 192:	66 0f       	add	r22, r22
 194:	77 1f       	adc	r23, r23
 196:	8a 95       	dec	r24
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_VoidSetPinDirection+0x100>
 19a:	cb 01       	movw	r24, r22
 19c:	80 95       	com	r24
 19e:	84 23       	and	r24, r20
 1a0:	81 bb       	out	0x11, r24	; 17
 1a2:	08 95       	ret

000001a4 <DIO_VoidSetPinValue>:
 1a4:	63 30       	cpi	r22, 0x03	; 3
 1a6:	51 f1       	breq	.+84     	; 0x1fc <DIO_VoidSetPinValue+0x58>
 1a8:	18 f4       	brcc	.+6      	; 0x1b0 <DIO_VoidSetPinValue+0xc>
 1aa:	62 30       	cpi	r22, 0x02	; 2
 1ac:	41 f0       	breq	.+16     	; 0x1be <DIO_VoidSetPinValue+0x1a>
 1ae:	08 95       	ret
 1b0:	64 30       	cpi	r22, 0x04	; 4
 1b2:	09 f4       	brne	.+2      	; 0x1b6 <DIO_VoidSetPinValue+0x12>
 1b4:	42 c0       	rjmp	.+132    	; 0x23a <DIO_VoidSetPinValue+0x96>
 1b6:	65 30       	cpi	r22, 0x05	; 5
 1b8:	09 f4       	brne	.+2      	; 0x1bc <DIO_VoidSetPinValue+0x18>
 1ba:	5e c0       	rjmp	.+188    	; 0x278 <DIO_VoidSetPinValue+0xd4>
 1bc:	08 95       	ret
 1be:	41 30       	cpi	r20, 0x01	; 1
 1c0:	69 f4       	brne	.+26     	; 0x1dc <DIO_VoidSetPinValue+0x38>
 1c2:	4b b3       	in	r20, 0x1b	; 27
 1c4:	21 e0       	ldi	r18, 0x01	; 1
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	b9 01       	movw	r22, r18
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_VoidSetPinValue+0x2c>
 1cc:	66 0f       	add	r22, r22
 1ce:	77 1f       	adc	r23, r23
 1d0:	8a 95       	dec	r24
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_VoidSetPinValue+0x28>
 1d4:	cb 01       	movw	r24, r22
 1d6:	84 2b       	or	r24, r20
 1d8:	8b bb       	out	0x1b, r24	; 27
 1da:	08 95       	ret
 1dc:	41 11       	cpse	r20, r1
 1de:	6a c0       	rjmp	.+212    	; 0x2b4 <DIO_VoidSetPinValue+0x110>
 1e0:	4b b3       	in	r20, 0x1b	; 27
 1e2:	21 e0       	ldi	r18, 0x01	; 1
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	b9 01       	movw	r22, r18
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_VoidSetPinValue+0x4a>
 1ea:	66 0f       	add	r22, r22
 1ec:	77 1f       	adc	r23, r23
 1ee:	8a 95       	dec	r24
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_VoidSetPinValue+0x46>
 1f2:	cb 01       	movw	r24, r22
 1f4:	80 95       	com	r24
 1f6:	84 23       	and	r24, r20
 1f8:	8b bb       	out	0x1b, r24	; 27
 1fa:	08 95       	ret
 1fc:	41 30       	cpi	r20, 0x01	; 1
 1fe:	69 f4       	brne	.+26     	; 0x21a <DIO_VoidSetPinValue+0x76>
 200:	48 b3       	in	r20, 0x18	; 24
 202:	21 e0       	ldi	r18, 0x01	; 1
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	b9 01       	movw	r22, r18
 208:	02 c0       	rjmp	.+4      	; 0x20e <DIO_VoidSetPinValue+0x6a>
 20a:	66 0f       	add	r22, r22
 20c:	77 1f       	adc	r23, r23
 20e:	8a 95       	dec	r24
 210:	e2 f7       	brpl	.-8      	; 0x20a <DIO_VoidSetPinValue+0x66>
 212:	cb 01       	movw	r24, r22
 214:	84 2b       	or	r24, r20
 216:	88 bb       	out	0x18, r24	; 24
 218:	08 95       	ret
 21a:	41 11       	cpse	r20, r1
 21c:	4b c0       	rjmp	.+150    	; 0x2b4 <DIO_VoidSetPinValue+0x110>
 21e:	48 b3       	in	r20, 0x18	; 24
 220:	21 e0       	ldi	r18, 0x01	; 1
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	b9 01       	movw	r22, r18
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_VoidSetPinValue+0x88>
 228:	66 0f       	add	r22, r22
 22a:	77 1f       	adc	r23, r23
 22c:	8a 95       	dec	r24
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_VoidSetPinValue+0x84>
 230:	cb 01       	movw	r24, r22
 232:	80 95       	com	r24
 234:	84 23       	and	r24, r20
 236:	88 bb       	out	0x18, r24	; 24
 238:	08 95       	ret
 23a:	41 30       	cpi	r20, 0x01	; 1
 23c:	69 f4       	brne	.+26     	; 0x258 <DIO_VoidSetPinValue+0xb4>
 23e:	45 b3       	in	r20, 0x15	; 21
 240:	21 e0       	ldi	r18, 0x01	; 1
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	b9 01       	movw	r22, r18
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_VoidSetPinValue+0xa8>
 248:	66 0f       	add	r22, r22
 24a:	77 1f       	adc	r23, r23
 24c:	8a 95       	dec	r24
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_VoidSetPinValue+0xa4>
 250:	cb 01       	movw	r24, r22
 252:	84 2b       	or	r24, r20
 254:	85 bb       	out	0x15, r24	; 21
 256:	08 95       	ret
 258:	41 11       	cpse	r20, r1
 25a:	2c c0       	rjmp	.+88     	; 0x2b4 <DIO_VoidSetPinValue+0x110>
 25c:	45 b3       	in	r20, 0x15	; 21
 25e:	21 e0       	ldi	r18, 0x01	; 1
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	b9 01       	movw	r22, r18
 264:	02 c0       	rjmp	.+4      	; 0x26a <DIO_VoidSetPinValue+0xc6>
 266:	66 0f       	add	r22, r22
 268:	77 1f       	adc	r23, r23
 26a:	8a 95       	dec	r24
 26c:	e2 f7       	brpl	.-8      	; 0x266 <DIO_VoidSetPinValue+0xc2>
 26e:	cb 01       	movw	r24, r22
 270:	80 95       	com	r24
 272:	84 23       	and	r24, r20
 274:	85 bb       	out	0x15, r24	; 21
 276:	08 95       	ret
 278:	41 30       	cpi	r20, 0x01	; 1
 27a:	69 f4       	brne	.+26     	; 0x296 <DIO_VoidSetPinValue+0xf2>
 27c:	42 b3       	in	r20, 0x12	; 18
 27e:	21 e0       	ldi	r18, 0x01	; 1
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	b9 01       	movw	r22, r18
 284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_VoidSetPinValue+0xe6>
 286:	66 0f       	add	r22, r22
 288:	77 1f       	adc	r23, r23
 28a:	8a 95       	dec	r24
 28c:	e2 f7       	brpl	.-8      	; 0x286 <DIO_VoidSetPinValue+0xe2>
 28e:	cb 01       	movw	r24, r22
 290:	84 2b       	or	r24, r20
 292:	82 bb       	out	0x12, r24	; 18
 294:	08 95       	ret
 296:	41 11       	cpse	r20, r1
 298:	0d c0       	rjmp	.+26     	; 0x2b4 <DIO_VoidSetPinValue+0x110>
 29a:	42 b3       	in	r20, 0x12	; 18
 29c:	21 e0       	ldi	r18, 0x01	; 1
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	b9 01       	movw	r22, r18
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <DIO_VoidSetPinValue+0x104>
 2a4:	66 0f       	add	r22, r22
 2a6:	77 1f       	adc	r23, r23
 2a8:	8a 95       	dec	r24
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <DIO_VoidSetPinValue+0x100>
 2ac:	cb 01       	movw	r24, r22
 2ae:	80 95       	com	r24
 2b0:	84 23       	and	r24, r20
 2b2:	82 bb       	out	0x12, r24	; 18
 2b4:	08 95       	ret

000002b6 <DIO_VoidSetPortValue>:
 2b6:	83 30       	cpi	r24, 0x03	; 3
 2b8:	59 f0       	breq	.+22     	; 0x2d0 <DIO_VoidSetPortValue+0x1a>
 2ba:	18 f4       	brcc	.+6      	; 0x2c2 <DIO_VoidSetPortValue+0xc>
 2bc:	82 30       	cpi	r24, 0x02	; 2
 2be:	31 f0       	breq	.+12     	; 0x2cc <DIO_VoidSetPortValue+0x16>
 2c0:	08 95       	ret
 2c2:	84 30       	cpi	r24, 0x04	; 4
 2c4:	39 f0       	breq	.+14     	; 0x2d4 <DIO_VoidSetPortValue+0x1e>
 2c6:	85 30       	cpi	r24, 0x05	; 5
 2c8:	39 f0       	breq	.+14     	; 0x2d8 <DIO_VoidSetPortValue+0x22>
 2ca:	08 95       	ret
 2cc:	6b bb       	out	0x1b, r22	; 27
 2ce:	08 95       	ret
 2d0:	68 bb       	out	0x18, r22	; 24
 2d2:	08 95       	ret
 2d4:	65 bb       	out	0x15, r22	; 21
 2d6:	08 95       	ret
 2d8:	62 bb       	out	0x12, r22	; 18
 2da:	08 95       	ret

000002dc <DIO_U8GetPinValue>:
 2dc:	63 30       	cpi	r22, 0x03	; 3
 2de:	a1 f0       	breq	.+40     	; 0x308 <DIO_U8GetPinValue+0x2c>
 2e0:	18 f4       	brcc	.+6      	; 0x2e8 <DIO_U8GetPinValue+0xc>
 2e2:	62 30       	cpi	r22, 0x02	; 2
 2e4:	31 f0       	breq	.+12     	; 0x2f2 <DIO_U8GetPinValue+0x16>
 2e6:	31 c0       	rjmp	.+98     	; 0x34a <DIO_U8GetPinValue+0x6e>
 2e8:	64 30       	cpi	r22, 0x04	; 4
 2ea:	c9 f0       	breq	.+50     	; 0x31e <DIO_U8GetPinValue+0x42>
 2ec:	65 30       	cpi	r22, 0x05	; 5
 2ee:	11 f1       	breq	.+68     	; 0x334 <DIO_U8GetPinValue+0x58>
 2f0:	2c c0       	rjmp	.+88     	; 0x34a <DIO_U8GetPinValue+0x6e>
 2f2:	29 b3       	in	r18, 0x19	; 25
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	a9 01       	movw	r20, r18
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_U8GetPinValue+0x22>
 2fa:	55 95       	asr	r21
 2fc:	47 95       	ror	r20
 2fe:	8a 95       	dec	r24
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_U8GetPinValue+0x1e>
 302:	ca 01       	movw	r24, r20
 304:	81 70       	andi	r24, 0x01	; 1
 306:	08 95       	ret
 308:	26 b3       	in	r18, 0x16	; 22
 30a:	30 e0       	ldi	r19, 0x00	; 0
 30c:	a9 01       	movw	r20, r18
 30e:	02 c0       	rjmp	.+4      	; 0x314 <DIO_U8GetPinValue+0x38>
 310:	55 95       	asr	r21
 312:	47 95       	ror	r20
 314:	8a 95       	dec	r24
 316:	e2 f7       	brpl	.-8      	; 0x310 <DIO_U8GetPinValue+0x34>
 318:	ca 01       	movw	r24, r20
 31a:	81 70       	andi	r24, 0x01	; 1
 31c:	08 95       	ret
 31e:	23 b3       	in	r18, 0x13	; 19
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	a9 01       	movw	r20, r18
 324:	02 c0       	rjmp	.+4      	; 0x32a <DIO_U8GetPinValue+0x4e>
 326:	55 95       	asr	r21
 328:	47 95       	ror	r20
 32a:	8a 95       	dec	r24
 32c:	e2 f7       	brpl	.-8      	; 0x326 <DIO_U8GetPinValue+0x4a>
 32e:	ca 01       	movw	r24, r20
 330:	81 70       	andi	r24, 0x01	; 1
 332:	08 95       	ret
 334:	20 b3       	in	r18, 0x10	; 16
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	a9 01       	movw	r20, r18
 33a:	02 c0       	rjmp	.+4      	; 0x340 <DIO_U8GetPinValue+0x64>
 33c:	55 95       	asr	r21
 33e:	47 95       	ror	r20
 340:	8a 95       	dec	r24
 342:	e2 f7       	brpl	.-8      	; 0x33c <DIO_U8GetPinValue+0x60>
 344:	ca 01       	movw	r24, r20
 346:	81 70       	andi	r24, 0x01	; 1
 348:	08 95       	ret
 34a:	80 e0       	ldi	r24, 0x00	; 0
 34c:	08 95       	ret

0000034e <DIO_VoidSetHigh4BitDirection>:


void DIO_VoidSetHigh4BitDirection(u8 port_number,u8 Direction)
{
	switch(port_number)
 34e:	83 30       	cpi	r24, 0x03	; 3
 350:	81 f0       	breq	.+32     	; 0x372 <DIO_VoidSetHigh4BitDirection+0x24>
 352:	18 f4       	brcc	.+6      	; 0x35a <DIO_VoidSetHigh4BitDirection+0xc>
 354:	82 30       	cpi	r24, 0x02	; 2
 356:	31 f0       	breq	.+12     	; 0x364 <DIO_VoidSetHigh4BitDirection+0x16>
 358:	08 95       	ret
 35a:	84 30       	cpi	r24, 0x04	; 4
 35c:	89 f0       	breq	.+34     	; 0x380 <DIO_VoidSetHigh4BitDirection+0x32>
 35e:	85 30       	cpi	r24, 0x05	; 5
 360:	b1 f0       	breq	.+44     	; 0x38e <DIO_VoidSetHigh4BitDirection+0x40>
 362:	08 95       	ret
	{
		case portA:
			DDRA_REG &=0X0F;
 364:	8a b3       	in	r24, 0x1a	; 26
 366:	8f 70       	andi	r24, 0x0F	; 15
 368:	8a bb       	out	0x1a, r24	; 26
			DDRA_REG |=Direction;
 36a:	8a b3       	in	r24, 0x1a	; 26
 36c:	68 2b       	or	r22, r24
 36e:	6a bb       	out	0x1a, r22	; 26
			break;
 370:	08 95       	ret
			
		case portB:
			DDRA_REG &=0X0F;
 372:	8a b3       	in	r24, 0x1a	; 26
 374:	8f 70       	andi	r24, 0x0F	; 15
 376:	8a bb       	out	0x1a, r24	; 26
			DDRA_REG |=Direction;
 378:	8a b3       	in	r24, 0x1a	; 26
 37a:	68 2b       	or	r22, r24
 37c:	6a bb       	out	0x1a, r22	; 26
			break;
 37e:	08 95       	ret
			
		case portC:
			DDRA_REG &=0X0F;
 380:	8a b3       	in	r24, 0x1a	; 26
 382:	8f 70       	andi	r24, 0x0F	; 15
 384:	8a bb       	out	0x1a, r24	; 26
			DDRA_REG |=Direction;
 386:	8a b3       	in	r24, 0x1a	; 26
 388:	68 2b       	or	r22, r24
 38a:	6a bb       	out	0x1a, r22	; 26
			break;
 38c:	08 95       	ret
			
		case portD:
			DDRA_REG &=0X0F;
 38e:	8a b3       	in	r24, 0x1a	; 26
 390:	8f 70       	andi	r24, 0x0F	; 15
 392:	8a bb       	out	0x1a, r24	; 26
			DDRA_REG |=Direction;
 394:	8a b3       	in	r24, 0x1a	; 26
 396:	68 2b       	or	r22, r24
 398:	6a bb       	out	0x1a, r22	; 26
 39a:	08 95       	ret

0000039c <DIO_VoidSetHigh4BitValue>:
	}
}

void DIO_VoidSetHigh4BitValue(u8 port_number,u8 value)
{
	switch(port_number)
 39c:	83 30       	cpi	r24, 0x03	; 3
 39e:	81 f0       	breq	.+32     	; 0x3c0 <DIO_VoidSetHigh4BitValue+0x24>
 3a0:	18 f4       	brcc	.+6      	; 0x3a8 <DIO_VoidSetHigh4BitValue+0xc>
 3a2:	82 30       	cpi	r24, 0x02	; 2
 3a4:	31 f0       	breq	.+12     	; 0x3b2 <DIO_VoidSetHigh4BitValue+0x16>
 3a6:	08 95       	ret
 3a8:	84 30       	cpi	r24, 0x04	; 4
 3aa:	89 f0       	breq	.+34     	; 0x3ce <DIO_VoidSetHigh4BitValue+0x32>
 3ac:	85 30       	cpi	r24, 0x05	; 5
 3ae:	b1 f0       	breq	.+44     	; 0x3dc <DIO_VoidSetHigh4BitValue+0x40>
 3b0:	08 95       	ret
	{
		case portA:
			PORTA_REG &=0X0F;
 3b2:	8b b3       	in	r24, 0x1b	; 27
 3b4:	8f 70       	andi	r24, 0x0F	; 15
 3b6:	8b bb       	out	0x1b, r24	; 27
			PORTA_REG |=value;
 3b8:	8b b3       	in	r24, 0x1b	; 27
 3ba:	68 2b       	or	r22, r24
 3bc:	6b bb       	out	0x1b, r22	; 27
			break;
 3be:	08 95       	ret
			
		case portB:
			PORTB_REG &=0X0F;
 3c0:	88 b3       	in	r24, 0x18	; 24
 3c2:	8f 70       	andi	r24, 0x0F	; 15
 3c4:	88 bb       	out	0x18, r24	; 24
			PORTB_REG |=value;
 3c6:	88 b3       	in	r24, 0x18	; 24
 3c8:	68 2b       	or	r22, r24
 3ca:	68 bb       	out	0x18, r22	; 24
			break;
 3cc:	08 95       	ret
			
		case portC:
			PORTC_REG &=0X0F;
 3ce:	85 b3       	in	r24, 0x15	; 21
 3d0:	8f 70       	andi	r24, 0x0F	; 15
 3d2:	85 bb       	out	0x15, r24	; 21
			PORTC_REG |=value;
 3d4:	85 b3       	in	r24, 0x15	; 21
 3d6:	68 2b       	or	r22, r24
 3d8:	65 bb       	out	0x15, r22	; 21
			break;
 3da:	08 95       	ret
			
		case portD:
			PORTD_REG &=0X0F;
 3dc:	82 b3       	in	r24, 0x12	; 18
 3de:	8f 70       	andi	r24, 0x0F	; 15
 3e0:	82 bb       	out	0x12, r24	; 18
			PORTD_REG |=value;
 3e2:	82 b3       	in	r24, 0x12	; 18
 3e4:	68 2b       	or	r22, r24
 3e6:	62 bb       	out	0x12, r22	; 18
 3e8:	08 95       	ret

000003ea <Keypad_VoidInit>:
										{'1','2','3','-'},
										{' ','0','=','+'}	};

void Keypad_VoidInit(void)
{
	DIO_VoidSetPinDirection(R0,KEYPADPORT,INPUT);
 3ea:	40 e0       	ldi	r20, 0x00	; 0
 3ec:	62 e0       	ldi	r22, 0x02	; 2
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(R1,KEYPADPORT,INPUT);
 3f4:	40 e0       	ldi	r20, 0x00	; 0
 3f6:	62 e0       	ldi	r22, 0x02	; 2
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(R2,KEYPADPORT,INPUT);
 3fe:	40 e0       	ldi	r20, 0x00	; 0
 400:	62 e0       	ldi	r22, 0x02	; 2
 402:	82 e0       	ldi	r24, 0x02	; 2
 404:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(R3,KEYPADPORT,INPUT);
 408:	40 e0       	ldi	r20, 0x00	; 0
 40a:	62 e0       	ldi	r22, 0x02	; 2
 40c:	83 e0       	ldi	r24, 0x03	; 3
 40e:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	
	DIO_VoidSetPinDirection(C0,KEYPADPORT,OUTPUT);
 412:	41 e0       	ldi	r20, 0x01	; 1
 414:	62 e0       	ldi	r22, 0x02	; 2
 416:	84 e0       	ldi	r24, 0x04	; 4
 418:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(C1,KEYPADPORT,OUTPUT);
 41c:	41 e0       	ldi	r20, 0x01	; 1
 41e:	62 e0       	ldi	r22, 0x02	; 2
 420:	85 e0       	ldi	r24, 0x05	; 5
 422:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(C2,KEYPADPORT,OUTPUT);
 426:	41 e0       	ldi	r20, 0x01	; 1
 428:	62 e0       	ldi	r22, 0x02	; 2
 42a:	86 e0       	ldi	r24, 0x06	; 6
 42c:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(C3,KEYPADPORT,OUTPUT);
 430:	41 e0       	ldi	r20, 0x01	; 1
 432:	62 e0       	ldi	r22, 0x02	; 2
 434:	87 e0       	ldi	r24, 0x07	; 7
 436:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	
	DIO_VoidSetPortValue(KEYPADPORT,0xFF);
 43a:	6f ef       	ldi	r22, 0xFF	; 255
 43c:	82 e0       	ldi	r24, 0x02	; 2
 43e:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <DIO_VoidSetPortValue>
 442:	08 95       	ret

00000444 <Keypad_U8_GetPressed>:
}

u8 Keypad_U8_GetPressed(void)
{
 444:	0f 93       	push	r16
 446:	1f 93       	push	r17
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
 44c:	00 d0       	rcall	.+0      	; 0x44e <Keypad_U8_GetPressed+0xa>
 44e:	cd b7       	in	r28, 0x3d	; 61
 450:	de b7       	in	r29, 0x3e	; 62
	u8 keypad_pressed_flag=0;
	volatile u8 row_count=ROW_INIT;
 452:	19 82       	std	Y+1, r1	; 0x01
	volatile u8 col_count=COL_INIT;
 454:	84 e0       	ldi	r24, 0x04	; 4
 456:	8a 83       	std	Y+2, r24	; 0x02
	u8 result=0;
 458:	10 e0       	ldi	r17, 0x00	; 0
	DIO_VoidSetPortValue(KEYPADPORT,0xFF);
}

u8 Keypad_U8_GetPressed(void)
{
	u8 keypad_pressed_flag=0;
 45a:	00 e0       	ldi	r16, 0x00	; 0
	volatile u8 row_count=ROW_INIT;
	volatile u8 col_count=COL_INIT;
	u8 result=0;
	while(1)
	{
		for (col_count=COL_INIT; col_count<COL_END; col_count++)
 45c:	84 e0       	ldi	r24, 0x04	; 4
 45e:	8a 83       	std	Y+2, r24	; 0x02
 460:	3a c0       	rjmp	.+116    	; 0x4d6 <Keypad_U8_GetPressed+0x92>
		{
			/*************Activate column*****************/
			DIO_VoidSetPinValue(col_count,KEYPADPORT,LOW);
 462:	8a 81       	ldd	r24, Y+2	; 0x02
 464:	40 e0       	ldi	r20, 0x00	; 0
 466:	62 e0       	ldi	r22, 0x02	; 2
 468:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
			
			for (row_count=ROW_INIT; row_count<ROW_END; row_count++)
 46c:	19 82       	std	Y+1, r1	; 0x01
 46e:	28 c0       	rjmp	.+80     	; 0x4c0 <Keypad_U8_GetPressed+0x7c>
			{
				if (DIO_U8GetPinValue(row_count,KEYPADPORT) == LOW)
 470:	89 81       	ldd	r24, Y+1	; 0x01
 472:	62 e0       	ldi	r22, 0x02	; 2
 474:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DIO_U8GetPinValue>
 478:	81 11       	cpse	r24, r1
 47a:	1f c0       	rjmp	.+62     	; 0x4ba <Keypad_U8_GetPressed+0x76>
				{
					result=arrkeypadvalue[row_count-ROW_INIT][col_count-COL_INIT];
 47c:	e9 81       	ldd	r30, Y+1	; 0x01
 47e:	2e 2f       	mov	r18, r30
 480:	30 e0       	ldi	r19, 0x00	; 0
 482:	8a 81       	ldd	r24, Y+2	; 0x02
 484:	e8 2f       	mov	r30, r24
 486:	f0 e0       	ldi	r31, 0x00	; 0
 488:	cf 01       	movw	r24, r30
 48a:	04 97       	sbiw	r24, 0x04	; 4
 48c:	f9 01       	movw	r30, r18
 48e:	ee 0f       	add	r30, r30
 490:	ff 1f       	adc	r31, r31
 492:	ee 0f       	add	r30, r30
 494:	ff 1f       	adc	r31, r31
 496:	e0 5a       	subi	r30, 0xA0	; 160
 498:	ff 4f       	sbci	r31, 0xFF	; 255
 49a:	e8 0f       	add	r30, r24
 49c:	f9 1f       	adc	r31, r25
 49e:	10 81       	ld	r17, Z
					
					while(DIO_U8GetPinValue(row_count,KEYPADPORT) == LOW);  //stuck till button is not pressed (single press)
 4a0:	89 81       	ldd	r24, Y+1	; 0x01
 4a2:	62 e0       	ldi	r22, 0x02	; 2
 4a4:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DIO_U8GetPinValue>
 4a8:	88 23       	and	r24, r24
 4aa:	d1 f3       	breq	.-12     	; 0x4a0 <Keypad_U8_GetPressed+0x5c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4ac:	8f e1       	ldi	r24, 0x1F	; 31
 4ae:	9e e4       	ldi	r25, 0x4E	; 78
 4b0:	01 97       	sbiw	r24, 0x01	; 1
 4b2:	f1 f7       	brne	.-4      	; 0x4b0 <Keypad_U8_GetPressed+0x6c>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <Keypad_U8_GetPressed+0x72>
 4b6:	00 00       	nop
					
					_delay_ms(10); //delay to avoid bouncing
					
					keypad_pressed_flag=1;
 4b8:	01 e0       	ldi	r16, 0x01	; 1
		for (col_count=COL_INIT; col_count<COL_END; col_count++)
		{
			/*************Activate column*****************/
			DIO_VoidSetPinValue(col_count,KEYPADPORT,LOW);
			
			for (row_count=ROW_INIT; row_count<ROW_END; row_count++)
 4ba:	89 81       	ldd	r24, Y+1	; 0x01
 4bc:	8f 5f       	subi	r24, 0xFF	; 255
 4be:	89 83       	std	Y+1, r24	; 0x01
 4c0:	89 81       	ldd	r24, Y+1	; 0x01
 4c2:	84 30       	cpi	r24, 0x04	; 4
 4c4:	a8 f2       	brcs	.-86     	; 0x470 <Keypad_U8_GetPressed+0x2c>
					
				}
			}
			
			/*************Deactivate column*****************/
			DIO_VoidSetPinValue(col_count,KEYPADPORT,HIGH);
 4c6:	8a 81       	ldd	r24, Y+2	; 0x02
 4c8:	41 e0       	ldi	r20, 0x01	; 1
 4ca:	62 e0       	ldi	r22, 0x02	; 2
 4cc:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
	volatile u8 row_count=ROW_INIT;
	volatile u8 col_count=COL_INIT;
	u8 result=0;
	while(1)
	{
		for (col_count=COL_INIT; col_count<COL_END; col_count++)
 4d0:	8a 81       	ldd	r24, Y+2	; 0x02
 4d2:	8f 5f       	subi	r24, 0xFF	; 255
 4d4:	8a 83       	std	Y+2, r24	; 0x02
 4d6:	8a 81       	ldd	r24, Y+2	; 0x02
 4d8:	88 30       	cpi	r24, 0x08	; 8
 4da:	18 f2       	brcs	.-122    	; 0x462 <Keypad_U8_GetPressed+0x1e>
			
			/*************Deactivate column*****************/
			DIO_VoidSetPinValue(col_count,KEYPADPORT,HIGH);
		}
		
		if (keypad_pressed_flag==1)
 4dc:	01 30       	cpi	r16, 0x01	; 1
 4de:	09 f0       	breq	.+2      	; 0x4e2 <Keypad_U8_GetPressed+0x9e>
 4e0:	bd cf       	rjmp	.-134    	; 0x45c <Keypad_U8_GetPressed+0x18>
			break;
		}
	}
	
	return result;
}
 4e2:	81 2f       	mov	r24, r17
 4e4:	0f 90       	pop	r0
 4e6:	0f 90       	pop	r0
 4e8:	df 91       	pop	r29
 4ea:	cf 91       	pop	r28
 4ec:	1f 91       	pop	r17
 4ee:	0f 91       	pop	r16
 4f0:	08 95       	ret

000004f2 <LCD_Void_4BitSendCommand>:
/************************************************************************/

static u8 INIT_step_finished=0;

void LCD_Void_4BitSendCommand(u8 command)
{
 4f2:	cf 93       	push	r28
 4f4:	c8 2f       	mov	r28, r24
	u8 COMMAND=command;
	DIO_VoidSetPinValue(RS,CONTROLPORT,LOW);
 4f6:	40 e0       	ldi	r20, 0x00	; 0
 4f8:	65 e0       	ldi	r22, 0x05	; 5
 4fa:	80 e0       	ldi	r24, 0x00	; 0
 4fc:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RW,CONTROLPORT,LOW);
 500:	40 e0       	ldi	r20, 0x00	; 0
 502:	65 e0       	ldi	r22, 0x05	; 5
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
	
	COMMAND =(command) & (0XF0);
 50a:	6c 2f       	mov	r22, r28
 50c:	60 7f       	andi	r22, 0xF0	; 240
	
	if (UPPER_PINS_4BIT ==1)
	{
		DIO_VoidSetHigh4BitValue(DATAPORT,COMMAND);
 50e:	85 e0       	ldi	r24, 0x05	; 5
 510:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_VoidSetHigh4BitValue>
	else
	{
		DIO_VoidSetLow4BitValue(DATAPORT,COMMAND);
	}
	
	DIO_VoidSetPinValue(EN,CONTROLPORT,HIGH);
 514:	41 e0       	ldi	r20, 0x01	; 1
 516:	65 e0       	ldi	r22, 0x05	; 5
 518:	82 e0       	ldi	r24, 0x02	; 2
 51a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
 51e:	8f e9       	ldi	r24, 0x9F	; 159
 520:	9f e0       	ldi	r25, 0x0F	; 15
 522:	01 97       	sbiw	r24, 0x01	; 1
 524:	f1 f7       	brne	.-4      	; 0x522 <LCD_Void_4BitSendCommand+0x30>
 526:	00 c0       	rjmp	.+0      	; 0x528 <LCD_Void_4BitSendCommand+0x36>
 528:	00 00       	nop
	_delay_ms(2);
	DIO_VoidSetPinValue(EN,CONTROLPORT,LOW);
 52a:	40 e0       	ldi	r20, 0x00	; 0
 52c:	65 e0       	ldi	r22, 0x05	; 5
 52e:	82 e0       	ldi	r24, 0x02	; 2
 530:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
	
	if (INIT_step_finished==1)
 534:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 538:	81 30       	cpi	r24, 0x01	; 1
 53a:	b9 f4       	brne	.+46     	; 0x56a <LCD_Void_4BitSendCommand+0x78>
	{
		COMMAND =(command<<4) & (0XF0);
 53c:	90 e1       	ldi	r25, 0x10	; 16
 53e:	c9 9f       	mul	r28, r25
 540:	b0 01       	movw	r22, r0
 542:	11 24       	eor	r1, r1
		
		if (UPPER_PINS_4BIT ==1)
		{
			DIO_VoidSetHigh4BitValue(DATAPORT,COMMAND);
 544:	85 e0       	ldi	r24, 0x05	; 5
 546:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_VoidSetHigh4BitValue>
		else
		{
			DIO_VoidSetLow4BitValue(DATAPORT,COMMAND);
		}
		
		DIO_VoidSetPinValue(EN,CONTROLPORT,HIGH);
 54a:	41 e0       	ldi	r20, 0x01	; 1
 54c:	65 e0       	ldi	r22, 0x05	; 5
 54e:	82 e0       	ldi	r24, 0x02	; 2
 550:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
 554:	8f e9       	ldi	r24, 0x9F	; 159
 556:	9f e0       	ldi	r25, 0x0F	; 15
 558:	01 97       	sbiw	r24, 0x01	; 1
 55a:	f1 f7       	brne	.-4      	; 0x558 <LCD_Void_4BitSendCommand+0x66>
 55c:	00 c0       	rjmp	.+0      	; 0x55e <LCD_Void_4BitSendCommand+0x6c>
 55e:	00 00       	nop
		_delay_ms(2);
		DIO_VoidSetPinValue(EN,CONTROLPORT,LOW);
 560:	40 e0       	ldi	r20, 0x00	; 0
 562:	65 e0       	ldi	r22, 0x05	; 5
 564:	82 e0       	ldi	r24, 0x02	; 2
 566:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
 56a:	8f e9       	ldi	r24, 0x9F	; 159
 56c:	9f e0       	ldi	r25, 0x0F	; 15
 56e:	01 97       	sbiw	r24, 0x01	; 1
 570:	f1 f7       	brne	.-4      	; 0x56e <LCD_Void_4BitSendCommand+0x7c>
 572:	00 c0       	rjmp	.+0      	; 0x574 <LCD_Void_4BitSendCommand+0x82>
 574:	00 00       	nop
	}
	_delay_ms(2);
}
 576:	cf 91       	pop	r28
 578:	08 95       	ret

0000057a <LCD_Void_4BitInit>:

void LCD_Void_4BitInit(void)
{
	INIT_step_finished=0;
 57a:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
	DIO_VoidSetPinDirection(RS,CONTROLPORT,OUTPUT);
 57e:	41 e0       	ldi	r20, 0x01	; 1
 580:	65 e0       	ldi	r22, 0x05	; 5
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(RW,CONTROLPORT,OUTPUT);
 588:	41 e0       	ldi	r20, 0x01	; 1
 58a:	65 e0       	ldi	r22, 0x05	; 5
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(EN,CONTROLPORT,OUTPUT);
 592:	41 e0       	ldi	r20, 0x01	; 1
 594:	65 e0       	ldi	r22, 0x05	; 5
 596:	82 e0       	ldi	r24, 0x02	; 2
 598:	0e 94 49 00 	call	0x92	; 0x92 <DIO_VoidSetPinDirection>
	
	if (UPPER_PINS_4BIT ==1)
	{
		DIO_VoidSetHigh4BitDirection(DATAPORT,0XF0);
 59c:	60 ef       	ldi	r22, 0xF0	; 240
 59e:	85 e0       	ldi	r24, 0x05	; 5
 5a0:	0e 94 a7 01 	call	0x34e	; 0x34e <DIO_VoidSetHigh4BitDirection>
 5a4:	8f e5       	ldi	r24, 0x5F	; 95
 5a6:	9a ee       	ldi	r25, 0xEA	; 234
 5a8:	01 97       	sbiw	r24, 0x01	; 1
 5aa:	f1 f7       	brne	.-4      	; 0x5a8 <LCD_Void_4BitInit+0x2e>
 5ac:	00 c0       	rjmp	.+0      	; 0x5ae <LCD_Void_4BitInit+0x34>
 5ae:	00 00       	nop
		DIO_VoidSetLow4BitDirection(DATAPORT,0X0F);
	}
	
	
	_delay_ms(30);
	LCD_Void_4BitSendCommand((FUNCTIONSET_4BIT>>4) & (0XF0));
 5b0:	80 e2       	ldi	r24, 0x20	; 32
 5b2:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((FUNCTIONSET_4BIT) & (0X0F0));
 5b6:	80 e2       	ldi	r24, 0x20	; 32
 5b8:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((FUNCTIONSET_4BIT<<4) & (0XF0));
 5bc:	80 e8       	ldi	r24, 0x80	; 128
 5be:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
 5c2:	8f e9       	ldi	r24, 0x9F	; 159
 5c4:	9f e0       	ldi	r25, 0x0F	; 15
 5c6:	01 97       	sbiw	r24, 0x01	; 1
 5c8:	f1 f7       	brne	.-4      	; 0x5c6 <LCD_Void_4BitInit+0x4c>
 5ca:	00 c0       	rjmp	.+0      	; 0x5cc <LCD_Void_4BitInit+0x52>
 5cc:	00 00       	nop
	_delay_ms(2);
	LCD_Void_4BitSendCommand((DISPLAYON) & (0XF0));
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((DISPLAYON<<4) & (0XF0));
 5d4:	80 ee       	ldi	r24, 0xE0	; 224
 5d6:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
 5da:	8f e9       	ldi	r24, 0x9F	; 159
 5dc:	9f e0       	ldi	r25, 0x0F	; 15
 5de:	01 97       	sbiw	r24, 0x01	; 1
 5e0:	f1 f7       	brne	.-4      	; 0x5de <LCD_Void_4BitInit+0x64>
 5e2:	00 c0       	rjmp	.+0      	; 0x5e4 <LCD_Void_4BitInit+0x6a>
 5e4:	00 00       	nop
	_delay_ms(2);
	LCD_Void_4BitSendCommand((DISPLAYCLEAR) & (0XF0));
 5e6:	80 e0       	ldi	r24, 0x00	; 0
 5e8:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((DISPLAYCLEAR<<4) & (0XF0));
 5ec:	80 e1       	ldi	r24, 0x10	; 16
 5ee:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
 5f2:	8f e2       	ldi	r24, 0x2F	; 47
 5f4:	95 e7       	ldi	r25, 0x75	; 117
 5f6:	01 97       	sbiw	r24, 0x01	; 1
 5f8:	f1 f7       	brne	.-4      	; 0x5f6 <LCD_Void_4BitInit+0x7c>
 5fa:	00 c0       	rjmp	.+0      	; 0x5fc <LCD_Void_4BitInit+0x82>
 5fc:	00 00       	nop
	_delay_ms(15);
	LCD_Void_4BitSendCommand((ENTRYMODESET) & (0XF0));
 5fe:	80 e0       	ldi	r24, 0x00	; 0
 600:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((ENTRYMODESET<<4) & (0XF0));
 604:	80 e2       	ldi	r24, 0x20	; 32
 606:	0e 94 79 02 	call	0x4f2	; 0x4f2 <LCD_Void_4BitSendCommand>
	
	INIT_step_finished=1;
 60a:	81 e0       	ldi	r24, 0x01	; 1
 60c:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
 610:	08 95       	ret

00000612 <LCD_Void_4BitSendChar>:
}


/* LCD_VoidSendChar('0')  */
void LCD_Void_4BitSendChar(u8 data)
{
 612:	cf 93       	push	r28
 614:	c8 2f       	mov	r28, r24
	u8 DATA =data;
	DIO_VoidSetPinValue(RS,CONTROLPORT,HIGH);
 616:	41 e0       	ldi	r20, 0x01	; 1
 618:	65 e0       	ldi	r22, 0x05	; 5
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RW,CONTROLPORT,LOW);
 620:	40 e0       	ldi	r20, 0x00	; 0
 622:	65 e0       	ldi	r22, 0x05	; 5
 624:	81 e0       	ldi	r24, 0x01	; 1
 626:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
	
	
	DATA =(data) & (0XF0);
 62a:	6c 2f       	mov	r22, r28
 62c:	60 7f       	andi	r22, 0xF0	; 240
	
	if (UPPER_PINS_4BIT ==1)
	{
		DIO_VoidSetHigh4BitValue(DATAPORT,DATA);
 62e:	85 e0       	ldi	r24, 0x05	; 5
 630:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_VoidSetHigh4BitValue>
	else
	{
		DIO_VoidSetLow4BitValue(DATAPORT,DATA);
	}
	
	DIO_VoidSetPinValue(EN,CONTROLPORT,HIGH);
 634:	41 e0       	ldi	r20, 0x01	; 1
 636:	65 e0       	ldi	r22, 0x05	; 5
 638:	82 e0       	ldi	r24, 0x02	; 2
 63a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
 63e:	8f e9       	ldi	r24, 0x9F	; 159
 640:	9f e0       	ldi	r25, 0x0F	; 15
 642:	01 97       	sbiw	r24, 0x01	; 1
 644:	f1 f7       	brne	.-4      	; 0x642 <LCD_Void_4BitSendChar+0x30>
 646:	00 c0       	rjmp	.+0      	; 0x648 <LCD_Void_4BitSendChar+0x36>
 648:	00 00       	nop
	_delay_ms(2);
	DIO_VoidSetPinValue(EN,CONTROLPORT,LOW);
 64a:	40 e0       	ldi	r20, 0x00	; 0
 64c:	65 e0       	ldi	r22, 0x05	; 5
 64e:	82 e0       	ldi	r24, 0x02	; 2
 650:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
	
	DATA =(data<<4) & (0XF0);
 654:	90 e1       	ldi	r25, 0x10	; 16
 656:	c9 9f       	mul	r28, r25
 658:	b0 01       	movw	r22, r0
 65a:	11 24       	eor	r1, r1
	
	if (UPPER_PINS_4BIT ==1)
	{
		DIO_VoidSetHigh4BitValue(DATAPORT,DATA);
 65c:	85 e0       	ldi	r24, 0x05	; 5
 65e:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_VoidSetHigh4BitValue>
	else
	{
		DIO_VoidSetLow4BitValue(DATAPORT,DATA);
	}
	
	DIO_VoidSetPinValue(EN,CONTROLPORT,HIGH);
 662:	41 e0       	ldi	r20, 0x01	; 1
 664:	65 e0       	ldi	r22, 0x05	; 5
 666:	82 e0       	ldi	r24, 0x02	; 2
 668:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
 66c:	8f e9       	ldi	r24, 0x9F	; 159
 66e:	9f e0       	ldi	r25, 0x0F	; 15
 670:	01 97       	sbiw	r24, 0x01	; 1
 672:	f1 f7       	brne	.-4      	; 0x670 <LCD_Void_4BitSendChar+0x5e>
 674:	00 c0       	rjmp	.+0      	; 0x676 <LCD_Void_4BitSendChar+0x64>
 676:	00 00       	nop
	_delay_ms(2);
	DIO_VoidSetPinValue(EN,CONTROLPORT,LOW);
 678:	40 e0       	ldi	r20, 0x00	; 0
 67a:	65 e0       	ldi	r22, 0x05	; 5
 67c:	82 e0       	ldi	r24, 0x02	; 2
 67e:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_VoidSetPinValue>
}
 682:	cf 91       	pop	r28
 684:	08 95       	ret

00000686 <main>:
int main(void)
{
	
    /* Replace with your application code */

	LCD_Void_4BitInit();
 686:	0e 94 bd 02 	call	0x57a	; 0x57a <LCD_Void_4BitInit>
	Keypad_VoidInit();
 68a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Keypad_VoidInit>
	u8 x;
    while (1) 
    {
	
		x=Keypad_U8_GetPressed();
 68e:	0e 94 22 02 	call	0x444	; 0x444 <Keypad_U8_GetPressed>
		LCD_Void_4BitSendChar(x);
 692:	0e 94 09 03 	call	0x612	; 0x612 <LCD_Void_4BitSendChar>
 696:	fb cf       	rjmp	.-10     	; 0x68e <main+0x8>

00000698 <_exit>:
 698:	f8 94       	cli

0000069a <__stop_program>:
 69a:	ff cf       	rjmp	.-2      	; 0x69a <__stop_program>
