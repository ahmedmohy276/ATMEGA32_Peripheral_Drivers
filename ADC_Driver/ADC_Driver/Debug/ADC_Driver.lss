
ADC_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  00000c9c  00000d30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  0080007e  0080007e  00000d4e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d4e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00000dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000203a  00000000  00000000  00000f44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b0b  00000000  00000000  00002f7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001305  00000000  00000000  00003a89  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000460  00000000  00000000  00004d90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009f1  00000000  00000000  000051f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000231d  00000000  00000000  00005be1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  00007efe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 39 00 	jmp	0x72	; 0x72 <__ctors_end>
   4:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   8:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  10:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  14:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  18:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  1c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  20:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  24:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  28:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  2c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  30:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  34:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  38:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  3c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  40:	0c 94 cb 01 	jmp	0x396	; 0x396 <__vector_16>
  44:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  48:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  4c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  50:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  54:	67 00       	.word	0x0067	; ????
  56:	77 00       	.word	0x0077	; ????
  58:	87 00       	.word	0x0087	; ????
  5a:	97 00       	.word	0x0097	; ????
  5c:	a7 00       	.word	0x00a7	; ????
  5e:	b7 00       	.word	0x00b7	; ????
  60:	c7 00       	.word	0x00c7	; ????
  62:	d7 00       	.word	0x00d7	; ????
  64:	30 01       	movw	r6, r0
  66:	3a 01       	movw	r6, r20
  68:	44 01       	movw	r8, r8
  6a:	4e 01       	movw	r8, r28
  6c:	58 01       	movw	r10, r16
  6e:	62 01       	movw	r12, r4
  70:	6c 01       	movw	r12, r24

00000072 <__ctors_end>:
  72:	11 24       	eor	r1, r1
  74:	1f be       	out	0x3f, r1	; 63
  76:	cf e5       	ldi	r28, 0x5F	; 95
  78:	d8 e0       	ldi	r29, 0x08	; 8
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	cd bf       	out	0x3d, r28	; 61

0000007e <__do_copy_data>:
  7e:	10 e0       	ldi	r17, 0x00	; 0
  80:	a0 e6       	ldi	r26, 0x60	; 96
  82:	b0 e0       	ldi	r27, 0x00	; 0
  84:	ec e9       	ldi	r30, 0x9C	; 156
  86:	fc e0       	ldi	r31, 0x0C	; 12
  88:	02 c0       	rjmp	.+4      	; 0x8e <__do_copy_data+0x10>
  8a:	05 90       	lpm	r0, Z+
  8c:	0d 92       	st	X+, r0
  8e:	ae 37       	cpi	r26, 0x7E	; 126
  90:	b1 07       	cpc	r27, r17
  92:	d9 f7       	brne	.-10     	; 0x8a <__do_copy_data+0xc>

00000094 <__do_clear_bss>:
  94:	20 e0       	ldi	r18, 0x00	; 0
  96:	ae e7       	ldi	r26, 0x7E	; 126
  98:	b0 e0       	ldi	r27, 0x00	; 0
  9a:	01 c0       	rjmp	.+2      	; 0x9e <.do_clear_bss_start>

0000009c <.do_clear_bss_loop>:
  9c:	1d 92       	st	X+, r1

0000009e <.do_clear_bss_start>:
  9e:	a1 38       	cpi	r26, 0x81	; 129
  a0:	b2 07       	cpc	r27, r18
  a2:	e1 f7       	brne	.-8      	; 0x9c <.do_clear_bss_loop>
  a4:	0e 94 87 05 	call	0xb0e	; 0xb0e <main>
  a8:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <_exit>

000000ac <__bad_interrupt>:
  ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b0 <ADC_VoidEnableADC>:
	digital_result=ADCL_REG;
	digital_result |=(ADCH_REG<<8);
	result =(digital_result/1023.0) *Vref;  //convert the digital result to analog voltage and return it
	
	return result;
}
  b0:	86 b1       	in	r24, 0x06	; 6
  b2:	80 68       	ori	r24, 0x80	; 128
  b4:	86 b9       	out	0x06, r24	; 6
  b6:	08 95       	ret

000000b8 <ADC_VoidSetADCChannel>:
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	fc 01       	movw	r30, r24
  bc:	73 97       	sbiw	r30, 0x13	; 19
  be:	e8 30       	cpi	r30, 0x08	; 8
  c0:	f1 05       	cpc	r31, r1
  c2:	08 f0       	brcs	.+2      	; 0xc6 <ADC_VoidSetADCChannel+0xe>
  c4:	83 c0       	rjmp	.+262    	; 0x1cc <ADC_VoidSetADCChannel+0x114>
  c6:	e6 5d       	subi	r30, 0xD6	; 214
  c8:	ff 4f       	sbci	r31, 0xFF	; 255
  ca:	0c 94 db 05 	jmp	0xbb6	; 0xbb6 <__tablejump2__>
  ce:	87 b1       	in	r24, 0x07	; 7
  d0:	8e 7f       	andi	r24, 0xFE	; 254
  d2:	87 b9       	out	0x07, r24	; 7
  d4:	87 b1       	in	r24, 0x07	; 7
  d6:	8d 7f       	andi	r24, 0xFD	; 253
  d8:	87 b9       	out	0x07, r24	; 7
  da:	87 b1       	in	r24, 0x07	; 7
  dc:	8b 7f       	andi	r24, 0xFB	; 251
  de:	87 b9       	out	0x07, r24	; 7
  e0:	87 b1       	in	r24, 0x07	; 7
  e2:	87 7f       	andi	r24, 0xF7	; 247
  e4:	87 b9       	out	0x07, r24	; 7
  e6:	87 b1       	in	r24, 0x07	; 7
  e8:	8f 7e       	andi	r24, 0xEF	; 239
  ea:	87 b9       	out	0x07, r24	; 7
  ec:	08 95       	ret
  ee:	87 b1       	in	r24, 0x07	; 7
  f0:	81 60       	ori	r24, 0x01	; 1
  f2:	87 b9       	out	0x07, r24	; 7
  f4:	87 b1       	in	r24, 0x07	; 7
  f6:	8d 7f       	andi	r24, 0xFD	; 253
  f8:	87 b9       	out	0x07, r24	; 7
  fa:	87 b1       	in	r24, 0x07	; 7
  fc:	8b 7f       	andi	r24, 0xFB	; 251
  fe:	87 b9       	out	0x07, r24	; 7
 100:	87 b1       	in	r24, 0x07	; 7
 102:	87 7f       	andi	r24, 0xF7	; 247
 104:	87 b9       	out	0x07, r24	; 7
 106:	87 b1       	in	r24, 0x07	; 7
 108:	8f 7e       	andi	r24, 0xEF	; 239
 10a:	87 b9       	out	0x07, r24	; 7
 10c:	08 95       	ret
 10e:	87 b1       	in	r24, 0x07	; 7
 110:	8e 7f       	andi	r24, 0xFE	; 254
 112:	87 b9       	out	0x07, r24	; 7
 114:	87 b1       	in	r24, 0x07	; 7
 116:	82 60       	ori	r24, 0x02	; 2
 118:	87 b9       	out	0x07, r24	; 7
 11a:	87 b1       	in	r24, 0x07	; 7
 11c:	8b 7f       	andi	r24, 0xFB	; 251
 11e:	87 b9       	out	0x07, r24	; 7
 120:	87 b1       	in	r24, 0x07	; 7
 122:	87 7f       	andi	r24, 0xF7	; 247
 124:	87 b9       	out	0x07, r24	; 7
 126:	87 b1       	in	r24, 0x07	; 7
 128:	8f 7e       	andi	r24, 0xEF	; 239
 12a:	87 b9       	out	0x07, r24	; 7
 12c:	08 95       	ret
 12e:	87 b1       	in	r24, 0x07	; 7
 130:	81 60       	ori	r24, 0x01	; 1
 132:	87 b9       	out	0x07, r24	; 7
 134:	87 b1       	in	r24, 0x07	; 7
 136:	82 60       	ori	r24, 0x02	; 2
 138:	87 b9       	out	0x07, r24	; 7
 13a:	87 b1       	in	r24, 0x07	; 7
 13c:	8b 7f       	andi	r24, 0xFB	; 251
 13e:	87 b9       	out	0x07, r24	; 7
 140:	87 b1       	in	r24, 0x07	; 7
 142:	87 7f       	andi	r24, 0xF7	; 247
 144:	87 b9       	out	0x07, r24	; 7
 146:	87 b1       	in	r24, 0x07	; 7
 148:	8f 7e       	andi	r24, 0xEF	; 239
 14a:	87 b9       	out	0x07, r24	; 7
 14c:	08 95       	ret
 14e:	87 b1       	in	r24, 0x07	; 7
 150:	8e 7f       	andi	r24, 0xFE	; 254
 152:	87 b9       	out	0x07, r24	; 7
 154:	87 b1       	in	r24, 0x07	; 7
 156:	8d 7f       	andi	r24, 0xFD	; 253
 158:	87 b9       	out	0x07, r24	; 7
 15a:	87 b1       	in	r24, 0x07	; 7
 15c:	84 60       	ori	r24, 0x04	; 4
 15e:	87 b9       	out	0x07, r24	; 7
 160:	87 b1       	in	r24, 0x07	; 7
 162:	87 7f       	andi	r24, 0xF7	; 247
 164:	87 b9       	out	0x07, r24	; 7
 166:	87 b1       	in	r24, 0x07	; 7
 168:	8f 7e       	andi	r24, 0xEF	; 239
 16a:	87 b9       	out	0x07, r24	; 7
 16c:	08 95       	ret
 16e:	87 b1       	in	r24, 0x07	; 7
 170:	81 60       	ori	r24, 0x01	; 1
 172:	87 b9       	out	0x07, r24	; 7
 174:	87 b1       	in	r24, 0x07	; 7
 176:	8d 7f       	andi	r24, 0xFD	; 253
 178:	87 b9       	out	0x07, r24	; 7
 17a:	87 b1       	in	r24, 0x07	; 7
 17c:	84 60       	ori	r24, 0x04	; 4
 17e:	87 b9       	out	0x07, r24	; 7
 180:	87 b1       	in	r24, 0x07	; 7
 182:	87 7f       	andi	r24, 0xF7	; 247
 184:	87 b9       	out	0x07, r24	; 7
 186:	87 b1       	in	r24, 0x07	; 7
 188:	8f 7e       	andi	r24, 0xEF	; 239
 18a:	87 b9       	out	0x07, r24	; 7
 18c:	08 95       	ret
 18e:	87 b1       	in	r24, 0x07	; 7
 190:	8e 7f       	andi	r24, 0xFE	; 254
 192:	87 b9       	out	0x07, r24	; 7
 194:	87 b1       	in	r24, 0x07	; 7
 196:	82 60       	ori	r24, 0x02	; 2
 198:	87 b9       	out	0x07, r24	; 7
 19a:	87 b1       	in	r24, 0x07	; 7
 19c:	84 60       	ori	r24, 0x04	; 4
 19e:	87 b9       	out	0x07, r24	; 7
 1a0:	87 b1       	in	r24, 0x07	; 7
 1a2:	87 7f       	andi	r24, 0xF7	; 247
 1a4:	87 b9       	out	0x07, r24	; 7
 1a6:	87 b1       	in	r24, 0x07	; 7
 1a8:	8f 7e       	andi	r24, 0xEF	; 239
 1aa:	87 b9       	out	0x07, r24	; 7
 1ac:	08 95       	ret
 1ae:	87 b1       	in	r24, 0x07	; 7
 1b0:	81 60       	ori	r24, 0x01	; 1
 1b2:	87 b9       	out	0x07, r24	; 7
 1b4:	87 b1       	in	r24, 0x07	; 7
 1b6:	82 60       	ori	r24, 0x02	; 2
 1b8:	87 b9       	out	0x07, r24	; 7
 1ba:	87 b1       	in	r24, 0x07	; 7
 1bc:	84 60       	ori	r24, 0x04	; 4
 1be:	87 b9       	out	0x07, r24	; 7
 1c0:	87 b1       	in	r24, 0x07	; 7
 1c2:	87 7f       	andi	r24, 0xF7	; 247
 1c4:	87 b9       	out	0x07, r24	; 7
 1c6:	87 b1       	in	r24, 0x07	; 7
 1c8:	8f 7e       	andi	r24, 0xEF	; 239
 1ca:	87 b9       	out	0x07, r24	; 7
 1cc:	08 95       	ret

000001ce <ADC_VoidSetVref>:
 1ce:	81 30       	cpi	r24, 0x01	; 1
 1d0:	69 f0       	breq	.+26     	; 0x1ec <ADC_VoidSetVref+0x1e>
 1d2:	28 f0       	brcs	.+10     	; 0x1de <ADC_VoidSetVref+0x10>
 1d4:	82 30       	cpi	r24, 0x02	; 2
 1d6:	89 f0       	breq	.+34     	; 0x1fa <ADC_VoidSetVref+0x2c>
 1d8:	83 30       	cpi	r24, 0x03	; 3
 1da:	b1 f0       	breq	.+44     	; 0x208 <ADC_VoidSetVref+0x3a>
 1dc:	08 95       	ret
 1de:	87 b1       	in	r24, 0x07	; 7
 1e0:	8f 7b       	andi	r24, 0xBF	; 191
 1e2:	87 b9       	out	0x07, r24	; 7
 1e4:	87 b1       	in	r24, 0x07	; 7
 1e6:	8f 77       	andi	r24, 0x7F	; 127
 1e8:	87 b9       	out	0x07, r24	; 7
 1ea:	08 95       	ret
 1ec:	87 b1       	in	r24, 0x07	; 7
 1ee:	80 64       	ori	r24, 0x40	; 64
 1f0:	87 b9       	out	0x07, r24	; 7
 1f2:	87 b1       	in	r24, 0x07	; 7
 1f4:	8f 77       	andi	r24, 0x7F	; 127
 1f6:	87 b9       	out	0x07, r24	; 7
 1f8:	08 95       	ret
 1fa:	87 b1       	in	r24, 0x07	; 7
 1fc:	8f 7b       	andi	r24, 0xBF	; 191
 1fe:	87 b9       	out	0x07, r24	; 7
 200:	87 b1       	in	r24, 0x07	; 7
 202:	80 68       	ori	r24, 0x80	; 128
 204:	87 b9       	out	0x07, r24	; 7
 206:	08 95       	ret
 208:	87 b1       	in	r24, 0x07	; 7
 20a:	80 64       	ori	r24, 0x40	; 64
 20c:	87 b9       	out	0x07, r24	; 7
 20e:	87 b1       	in	r24, 0x07	; 7
 210:	80 68       	ori	r24, 0x80	; 128
 212:	87 b9       	out	0x07, r24	; 7
 214:	08 95       	ret

00000216 <ADC_VoidSetAjustResultType>:
 216:	8b 31       	cpi	r24, 0x1B	; 27
 218:	19 f0       	breq	.+6      	; 0x220 <ADC_VoidSetAjustResultType+0xa>
 21a:	8c 31       	cpi	r24, 0x1C	; 28
 21c:	29 f0       	breq	.+10     	; 0x228 <ADC_VoidSetAjustResultType+0x12>
 21e:	08 95       	ret
 220:	87 b1       	in	r24, 0x07	; 7
 222:	8f 7d       	andi	r24, 0xDF	; 223
 224:	87 b9       	out	0x07, r24	; 7
 226:	08 95       	ret
 228:	87 b1       	in	r24, 0x07	; 7
 22a:	80 62       	ori	r24, 0x20	; 32
 22c:	87 b9       	out	0x07, r24	; 7
 22e:	08 95       	ret

00000230 <ADC_VoidSetTriggerType>:
 230:	8d 31       	cpi	r24, 0x1D	; 29
 232:	19 f0       	breq	.+6      	; 0x23a <ADC_VoidSetTriggerType+0xa>
 234:	8e 31       	cpi	r24, 0x1E	; 30
 236:	29 f0       	breq	.+10     	; 0x242 <ADC_VoidSetTriggerType+0x12>
 238:	08 95       	ret
 23a:	86 b1       	in	r24, 0x06	; 6
 23c:	80 62       	ori	r24, 0x20	; 32
 23e:	86 b9       	out	0x06, r24	; 6
 240:	08 95       	ret
 242:	86 b1       	in	r24, 0x06	; 6
 244:	8f 7d       	andi	r24, 0xDF	; 223
 246:	86 b9       	out	0x06, r24	; 6
 248:	08 95       	ret

0000024a <ADC_VoidSetPrescaler>:
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	fc 01       	movw	r30, r24
 24e:	34 97       	sbiw	r30, 0x04	; 4
 250:	e7 30       	cpi	r30, 0x07	; 7
 252:	f1 05       	cpc	r31, r1
 254:	08 f0       	brcs	.+2      	; 0x258 <ADC_VoidSetPrescaler+0xe>
 256:	49 c0       	rjmp	.+146    	; 0x2ea <ADC_VoidSetPrescaler+0xa0>
 258:	ee 5c       	subi	r30, 0xCE	; 206
 25a:	ff 4f       	sbci	r31, 0xFF	; 255
 25c:	0c 94 db 05 	jmp	0xbb6	; 0xbb6 <__tablejump2__>
 260:	86 b1       	in	r24, 0x06	; 6
 262:	8e 7f       	andi	r24, 0xFE	; 254
 264:	86 b9       	out	0x06, r24	; 6
 266:	86 b1       	in	r24, 0x06	; 6
 268:	8d 7f       	andi	r24, 0xFD	; 253
 26a:	86 b9       	out	0x06, r24	; 6
 26c:	86 b1       	in	r24, 0x06	; 6
 26e:	8b 7f       	andi	r24, 0xFB	; 251
 270:	86 b9       	out	0x06, r24	; 6
 272:	08 95       	ret
 274:	86 b1       	in	r24, 0x06	; 6
 276:	8e 7f       	andi	r24, 0xFE	; 254
 278:	86 b9       	out	0x06, r24	; 6
 27a:	86 b1       	in	r24, 0x06	; 6
 27c:	82 60       	ori	r24, 0x02	; 2
 27e:	86 b9       	out	0x06, r24	; 6
 280:	86 b1       	in	r24, 0x06	; 6
 282:	8b 7f       	andi	r24, 0xFB	; 251
 284:	86 b9       	out	0x06, r24	; 6
 286:	08 95       	ret
 288:	86 b1       	in	r24, 0x06	; 6
 28a:	81 60       	ori	r24, 0x01	; 1
 28c:	86 b9       	out	0x06, r24	; 6
 28e:	86 b1       	in	r24, 0x06	; 6
 290:	82 60       	ori	r24, 0x02	; 2
 292:	86 b9       	out	0x06, r24	; 6
 294:	86 b1       	in	r24, 0x06	; 6
 296:	8b 7f       	andi	r24, 0xFB	; 251
 298:	86 b9       	out	0x06, r24	; 6
 29a:	08 95       	ret
 29c:	86 b1       	in	r24, 0x06	; 6
 29e:	8e 7f       	andi	r24, 0xFE	; 254
 2a0:	86 b9       	out	0x06, r24	; 6
 2a2:	86 b1       	in	r24, 0x06	; 6
 2a4:	8d 7f       	andi	r24, 0xFD	; 253
 2a6:	86 b9       	out	0x06, r24	; 6
 2a8:	86 b1       	in	r24, 0x06	; 6
 2aa:	84 60       	ori	r24, 0x04	; 4
 2ac:	86 b9       	out	0x06, r24	; 6
 2ae:	08 95       	ret
 2b0:	86 b1       	in	r24, 0x06	; 6
 2b2:	81 60       	ori	r24, 0x01	; 1
 2b4:	86 b9       	out	0x06, r24	; 6
 2b6:	86 b1       	in	r24, 0x06	; 6
 2b8:	8d 7f       	andi	r24, 0xFD	; 253
 2ba:	86 b9       	out	0x06, r24	; 6
 2bc:	86 b1       	in	r24, 0x06	; 6
 2be:	84 60       	ori	r24, 0x04	; 4
 2c0:	86 b9       	out	0x06, r24	; 6
 2c2:	08 95       	ret
 2c4:	86 b1       	in	r24, 0x06	; 6
 2c6:	8e 7f       	andi	r24, 0xFE	; 254
 2c8:	86 b9       	out	0x06, r24	; 6
 2ca:	86 b1       	in	r24, 0x06	; 6
 2cc:	82 60       	ori	r24, 0x02	; 2
 2ce:	86 b9       	out	0x06, r24	; 6
 2d0:	86 b1       	in	r24, 0x06	; 6
 2d2:	84 60       	ori	r24, 0x04	; 4
 2d4:	86 b9       	out	0x06, r24	; 6
 2d6:	08 95       	ret
 2d8:	86 b1       	in	r24, 0x06	; 6
 2da:	81 60       	ori	r24, 0x01	; 1
 2dc:	86 b9       	out	0x06, r24	; 6
 2de:	86 b1       	in	r24, 0x06	; 6
 2e0:	82 60       	ori	r24, 0x02	; 2
 2e2:	86 b9       	out	0x06, r24	; 6
 2e4:	86 b1       	in	r24, 0x06	; 6
 2e6:	84 60       	ori	r24, 0x04	; 4
 2e8:	86 b9       	out	0x06, r24	; 6
 2ea:	08 95       	ret

000002ec <ADC_VoidEnableDisableInterrupt>:
 2ec:	8f 31       	cpi	r24, 0x1F	; 31
 2ee:	19 f0       	breq	.+6      	; 0x2f6 <ADC_VoidEnableDisableInterrupt+0xa>
 2f0:	80 32       	cpi	r24, 0x20	; 32
 2f2:	41 f0       	breq	.+16     	; 0x304 <ADC_VoidEnableDisableInterrupt+0x18>
 2f4:	08 95       	ret
 2f6:	86 b1       	in	r24, 0x06	; 6
 2f8:	88 60       	ori	r24, 0x08	; 8
 2fa:	86 b9       	out	0x06, r24	; 6
 2fc:	8f b7       	in	r24, 0x3f	; 63
 2fe:	80 68       	ori	r24, 0x80	; 128
 300:	8f bf       	out	0x3f, r24	; 63
 302:	08 95       	ret
 304:	86 b1       	in	r24, 0x06	; 6
 306:	87 7f       	andi	r24, 0xF7	; 247
 308:	86 b9       	out	0x06, r24	; 6
 30a:	08 95       	ret

0000030c <ADC_VoidInit>:
 30c:	ef 92       	push	r14
 30e:	ff 92       	push	r15
 310:	0f 93       	push	r16
 312:	1f 93       	push	r17
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	f8 2e       	mov	r15, r24
 31a:	16 2f       	mov	r17, r22
 31c:	d4 2f       	mov	r29, r20
 31e:	c2 2f       	mov	r28, r18
 320:	0e 94 58 00 	call	0xb0	; 0xb0 <ADC_VoidEnableADC>
 324:	8f 2d       	mov	r24, r15
 326:	0e 94 5c 00 	call	0xb8	; 0xb8 <ADC_VoidSetADCChannel>
 32a:	81 2f       	mov	r24, r17
 32c:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ADC_VoidSetVref>
 330:	8d 2f       	mov	r24, r29
 332:	0e 94 0b 01 	call	0x216	; 0x216 <ADC_VoidSetAjustResultType>
 336:	8c 2f       	mov	r24, r28
 338:	0e 94 18 01 	call	0x230	; 0x230 <ADC_VoidSetTriggerType>
 33c:	80 2f       	mov	r24, r16
 33e:	0e 94 25 01 	call	0x24a	; 0x24a <ADC_VoidSetPrescaler>
 342:	8e 2d       	mov	r24, r14
 344:	0e 94 76 01 	call	0x2ec	; 0x2ec <ADC_VoidEnableDisableInterrupt>
 348:	df 91       	pop	r29
 34a:	cf 91       	pop	r28
 34c:	1f 91       	pop	r17
 34e:	0f 91       	pop	r16
 350:	ff 90       	pop	r15
 352:	ef 90       	pop	r14
 354:	08 95       	ret

00000356 <ADC_VoidStartConversion>:
 356:	86 b1       	in	r24, 0x06	; 6
 358:	80 64       	ori	r24, 0x40	; 64
 35a:	86 b9       	out	0x06, r24	; 6
 35c:	08 95       	ret

0000035e <ADC_VoidPollingADCResult_10BitDigitalResult>:
 35e:	cf 93       	push	r28
 360:	c8 2f       	mov	r28, r24
 362:	40 e0       	ldi	r20, 0x00	; 0
 364:	62 e0       	ldi	r22, 0x02	; 2
 366:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <DIO_VoidSetPinDirection>
 36a:	8c 2f       	mov	r24, r28
 36c:	0e 94 5c 00 	call	0xb8	; 0xb8 <ADC_VoidSetADCChannel>
 370:	0e 94 ab 01 	call	0x356	; 0x356 <ADC_VoidStartConversion>
 374:	34 9b       	sbis	0x06, 4	; 6
 376:	fe cf       	rjmp	.-4      	; 0x374 <ADC_VoidPollingADCResult_10BitDigitalResult+0x16>
 378:	86 b1       	in	r24, 0x06	; 6
 37a:	80 61       	ori	r24, 0x10	; 16
 37c:	86 b9       	out	0x06, r24	; 6
 37e:	86 e0       	ldi	r24, 0x06	; 6
 380:	8a 95       	dec	r24
 382:	f1 f7       	brne	.-4      	; 0x380 <ADC_VoidPollingADCResult_10BitDigitalResult+0x22>
 384:	00 c0       	rjmp	.+0      	; 0x386 <ADC_VoidPollingADCResult_10BitDigitalResult+0x28>
 386:	24 b1       	in	r18, 0x04	; 4
 388:	85 b1       	in	r24, 0x05	; 5
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	98 2f       	mov	r25, r24
 38e:	88 27       	eor	r24, r24
 390:	82 2b       	or	r24, r18
 392:	cf 91       	pop	r28
 394:	08 95       	ret

00000396 <__vector_16>:


ISR(ADC_vect)
{
 396:	1f 92       	push	r1
 398:	0f 92       	push	r0
 39a:	0f b6       	in	r0, 0x3f	; 63
 39c:	0f 92       	push	r0
 39e:	11 24       	eor	r1, r1
 3a0:	2f 93       	push	r18
 3a2:	3f 93       	push	r19
 3a4:	4f 93       	push	r20
 3a6:	5f 93       	push	r21
 3a8:	6f 93       	push	r22
 3aa:	7f 93       	push	r23
 3ac:	8f 93       	push	r24
 3ae:	9f 93       	push	r25
 3b0:	af 93       	push	r26
 3b2:	bf 93       	push	r27
 3b4:	ef 93       	push	r30
 3b6:	ff 93       	push	r31
	ptr();
 3b8:	e0 91 7f 00 	lds	r30, 0x007F	; 0x80007f <ptr>
 3bc:	f0 91 80 00 	lds	r31, 0x0080	; 0x800080 <ptr+0x1>
 3c0:	09 95       	icall
 3c2:	ff 91       	pop	r31
 3c4:	ef 91       	pop	r30
 3c6:	bf 91       	pop	r27
 3c8:	af 91       	pop	r26
 3ca:	9f 91       	pop	r25
 3cc:	8f 91       	pop	r24
 3ce:	7f 91       	pop	r23
 3d0:	6f 91       	pop	r22
 3d2:	5f 91       	pop	r21
 3d4:	4f 91       	pop	r20
 3d6:	3f 91       	pop	r19
 3d8:	2f 91       	pop	r18
 3da:	0f 90       	pop	r0
 3dc:	0f be       	out	0x3f, r0	; 63
 3de:	0f 90       	pop	r0
 3e0:	1f 90       	pop	r1
 3e2:	18 95       	reti

000003e4 <DIO_VoidSetPinDirection>:
			pinvalue =PIND_REG;
			break;
	}
	
	return (pinvalue) ;
}
 3e4:	63 30       	cpi	r22, 0x03	; 3
 3e6:	51 f1       	breq	.+84     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 3e8:	18 f4       	brcc	.+6      	; 0x3f0 <DIO_VoidSetPinDirection+0xc>
 3ea:	62 30       	cpi	r22, 0x02	; 2
 3ec:	41 f0       	breq	.+16     	; 0x3fe <DIO_VoidSetPinDirection+0x1a>
 3ee:	08 95       	ret
 3f0:	64 30       	cpi	r22, 0x04	; 4
 3f2:	09 f4       	brne	.+2      	; 0x3f6 <DIO_VoidSetPinDirection+0x12>
 3f4:	42 c0       	rjmp	.+132    	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 3f6:	65 30       	cpi	r22, 0x05	; 5
 3f8:	09 f4       	brne	.+2      	; 0x3fc <DIO_VoidSetPinDirection+0x18>
 3fa:	5e c0       	rjmp	.+188    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 3fc:	08 95       	ret
 3fe:	41 30       	cpi	r20, 0x01	; 1
 400:	69 f4       	brne	.+26     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 402:	4a b3       	in	r20, 0x1a	; 26
 404:	21 e0       	ldi	r18, 0x01	; 1
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	b9 01       	movw	r22, r18
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40c:	66 0f       	add	r22, r22
 40e:	77 1f       	adc	r23, r23
 410:	8a 95       	dec	r24
 412:	e2 f7       	brpl	.-8      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 414:	cb 01       	movw	r24, r22
 416:	84 2b       	or	r24, r20
 418:	8a bb       	out	0x1a, r24	; 26
 41a:	08 95       	ret
 41c:	41 11       	cpse	r20, r1
 41e:	6a c0       	rjmp	.+212    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 420:	4a b3       	in	r20, 0x1a	; 26
 422:	21 e0       	ldi	r18, 0x01	; 1
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	b9 01       	movw	r22, r18
 428:	02 c0       	rjmp	.+4      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 42a:	66 0f       	add	r22, r22
 42c:	77 1f       	adc	r23, r23
 42e:	8a 95       	dec	r24
 430:	e2 f7       	brpl	.-8      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 432:	cb 01       	movw	r24, r22
 434:	80 95       	com	r24
 436:	84 23       	and	r24, r20
 438:	8a bb       	out	0x1a, r24	; 26
 43a:	08 95       	ret
 43c:	41 30       	cpi	r20, 0x01	; 1
 43e:	69 f4       	brne	.+26     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 440:	47 b3       	in	r20, 0x17	; 23
 442:	21 e0       	ldi	r18, 0x01	; 1
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	b9 01       	movw	r22, r18
 448:	02 c0       	rjmp	.+4      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 44a:	66 0f       	add	r22, r22
 44c:	77 1f       	adc	r23, r23
 44e:	8a 95       	dec	r24
 450:	e2 f7       	brpl	.-8      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 452:	cb 01       	movw	r24, r22
 454:	84 2b       	or	r24, r20
 456:	87 bb       	out	0x17, r24	; 23
 458:	08 95       	ret
 45a:	41 11       	cpse	r20, r1
 45c:	4b c0       	rjmp	.+150    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 45e:	47 b3       	in	r20, 0x17	; 23
 460:	21 e0       	ldi	r18, 0x01	; 1
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	b9 01       	movw	r22, r18
 466:	02 c0       	rjmp	.+4      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 468:	66 0f       	add	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	8a 95       	dec	r24
 46e:	e2 f7       	brpl	.-8      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 470:	cb 01       	movw	r24, r22
 472:	80 95       	com	r24
 474:	84 23       	and	r24, r20
 476:	87 bb       	out	0x17, r24	; 23
 478:	08 95       	ret
 47a:	41 30       	cpi	r20, 0x01	; 1
 47c:	69 f4       	brne	.+26     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 47e:	44 b3       	in	r20, 0x14	; 20
 480:	21 e0       	ldi	r18, 0x01	; 1
 482:	30 e0       	ldi	r19, 0x00	; 0
 484:	b9 01       	movw	r22, r18
 486:	02 c0       	rjmp	.+4      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 488:	66 0f       	add	r22, r22
 48a:	77 1f       	adc	r23, r23
 48c:	8a 95       	dec	r24
 48e:	e2 f7       	brpl	.-8      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 490:	cb 01       	movw	r24, r22
 492:	84 2b       	or	r24, r20
 494:	84 bb       	out	0x14, r24	; 20
 496:	08 95       	ret
 498:	41 11       	cpse	r20, r1
 49a:	2c c0       	rjmp	.+88     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 49c:	44 b3       	in	r20, 0x14	; 20
 49e:	21 e0       	ldi	r18, 0x01	; 1
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	b9 01       	movw	r22, r18
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a6:	66 0f       	add	r22, r22
 4a8:	77 1f       	adc	r23, r23
 4aa:	8a 95       	dec	r24
 4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4ae:	cb 01       	movw	r24, r22
 4b0:	80 95       	com	r24
 4b2:	84 23       	and	r24, r20
 4b4:	84 bb       	out	0x14, r24	; 20
 4b6:	08 95       	ret
 4b8:	41 30       	cpi	r20, 0x01	; 1
 4ba:	69 f4       	brne	.+26     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4bc:	41 b3       	in	r20, 0x11	; 17
 4be:	21 e0       	ldi	r18, 0x01	; 1
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	b9 01       	movw	r22, r18
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4c6:	66 0f       	add	r22, r22
 4c8:	77 1f       	adc	r23, r23
 4ca:	8a 95       	dec	r24
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4ce:	cb 01       	movw	r24, r22
 4d0:	84 2b       	or	r24, r20
 4d2:	81 bb       	out	0x11, r24	; 17
 4d4:	08 95       	ret
 4d6:	41 11       	cpse	r20, r1
 4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4da:	41 b3       	in	r20, 0x11	; 17
 4dc:	21 e0       	ldi	r18, 0x01	; 1
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	b9 01       	movw	r22, r18
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 4e4:	66 0f       	add	r22, r22
 4e6:	77 1f       	adc	r23, r23
 4e8:	8a 95       	dec	r24
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4ec:	cb 01       	movw	r24, r22
 4ee:	80 95       	com	r24
 4f0:	84 23       	and	r24, r20
 4f2:	81 bb       	out	0x11, r24	; 17
 4f4:	08 95       	ret

000004f6 <DIO_VoidSetPinValue>:
 4f6:	63 30       	cpi	r22, 0x03	; 3
 4f8:	51 f1       	breq	.+84     	; 0x54e <DIO_VoidSetPinValue+0x58>
 4fa:	18 f4       	brcc	.+6      	; 0x502 <DIO_VoidSetPinValue+0xc>
 4fc:	62 30       	cpi	r22, 0x02	; 2
 4fe:	41 f0       	breq	.+16     	; 0x510 <DIO_VoidSetPinValue+0x1a>
 500:	08 95       	ret
 502:	64 30       	cpi	r22, 0x04	; 4
 504:	09 f4       	brne	.+2      	; 0x508 <DIO_VoidSetPinValue+0x12>
 506:	42 c0       	rjmp	.+132    	; 0x58c <DIO_VoidSetPinValue+0x96>
 508:	65 30       	cpi	r22, 0x05	; 5
 50a:	09 f4       	brne	.+2      	; 0x50e <DIO_VoidSetPinValue+0x18>
 50c:	5e c0       	rjmp	.+188    	; 0x5ca <DIO_VoidSetPinValue+0xd4>
 50e:	08 95       	ret
 510:	41 30       	cpi	r20, 0x01	; 1
 512:	69 f4       	brne	.+26     	; 0x52e <DIO_VoidSetPinValue+0x38>
 514:	4b b3       	in	r20, 0x1b	; 27
 516:	21 e0       	ldi	r18, 0x01	; 1
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	b9 01       	movw	r22, r18
 51c:	02 c0       	rjmp	.+4      	; 0x522 <DIO_VoidSetPinValue+0x2c>
 51e:	66 0f       	add	r22, r22
 520:	77 1f       	adc	r23, r23
 522:	8a 95       	dec	r24
 524:	e2 f7       	brpl	.-8      	; 0x51e <DIO_VoidSetPinValue+0x28>
 526:	cb 01       	movw	r24, r22
 528:	84 2b       	or	r24, r20
 52a:	8b bb       	out	0x1b, r24	; 27
 52c:	08 95       	ret
 52e:	41 11       	cpse	r20, r1
 530:	6a c0       	rjmp	.+212    	; 0x606 <DIO_VoidSetPinValue+0x110>
 532:	4b b3       	in	r20, 0x1b	; 27
 534:	21 e0       	ldi	r18, 0x01	; 1
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	b9 01       	movw	r22, r18
 53a:	02 c0       	rjmp	.+4      	; 0x540 <DIO_VoidSetPinValue+0x4a>
 53c:	66 0f       	add	r22, r22
 53e:	77 1f       	adc	r23, r23
 540:	8a 95       	dec	r24
 542:	e2 f7       	brpl	.-8      	; 0x53c <DIO_VoidSetPinValue+0x46>
 544:	cb 01       	movw	r24, r22
 546:	80 95       	com	r24
 548:	84 23       	and	r24, r20
 54a:	8b bb       	out	0x1b, r24	; 27
 54c:	08 95       	ret
 54e:	41 30       	cpi	r20, 0x01	; 1
 550:	69 f4       	brne	.+26     	; 0x56c <DIO_VoidSetPinValue+0x76>
 552:	48 b3       	in	r20, 0x18	; 24
 554:	21 e0       	ldi	r18, 0x01	; 1
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	b9 01       	movw	r22, r18
 55a:	02 c0       	rjmp	.+4      	; 0x560 <DIO_VoidSetPinValue+0x6a>
 55c:	66 0f       	add	r22, r22
 55e:	77 1f       	adc	r23, r23
 560:	8a 95       	dec	r24
 562:	e2 f7       	brpl	.-8      	; 0x55c <DIO_VoidSetPinValue+0x66>
 564:	cb 01       	movw	r24, r22
 566:	84 2b       	or	r24, r20
 568:	88 bb       	out	0x18, r24	; 24
 56a:	08 95       	ret
 56c:	41 11       	cpse	r20, r1
 56e:	4b c0       	rjmp	.+150    	; 0x606 <DIO_VoidSetPinValue+0x110>
 570:	48 b3       	in	r20, 0x18	; 24
 572:	21 e0       	ldi	r18, 0x01	; 1
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	b9 01       	movw	r22, r18
 578:	02 c0       	rjmp	.+4      	; 0x57e <DIO_VoidSetPinValue+0x88>
 57a:	66 0f       	add	r22, r22
 57c:	77 1f       	adc	r23, r23
 57e:	8a 95       	dec	r24
 580:	e2 f7       	brpl	.-8      	; 0x57a <DIO_VoidSetPinValue+0x84>
 582:	cb 01       	movw	r24, r22
 584:	80 95       	com	r24
 586:	84 23       	and	r24, r20
 588:	88 bb       	out	0x18, r24	; 24
 58a:	08 95       	ret
 58c:	41 30       	cpi	r20, 0x01	; 1
 58e:	69 f4       	brne	.+26     	; 0x5aa <DIO_VoidSetPinValue+0xb4>
 590:	45 b3       	in	r20, 0x15	; 21
 592:	21 e0       	ldi	r18, 0x01	; 1
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	b9 01       	movw	r22, r18
 598:	02 c0       	rjmp	.+4      	; 0x59e <DIO_VoidSetPinValue+0xa8>
 59a:	66 0f       	add	r22, r22
 59c:	77 1f       	adc	r23, r23
 59e:	8a 95       	dec	r24
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <DIO_VoidSetPinValue+0xa4>
 5a2:	cb 01       	movw	r24, r22
 5a4:	84 2b       	or	r24, r20
 5a6:	85 bb       	out	0x15, r24	; 21
 5a8:	08 95       	ret
 5aa:	41 11       	cpse	r20, r1
 5ac:	2c c0       	rjmp	.+88     	; 0x606 <DIO_VoidSetPinValue+0x110>
 5ae:	45 b3       	in	r20, 0x15	; 21
 5b0:	21 e0       	ldi	r18, 0x01	; 1
 5b2:	30 e0       	ldi	r19, 0x00	; 0
 5b4:	b9 01       	movw	r22, r18
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <DIO_VoidSetPinValue+0xc6>
 5b8:	66 0f       	add	r22, r22
 5ba:	77 1f       	adc	r23, r23
 5bc:	8a 95       	dec	r24
 5be:	e2 f7       	brpl	.-8      	; 0x5b8 <DIO_VoidSetPinValue+0xc2>
 5c0:	cb 01       	movw	r24, r22
 5c2:	80 95       	com	r24
 5c4:	84 23       	and	r24, r20
 5c6:	85 bb       	out	0x15, r24	; 21
 5c8:	08 95       	ret
 5ca:	41 30       	cpi	r20, 0x01	; 1
 5cc:	69 f4       	brne	.+26     	; 0x5e8 <DIO_VoidSetPinValue+0xf2>
 5ce:	42 b3       	in	r20, 0x12	; 18
 5d0:	21 e0       	ldi	r18, 0x01	; 1
 5d2:	30 e0       	ldi	r19, 0x00	; 0
 5d4:	b9 01       	movw	r22, r18
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <DIO_VoidSetPinValue+0xe6>
 5d8:	66 0f       	add	r22, r22
 5da:	77 1f       	adc	r23, r23
 5dc:	8a 95       	dec	r24
 5de:	e2 f7       	brpl	.-8      	; 0x5d8 <DIO_VoidSetPinValue+0xe2>
 5e0:	cb 01       	movw	r24, r22
 5e2:	84 2b       	or	r24, r20
 5e4:	82 bb       	out	0x12, r24	; 18
 5e6:	08 95       	ret
 5e8:	41 11       	cpse	r20, r1
 5ea:	0d c0       	rjmp	.+26     	; 0x606 <DIO_VoidSetPinValue+0x110>
 5ec:	42 b3       	in	r20, 0x12	; 18
 5ee:	21 e0       	ldi	r18, 0x01	; 1
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	b9 01       	movw	r22, r18
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <DIO_VoidSetPinValue+0x104>
 5f6:	66 0f       	add	r22, r22
 5f8:	77 1f       	adc	r23, r23
 5fa:	8a 95       	dec	r24
 5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <DIO_VoidSetPinValue+0x100>
 5fe:	cb 01       	movw	r24, r22
 600:	80 95       	com	r24
 602:	84 23       	and	r24, r20
 604:	82 bb       	out	0x12, r24	; 18
 606:	08 95       	ret

00000608 <DIO_VoidSetPortDirection>:
 608:	83 30       	cpi	r24, 0x03	; 3
 60a:	d1 f1       	breq	.+116    	; 0x680 <DIO_VoidSetPortDirection+0x78>
 60c:	18 f4       	brcc	.+6      	; 0x614 <DIO_VoidSetPortDirection+0xc>
 60e:	82 30       	cpi	r24, 0x02	; 2
 610:	41 f0       	breq	.+16     	; 0x622 <DIO_VoidSetPortDirection+0x1a>
 612:	08 95       	ret
 614:	84 30       	cpi	r24, 0x04	; 4
 616:	09 f4       	brne	.+2      	; 0x61a <DIO_VoidSetPortDirection+0x12>
 618:	62 c0       	rjmp	.+196    	; 0x6de <DIO_VoidSetPortDirection+0xd6>
 61a:	85 30       	cpi	r24, 0x05	; 5
 61c:	09 f4       	brne	.+2      	; 0x620 <DIO_VoidSetPortDirection+0x18>
 61e:	8e c0       	rjmp	.+284    	; 0x73c <DIO_VoidSetPortDirection+0x134>
 620:	08 95       	ret
 622:	61 30       	cpi	r22, 0x01	; 1
 624:	a9 f4       	brne	.+42     	; 0x650 <DIO_VoidSetPortDirection+0x48>
 626:	0e c0       	rjmp	.+28     	; 0x644 <DIO_VoidSetPortDirection+0x3c>
 628:	4a b3       	in	r20, 0x1a	; 26
 62a:	81 e0       	ldi	r24, 0x01	; 1
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	02 2e       	mov	r0, r18
 630:	02 c0       	rjmp	.+4      	; 0x636 <DIO_VoidSetPortDirection+0x2e>
 632:	88 0f       	add	r24, r24
 634:	99 1f       	adc	r25, r25
 636:	0a 94       	dec	r0
 638:	e2 f7       	brpl	.-8      	; 0x632 <DIO_VoidSetPortDirection+0x2a>
 63a:	84 2b       	or	r24, r20
 63c:	8a bb       	out	0x1a, r24	; 26
 63e:	2f 5f       	subi	r18, 0xFF	; 255
 640:	3f 4f       	sbci	r19, 0xFF	; 255
 642:	02 c0       	rjmp	.+4      	; 0x648 <DIO_VoidSetPortDirection+0x40>
 644:	20 e0       	ldi	r18, 0x00	; 0
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	28 30       	cpi	r18, 0x08	; 8
 64a:	31 05       	cpc	r19, r1
 64c:	68 f3       	brcs	.-38     	; 0x628 <DIO_VoidSetPortDirection+0x20>
 64e:	08 95       	ret
 650:	66 23       	and	r22, r22
 652:	81 f0       	breq	.+32     	; 0x674 <DIO_VoidSetPortDirection+0x6c>
 654:	08 95       	ret
 656:	4a b3       	in	r20, 0x1a	; 26
 658:	81 e0       	ldi	r24, 0x01	; 1
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	02 2e       	mov	r0, r18
 65e:	02 c0       	rjmp	.+4      	; 0x664 <DIO_VoidSetPortDirection+0x5c>
 660:	88 0f       	add	r24, r24
 662:	99 1f       	adc	r25, r25
 664:	0a 94       	dec	r0
 666:	e2 f7       	brpl	.-8      	; 0x660 <DIO_VoidSetPortDirection+0x58>
 668:	80 95       	com	r24
 66a:	84 23       	and	r24, r20
 66c:	8a bb       	out	0x1a, r24	; 26
 66e:	2f 5f       	subi	r18, 0xFF	; 255
 670:	3f 4f       	sbci	r19, 0xFF	; 255
 672:	02 c0       	rjmp	.+4      	; 0x678 <DIO_VoidSetPortDirection+0x70>
 674:	20 e0       	ldi	r18, 0x00	; 0
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	28 30       	cpi	r18, 0x08	; 8
 67a:	31 05       	cpc	r19, r1
 67c:	60 f3       	brcs	.-40     	; 0x656 <DIO_VoidSetPortDirection+0x4e>
 67e:	08 95       	ret
 680:	61 30       	cpi	r22, 0x01	; 1
 682:	a9 f4       	brne	.+42     	; 0x6ae <DIO_VoidSetPortDirection+0xa6>
 684:	0e c0       	rjmp	.+28     	; 0x6a2 <DIO_VoidSetPortDirection+0x9a>
 686:	47 b3       	in	r20, 0x17	; 23
 688:	81 e0       	ldi	r24, 0x01	; 1
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	02 2e       	mov	r0, r18
 68e:	02 c0       	rjmp	.+4      	; 0x694 <DIO_VoidSetPortDirection+0x8c>
 690:	88 0f       	add	r24, r24
 692:	99 1f       	adc	r25, r25
 694:	0a 94       	dec	r0
 696:	e2 f7       	brpl	.-8      	; 0x690 <DIO_VoidSetPortDirection+0x88>
 698:	84 2b       	or	r24, r20
 69a:	87 bb       	out	0x17, r24	; 23
 69c:	2f 5f       	subi	r18, 0xFF	; 255
 69e:	3f 4f       	sbci	r19, 0xFF	; 255
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <DIO_VoidSetPortDirection+0x9e>
 6a2:	20 e0       	ldi	r18, 0x00	; 0
 6a4:	30 e0       	ldi	r19, 0x00	; 0
 6a6:	28 30       	cpi	r18, 0x08	; 8
 6a8:	31 05       	cpc	r19, r1
 6aa:	68 f3       	brcs	.-38     	; 0x686 <DIO_VoidSetPortDirection+0x7e>
 6ac:	08 95       	ret
 6ae:	66 23       	and	r22, r22
 6b0:	81 f0       	breq	.+32     	; 0x6d2 <DIO_VoidSetPortDirection+0xca>
 6b2:	08 95       	ret
 6b4:	47 b3       	in	r20, 0x17	; 23
 6b6:	81 e0       	ldi	r24, 0x01	; 1
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	02 2e       	mov	r0, r18
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <DIO_VoidSetPortDirection+0xba>
 6be:	88 0f       	add	r24, r24
 6c0:	99 1f       	adc	r25, r25
 6c2:	0a 94       	dec	r0
 6c4:	e2 f7       	brpl	.-8      	; 0x6be <DIO_VoidSetPortDirection+0xb6>
 6c6:	80 95       	com	r24
 6c8:	84 23       	and	r24, r20
 6ca:	87 bb       	out	0x17, r24	; 23
 6cc:	2f 5f       	subi	r18, 0xFF	; 255
 6ce:	3f 4f       	sbci	r19, 0xFF	; 255
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <DIO_VoidSetPortDirection+0xce>
 6d2:	20 e0       	ldi	r18, 0x00	; 0
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	28 30       	cpi	r18, 0x08	; 8
 6d8:	31 05       	cpc	r19, r1
 6da:	60 f3       	brcs	.-40     	; 0x6b4 <DIO_VoidSetPortDirection+0xac>
 6dc:	08 95       	ret
 6de:	61 30       	cpi	r22, 0x01	; 1
 6e0:	a9 f4       	brne	.+42     	; 0x70c <DIO_VoidSetPortDirection+0x104>
 6e2:	0e c0       	rjmp	.+28     	; 0x700 <DIO_VoidSetPortDirection+0xf8>
 6e4:	44 b3       	in	r20, 0x14	; 20
 6e6:	81 e0       	ldi	r24, 0x01	; 1
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	02 2e       	mov	r0, r18
 6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <DIO_VoidSetPortDirection+0xea>
 6ee:	88 0f       	add	r24, r24
 6f0:	99 1f       	adc	r25, r25
 6f2:	0a 94       	dec	r0
 6f4:	e2 f7       	brpl	.-8      	; 0x6ee <DIO_VoidSetPortDirection+0xe6>
 6f6:	84 2b       	or	r24, r20
 6f8:	84 bb       	out	0x14, r24	; 20
 6fa:	2f 5f       	subi	r18, 0xFF	; 255
 6fc:	3f 4f       	sbci	r19, 0xFF	; 255
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <DIO_VoidSetPortDirection+0xfc>
 700:	20 e0       	ldi	r18, 0x00	; 0
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	28 30       	cpi	r18, 0x08	; 8
 706:	31 05       	cpc	r19, r1
 708:	68 f3       	brcs	.-38     	; 0x6e4 <DIO_VoidSetPortDirection+0xdc>
 70a:	08 95       	ret
 70c:	66 23       	and	r22, r22
 70e:	81 f0       	breq	.+32     	; 0x730 <DIO_VoidSetPortDirection+0x128>
 710:	08 95       	ret
 712:	44 b3       	in	r20, 0x14	; 20
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	02 2e       	mov	r0, r18
 71a:	02 c0       	rjmp	.+4      	; 0x720 <DIO_VoidSetPortDirection+0x118>
 71c:	88 0f       	add	r24, r24
 71e:	99 1f       	adc	r25, r25
 720:	0a 94       	dec	r0
 722:	e2 f7       	brpl	.-8      	; 0x71c <DIO_VoidSetPortDirection+0x114>
 724:	80 95       	com	r24
 726:	84 23       	and	r24, r20
 728:	84 bb       	out	0x14, r24	; 20
 72a:	2f 5f       	subi	r18, 0xFF	; 255
 72c:	3f 4f       	sbci	r19, 0xFF	; 255
 72e:	02 c0       	rjmp	.+4      	; 0x734 <DIO_VoidSetPortDirection+0x12c>
 730:	20 e0       	ldi	r18, 0x00	; 0
 732:	30 e0       	ldi	r19, 0x00	; 0
 734:	28 30       	cpi	r18, 0x08	; 8
 736:	31 05       	cpc	r19, r1
 738:	60 f3       	brcs	.-40     	; 0x712 <DIO_VoidSetPortDirection+0x10a>
 73a:	08 95       	ret
 73c:	61 30       	cpi	r22, 0x01	; 1
 73e:	a9 f4       	brne	.+42     	; 0x76a <DIO_VoidSetPortDirection+0x162>
 740:	0e c0       	rjmp	.+28     	; 0x75e <DIO_VoidSetPortDirection+0x156>
 742:	41 b3       	in	r20, 0x11	; 17
 744:	81 e0       	ldi	r24, 0x01	; 1
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	02 2e       	mov	r0, r18
 74a:	02 c0       	rjmp	.+4      	; 0x750 <DIO_VoidSetPortDirection+0x148>
 74c:	88 0f       	add	r24, r24
 74e:	99 1f       	adc	r25, r25
 750:	0a 94       	dec	r0
 752:	e2 f7       	brpl	.-8      	; 0x74c <DIO_VoidSetPortDirection+0x144>
 754:	84 2b       	or	r24, r20
 756:	81 bb       	out	0x11, r24	; 17
 758:	2f 5f       	subi	r18, 0xFF	; 255
 75a:	3f 4f       	sbci	r19, 0xFF	; 255
 75c:	02 c0       	rjmp	.+4      	; 0x762 <DIO_VoidSetPortDirection+0x15a>
 75e:	20 e0       	ldi	r18, 0x00	; 0
 760:	30 e0       	ldi	r19, 0x00	; 0
 762:	28 30       	cpi	r18, 0x08	; 8
 764:	31 05       	cpc	r19, r1
 766:	68 f3       	brcs	.-38     	; 0x742 <DIO_VoidSetPortDirection+0x13a>
 768:	08 95       	ret
 76a:	66 23       	and	r22, r22
 76c:	81 f0       	breq	.+32     	; 0x78e <DIO_VoidSetPortDirection+0x186>
 76e:	08 95       	ret
 770:	41 b3       	in	r20, 0x11	; 17
 772:	81 e0       	ldi	r24, 0x01	; 1
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	02 2e       	mov	r0, r18
 778:	02 c0       	rjmp	.+4      	; 0x77e <DIO_VoidSetPortDirection+0x176>
 77a:	88 0f       	add	r24, r24
 77c:	99 1f       	adc	r25, r25
 77e:	0a 94       	dec	r0
 780:	e2 f7       	brpl	.-8      	; 0x77a <DIO_VoidSetPortDirection+0x172>
 782:	80 95       	com	r24
 784:	84 23       	and	r24, r20
 786:	81 bb       	out	0x11, r24	; 17
 788:	2f 5f       	subi	r18, 0xFF	; 255
 78a:	3f 4f       	sbci	r19, 0xFF	; 255
 78c:	02 c0       	rjmp	.+4      	; 0x792 <DIO_VoidSetPortDirection+0x18a>
 78e:	20 e0       	ldi	r18, 0x00	; 0
 790:	30 e0       	ldi	r19, 0x00	; 0
 792:	28 30       	cpi	r18, 0x08	; 8
 794:	31 05       	cpc	r19, r1
 796:	60 f3       	brcs	.-40     	; 0x770 <DIO_VoidSetPortDirection+0x168>
 798:	08 95       	ret

0000079a <DIO_VoidSetHigh4BitDirection>:


void DIO_VoidSetHigh4BitDirection(u8 port_number,u8 Direction)
{
	switch(port_number)
 79a:	83 30       	cpi	r24, 0x03	; 3
 79c:	81 f0       	breq	.+32     	; 0x7be <DIO_VoidSetHigh4BitDirection+0x24>
 79e:	18 f4       	brcc	.+6      	; 0x7a6 <DIO_VoidSetHigh4BitDirection+0xc>
 7a0:	82 30       	cpi	r24, 0x02	; 2
 7a2:	31 f0       	breq	.+12     	; 0x7b0 <DIO_VoidSetHigh4BitDirection+0x16>
 7a4:	08 95       	ret
 7a6:	84 30       	cpi	r24, 0x04	; 4
 7a8:	89 f0       	breq	.+34     	; 0x7cc <DIO_VoidSetHigh4BitDirection+0x32>
 7aa:	85 30       	cpi	r24, 0x05	; 5
 7ac:	b1 f0       	breq	.+44     	; 0x7da <DIO_VoidSetHigh4BitDirection+0x40>
 7ae:	08 95       	ret
	{
		case portA:
			DDRA_REG &=0X0F;
 7b0:	8a b3       	in	r24, 0x1a	; 26
 7b2:	8f 70       	andi	r24, 0x0F	; 15
 7b4:	8a bb       	out	0x1a, r24	; 26
			DDRA_REG |=Direction;
 7b6:	8a b3       	in	r24, 0x1a	; 26
 7b8:	68 2b       	or	r22, r24
 7ba:	6a bb       	out	0x1a, r22	; 26
			break;
 7bc:	08 95       	ret
			
		case portB:
			DDRA_REG &=0X0F;
 7be:	8a b3       	in	r24, 0x1a	; 26
 7c0:	8f 70       	andi	r24, 0x0F	; 15
 7c2:	8a bb       	out	0x1a, r24	; 26
			DDRA_REG |=Direction;
 7c4:	8a b3       	in	r24, 0x1a	; 26
 7c6:	68 2b       	or	r22, r24
 7c8:	6a bb       	out	0x1a, r22	; 26
			break;
 7ca:	08 95       	ret
			
		case portC:
			DDRA_REG &=0X0F;
 7cc:	8a b3       	in	r24, 0x1a	; 26
 7ce:	8f 70       	andi	r24, 0x0F	; 15
 7d0:	8a bb       	out	0x1a, r24	; 26
			DDRA_REG |=Direction;
 7d2:	8a b3       	in	r24, 0x1a	; 26
 7d4:	68 2b       	or	r22, r24
 7d6:	6a bb       	out	0x1a, r22	; 26
			break;
 7d8:	08 95       	ret
			
		case portD:
			DDRA_REG &=0X0F;
 7da:	8a b3       	in	r24, 0x1a	; 26
 7dc:	8f 70       	andi	r24, 0x0F	; 15
 7de:	8a bb       	out	0x1a, r24	; 26
			DDRA_REG |=Direction;
 7e0:	8a b3       	in	r24, 0x1a	; 26
 7e2:	68 2b       	or	r22, r24
 7e4:	6a bb       	out	0x1a, r22	; 26
 7e6:	08 95       	ret

000007e8 <DIO_VoidSetHigh4BitValue>:
	}
}

void DIO_VoidSetHigh4BitValue(u8 port_number,u8 value)
{
	switch(port_number)
 7e8:	83 30       	cpi	r24, 0x03	; 3
 7ea:	81 f0       	breq	.+32     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7ec:	18 f4       	brcc	.+6      	; 0x7f4 <DIO_VoidSetHigh4BitValue+0xc>
 7ee:	82 30       	cpi	r24, 0x02	; 2
 7f0:	31 f0       	breq	.+12     	; 0x7fe <DIO_VoidSetHigh4BitValue+0x16>
 7f2:	08 95       	ret
 7f4:	84 30       	cpi	r24, 0x04	; 4
 7f6:	89 f0       	breq	.+34     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7f8:	85 30       	cpi	r24, 0x05	; 5
 7fa:	b1 f0       	breq	.+44     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 7fc:	08 95       	ret
	{
		case portA:
			PORTA_REG &=0X0F;
 7fe:	8b b3       	in	r24, 0x1b	; 27
 800:	8f 70       	andi	r24, 0x0F	; 15
 802:	8b bb       	out	0x1b, r24	; 27
			PORTA_REG |=value;
 804:	8b b3       	in	r24, 0x1b	; 27
 806:	68 2b       	or	r22, r24
 808:	6b bb       	out	0x1b, r22	; 27
			break;
 80a:	08 95       	ret
			
		case portB:
			PORTB_REG &=0X0F;
 80c:	88 b3       	in	r24, 0x18	; 24
 80e:	8f 70       	andi	r24, 0x0F	; 15
 810:	88 bb       	out	0x18, r24	; 24
			PORTB_REG |=value;
 812:	88 b3       	in	r24, 0x18	; 24
 814:	68 2b       	or	r22, r24
 816:	68 bb       	out	0x18, r22	; 24
			break;
 818:	08 95       	ret
			
		case portC:
			PORTC_REG &=0X0F;
 81a:	85 b3       	in	r24, 0x15	; 21
 81c:	8f 70       	andi	r24, 0x0F	; 15
 81e:	85 bb       	out	0x15, r24	; 21
			PORTC_REG |=value;
 820:	85 b3       	in	r24, 0x15	; 21
 822:	68 2b       	or	r22, r24
 824:	65 bb       	out	0x15, r22	; 21
			break;
 826:	08 95       	ret
			
		case portD:
			PORTD_REG &=0X0F;
 828:	82 b3       	in	r24, 0x12	; 18
 82a:	8f 70       	andi	r24, 0x0F	; 15
 82c:	82 bb       	out	0x12, r24	; 18
			PORTD_REG |=value;
 82e:	82 b3       	in	r24, 0x12	; 18
 830:	68 2b       	or	r22, r24
 832:	62 bb       	out	0x12, r22	; 18
 834:	08 95       	ret

00000836 <LCD_Void_4BitSendCommand>:
/************************************************************************/

static u8 INIT_step_finished=0;

void LCD_Void_4BitSendCommand(u8 command)
{
 836:	cf 93       	push	r28
 838:	c8 2f       	mov	r28, r24
	u8 COMMAND=command;
	DIO_VoidSetPinValue(RS,CONTROLPORT,LOW);
 83a:	40 e0       	ldi	r20, 0x00	; 0
 83c:	65 e0       	ldi	r22, 0x05	; 5
 83e:	80 e0       	ldi	r24, 0x00	; 0
 840:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RW,CONTROLPORT,LOW);
 844:	40 e0       	ldi	r20, 0x00	; 0
 846:	65 e0       	ldi	r22, 0x05	; 5
 848:	81 e0       	ldi	r24, 0x01	; 1
 84a:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
	
	COMMAND =(command) & (0XF0);
 84e:	6c 2f       	mov	r22, r28
 850:	60 7f       	andi	r22, 0xF0	; 240
	
	if (UPPER_PINS_4BIT ==1)
	{
		DIO_VoidSetHigh4BitValue(DATAPORT,COMMAND);
 852:	85 e0       	ldi	r24, 0x05	; 5
 854:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <DIO_VoidSetHigh4BitValue>
	else
	{
		DIO_VoidSetLow4BitValue(DATAPORT,COMMAND);
	}
	
	DIO_VoidSetPinValue(EN,CONTROLPORT,HIGH);
 858:	41 e0       	ldi	r20, 0x01	; 1
 85a:	65 e0       	ldi	r22, 0x05	; 5
 85c:	82 e0       	ldi	r24, 0x02	; 2
 85e:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 862:	8f e9       	ldi	r24, 0x9F	; 159
 864:	9f e0       	ldi	r25, 0x0F	; 15
 866:	01 97       	sbiw	r24, 0x01	; 1
 868:	f1 f7       	brne	.-4      	; 0x866 <__stack+0x7>
 86a:	00 c0       	rjmp	.+0      	; 0x86c <__stack+0xd>
 86c:	00 00       	nop
	_delay_ms(2);
	DIO_VoidSetPinValue(EN,CONTROLPORT,LOW);
 86e:	40 e0       	ldi	r20, 0x00	; 0
 870:	65 e0       	ldi	r22, 0x05	; 5
 872:	82 e0       	ldi	r24, 0x02	; 2
 874:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
	
	if (INIT_step_finished==1)
 878:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <__data_end>
 87c:	81 30       	cpi	r24, 0x01	; 1
 87e:	b9 f4       	brne	.+46     	; 0x8ae <__stack+0x4f>
	{
		COMMAND =(command<<4) & (0XF0);
 880:	90 e1       	ldi	r25, 0x10	; 16
 882:	c9 9f       	mul	r28, r25
 884:	b0 01       	movw	r22, r0
 886:	11 24       	eor	r1, r1
		
		if (UPPER_PINS_4BIT ==1)
		{
			DIO_VoidSetHigh4BitValue(DATAPORT,COMMAND);
 888:	85 e0       	ldi	r24, 0x05	; 5
 88a:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <DIO_VoidSetHigh4BitValue>
		else
		{
			DIO_VoidSetLow4BitValue(DATAPORT,COMMAND);
		}
		
		DIO_VoidSetPinValue(EN,CONTROLPORT,HIGH);
 88e:	41 e0       	ldi	r20, 0x01	; 1
 890:	65 e0       	ldi	r22, 0x05	; 5
 892:	82 e0       	ldi	r24, 0x02	; 2
 894:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
 898:	8f e9       	ldi	r24, 0x9F	; 159
 89a:	9f e0       	ldi	r25, 0x0F	; 15
 89c:	01 97       	sbiw	r24, 0x01	; 1
 89e:	f1 f7       	brne	.-4      	; 0x89c <__stack+0x3d>
 8a0:	00 c0       	rjmp	.+0      	; 0x8a2 <__stack+0x43>
 8a2:	00 00       	nop
		_delay_ms(2);
		DIO_VoidSetPinValue(EN,CONTROLPORT,LOW);
 8a4:	40 e0       	ldi	r20, 0x00	; 0
 8a6:	65 e0       	ldi	r22, 0x05	; 5
 8a8:	82 e0       	ldi	r24, 0x02	; 2
 8aa:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
 8ae:	8f e9       	ldi	r24, 0x9F	; 159
 8b0:	9f e0       	ldi	r25, 0x0F	; 15
 8b2:	01 97       	sbiw	r24, 0x01	; 1
 8b4:	f1 f7       	brne	.-4      	; 0x8b2 <__stack+0x53>
 8b6:	00 c0       	rjmp	.+0      	; 0x8b8 <__stack+0x59>
 8b8:	00 00       	nop
	}
	_delay_ms(2);
}
 8ba:	cf 91       	pop	r28
 8bc:	08 95       	ret

000008be <LCD_Void_4BitInit>:

void LCD_Void_4BitInit(void)
{
	INIT_step_finished=0;
 8be:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__data_end>
	DIO_VoidSetPinDirection(RS,CONTROLPORT,OUTPUT);
 8c2:	41 e0       	ldi	r20, 0x01	; 1
 8c4:	65 e0       	ldi	r22, 0x05	; 5
 8c6:	80 e0       	ldi	r24, 0x00	; 0
 8c8:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(RW,CONTROLPORT,OUTPUT);
 8cc:	41 e0       	ldi	r20, 0x01	; 1
 8ce:	65 e0       	ldi	r22, 0x05	; 5
 8d0:	81 e0       	ldi	r24, 0x01	; 1
 8d2:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(EN,CONTROLPORT,OUTPUT);
 8d6:	41 e0       	ldi	r20, 0x01	; 1
 8d8:	65 e0       	ldi	r22, 0x05	; 5
 8da:	82 e0       	ldi	r24, 0x02	; 2
 8dc:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <DIO_VoidSetPinDirection>
	
	if (UPPER_PINS_4BIT ==1)
	{
		DIO_VoidSetHigh4BitDirection(DATAPORT,0XF0);
 8e0:	60 ef       	ldi	r22, 0xF0	; 240
 8e2:	85 e0       	ldi	r24, 0x05	; 5
 8e4:	0e 94 cd 03 	call	0x79a	; 0x79a <DIO_VoidSetHigh4BitDirection>
 8e8:	8f e5       	ldi	r24, 0x5F	; 95
 8ea:	9a ee       	ldi	r25, 0xEA	; 234
 8ec:	01 97       	sbiw	r24, 0x01	; 1
 8ee:	f1 f7       	brne	.-4      	; 0x8ec <LCD_Void_4BitInit+0x2e>
 8f0:	00 c0       	rjmp	.+0      	; 0x8f2 <LCD_Void_4BitInit+0x34>
 8f2:	00 00       	nop
		DIO_VoidSetLow4BitDirection(DATAPORT,0X0F);
	}
	
	
	_delay_ms(30);
	LCD_Void_4BitSendCommand((FUNCTIONSET_4BIT>>4) & (0XF0));
 8f4:	80 e2       	ldi	r24, 0x20	; 32
 8f6:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((FUNCTIONSET_4BIT) & (0X0F0));
 8fa:	80 e2       	ldi	r24, 0x20	; 32
 8fc:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((FUNCTIONSET_4BIT<<4) & (0XF0));
 900:	80 e8       	ldi	r24, 0x80	; 128
 902:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
 906:	8f e9       	ldi	r24, 0x9F	; 159
 908:	9f e0       	ldi	r25, 0x0F	; 15
 90a:	01 97       	sbiw	r24, 0x01	; 1
 90c:	f1 f7       	brne	.-4      	; 0x90a <LCD_Void_4BitInit+0x4c>
 90e:	00 c0       	rjmp	.+0      	; 0x910 <LCD_Void_4BitInit+0x52>
 910:	00 00       	nop
	_delay_ms(2);
	LCD_Void_4BitSendCommand((DISPLAYON) & (0XF0));
 912:	80 e0       	ldi	r24, 0x00	; 0
 914:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((DISPLAYON<<4) & (0XF0));
 918:	80 ee       	ldi	r24, 0xE0	; 224
 91a:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
 91e:	8f e9       	ldi	r24, 0x9F	; 159
 920:	9f e0       	ldi	r25, 0x0F	; 15
 922:	01 97       	sbiw	r24, 0x01	; 1
 924:	f1 f7       	brne	.-4      	; 0x922 <LCD_Void_4BitInit+0x64>
 926:	00 c0       	rjmp	.+0      	; 0x928 <LCD_Void_4BitInit+0x6a>
 928:	00 00       	nop
	_delay_ms(2);
	LCD_Void_4BitSendCommand((DISPLAYCLEAR) & (0XF0));
 92a:	80 e0       	ldi	r24, 0x00	; 0
 92c:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((DISPLAYCLEAR<<4) & (0XF0));
 930:	80 e1       	ldi	r24, 0x10	; 16
 932:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
 936:	8f e2       	ldi	r24, 0x2F	; 47
 938:	95 e7       	ldi	r25, 0x75	; 117
 93a:	01 97       	sbiw	r24, 0x01	; 1
 93c:	f1 f7       	brne	.-4      	; 0x93a <LCD_Void_4BitInit+0x7c>
 93e:	00 c0       	rjmp	.+0      	; 0x940 <LCD_Void_4BitInit+0x82>
 940:	00 00       	nop
	_delay_ms(15);
	LCD_Void_4BitSendCommand((ENTRYMODESET) & (0XF0));
 942:	80 e0       	ldi	r24, 0x00	; 0
 944:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
	LCD_Void_4BitSendCommand((ENTRYMODESET<<4) & (0XF0));
 948:	80 e2       	ldi	r24, 0x20	; 32
 94a:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
	
	INIT_step_finished=1;
 94e:	81 e0       	ldi	r24, 0x01	; 1
 950:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__data_end>
 954:	08 95       	ret

00000956 <LCD_Void_4BitSendChar>:
}


/* LCD_VoidSendChar('0')  */
void LCD_Void_4BitSendChar(u8 data)
{
 956:	cf 93       	push	r28
 958:	c8 2f       	mov	r28, r24
	u8 DATA =data;
	DIO_VoidSetPinValue(RS,CONTROLPORT,HIGH);
 95a:	41 e0       	ldi	r20, 0x01	; 1
 95c:	65 e0       	ldi	r22, 0x05	; 5
 95e:	80 e0       	ldi	r24, 0x00	; 0
 960:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RW,CONTROLPORT,LOW);
 964:	40 e0       	ldi	r20, 0x00	; 0
 966:	65 e0       	ldi	r22, 0x05	; 5
 968:	81 e0       	ldi	r24, 0x01	; 1
 96a:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
	
	
	DATA =(data) & (0XF0);
 96e:	6c 2f       	mov	r22, r28
 970:	60 7f       	andi	r22, 0xF0	; 240
	
	if (UPPER_PINS_4BIT ==1)
	{
		DIO_VoidSetHigh4BitValue(DATAPORT,DATA);
 972:	85 e0       	ldi	r24, 0x05	; 5
 974:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <DIO_VoidSetHigh4BitValue>
	else
	{
		DIO_VoidSetLow4BitValue(DATAPORT,DATA);
	}
	
	DIO_VoidSetPinValue(EN,CONTROLPORT,HIGH);
 978:	41 e0       	ldi	r20, 0x01	; 1
 97a:	65 e0       	ldi	r22, 0x05	; 5
 97c:	82 e0       	ldi	r24, 0x02	; 2
 97e:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
 982:	8f e9       	ldi	r24, 0x9F	; 159
 984:	9f e0       	ldi	r25, 0x0F	; 15
 986:	01 97       	sbiw	r24, 0x01	; 1
 988:	f1 f7       	brne	.-4      	; 0x986 <LCD_Void_4BitSendChar+0x30>
 98a:	00 c0       	rjmp	.+0      	; 0x98c <LCD_Void_4BitSendChar+0x36>
 98c:	00 00       	nop
	_delay_ms(2);
	DIO_VoidSetPinValue(EN,CONTROLPORT,LOW);
 98e:	40 e0       	ldi	r20, 0x00	; 0
 990:	65 e0       	ldi	r22, 0x05	; 5
 992:	82 e0       	ldi	r24, 0x02	; 2
 994:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
	
	DATA =(data<<4) & (0XF0);
 998:	90 e1       	ldi	r25, 0x10	; 16
 99a:	c9 9f       	mul	r28, r25
 99c:	b0 01       	movw	r22, r0
 99e:	11 24       	eor	r1, r1
	
	if (UPPER_PINS_4BIT ==1)
	{
		DIO_VoidSetHigh4BitValue(DATAPORT,DATA);
 9a0:	85 e0       	ldi	r24, 0x05	; 5
 9a2:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <DIO_VoidSetHigh4BitValue>
	else
	{
		DIO_VoidSetLow4BitValue(DATAPORT,DATA);
	}
	
	DIO_VoidSetPinValue(EN,CONTROLPORT,HIGH);
 9a6:	41 e0       	ldi	r20, 0x01	; 1
 9a8:	65 e0       	ldi	r22, 0x05	; 5
 9aa:	82 e0       	ldi	r24, 0x02	; 2
 9ac:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
 9b0:	8f e9       	ldi	r24, 0x9F	; 159
 9b2:	9f e0       	ldi	r25, 0x0F	; 15
 9b4:	01 97       	sbiw	r24, 0x01	; 1
 9b6:	f1 f7       	brne	.-4      	; 0x9b4 <LCD_Void_4BitSendChar+0x5e>
 9b8:	00 c0       	rjmp	.+0      	; 0x9ba <LCD_Void_4BitSendChar+0x64>
 9ba:	00 00       	nop
	_delay_ms(2);
	DIO_VoidSetPinValue(EN,CONTROLPORT,LOW);
 9bc:	40 e0       	ldi	r20, 0x00	; 0
 9be:	65 e0       	ldi	r22, 0x05	; 5
 9c0:	82 e0       	ldi	r24, 0x02	; 2
 9c2:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <DIO_VoidSetPinValue>
}
 9c6:	cf 91       	pop	r28
 9c8:	08 95       	ret

000009ca <LCD_Void_4BitSendString>:

void LCD_Void_4BitSendString(u8* PtrToString)
{
 9ca:	0f 93       	push	r16
 9cc:	1f 93       	push	r17
 9ce:	cf 93       	push	r28
 9d0:	8c 01       	movw	r16, r24
	u8 i=0;
 9d2:	c0 e0       	ldi	r28, 0x00	; 0
	while(PtrToString[i] !='\0')
 9d4:	03 c0       	rjmp	.+6      	; 0x9dc <LCD_Void_4BitSendString+0x12>
	{
		LCD_Void_4BitSendChar(PtrToString[i]);
 9d6:	0e 94 ab 04 	call	0x956	; 0x956 <LCD_Void_4BitSendChar>
		i++;
 9da:	cf 5f       	subi	r28, 0xFF	; 255
}

void LCD_Void_4BitSendString(u8* PtrToString)
{
	u8 i=0;
	while(PtrToString[i] !='\0')
 9dc:	f8 01       	movw	r30, r16
 9de:	ec 0f       	add	r30, r28
 9e0:	f1 1d       	adc	r31, r1
 9e2:	80 81       	ld	r24, Z
 9e4:	81 11       	cpse	r24, r1
 9e6:	f7 cf       	rjmp	.-18     	; 0x9d6 <LCD_Void_4BitSendString+0xc>
	{
		LCD_Void_4BitSendChar(PtrToString[i]);
		i++;
	}
}
 9e8:	cf 91       	pop	r28
 9ea:	1f 91       	pop	r17
 9ec:	0f 91       	pop	r16
 9ee:	08 95       	ret

000009f0 <LCD_Void_4BitSendNumber>:

void LCD_Void_4BitSendNumber(u64 number)
{
 9f0:	2f 92       	push	r2
 9f2:	3f 92       	push	r3
 9f4:	4f 92       	push	r4
 9f6:	5f 92       	push	r5
 9f8:	6f 92       	push	r6
 9fa:	7f 92       	push	r7
 9fc:	8f 92       	push	r8
 9fe:	9f 92       	push	r9
 a00:	af 92       	push	r10
 a02:	bf 92       	push	r11
 a04:	cf 92       	push	r12
 a06:	df 92       	push	r13
 a08:	ef 92       	push	r14
 a0a:	ff 92       	push	r15
 a0c:	0f 93       	push	r16
 a0e:	1f 93       	push	r17
 a10:	cf 93       	push	r28
 a12:	df 93       	push	r29
 a14:	cd b7       	in	r28, 0x3d	; 61
 a16:	de b7       	in	r29, 0x3e	; 62
 a18:	67 97       	sbiw	r28, 0x17	; 23
 a1a:	0f b6       	in	r0, 0x3f	; 63
 a1c:	f8 94       	cli
 a1e:	de bf       	out	0x3e, r29	; 62
 a20:	0f be       	out	0x3f, r0	; 63
 a22:	cd bf       	out	0x3d, r28	; 61
 a24:	62 2e       	mov	r6, r18
 a26:	73 2e       	mov	r7, r19
 a28:	84 2e       	mov	r8, r20
 a2a:	5d 8b       	std	Y+21, r21	; 0x15
 a2c:	6e 8b       	std	Y+22, r22	; 0x16
 a2e:	7f 8b       	std	Y+23, r23	; 0x17
 a30:	28 2e       	mov	r2, r24
 a32:	39 2e       	mov	r3, r25
	u8 arr_number[20];
	//itoa(number,arr_number,10);
	//LCD_Void_4BitSendString(arr_number);
	
	u8 count=0;
 a34:	91 2c       	mov	r9, r1
	while(number !=0)
 a36:	31 c0       	rjmp	.+98     	; 0xa9a <LCD_Void_4BitSendNumber+0xaa>
	{
		arr_number[count] =number%10;
 a38:	49 2c       	mov	r4, r9
 a3a:	51 2c       	mov	r5, r1
 a3c:	0f 2e       	mov	r0, r31
 a3e:	fa e0       	ldi	r31, 0x0A	; 10
 a40:	af 2e       	mov	r10, r31
 a42:	f0 2d       	mov	r31, r0
 a44:	b1 2c       	mov	r11, r1
 a46:	c1 2c       	mov	r12, r1
 a48:	d1 2c       	mov	r13, r1
 a4a:	e1 2c       	mov	r14, r1
 a4c:	f1 2c       	mov	r15, r1
 a4e:	00 e0       	ldi	r16, 0x00	; 0
 a50:	10 e0       	ldi	r17, 0x00	; 0
 a52:	26 2d       	mov	r18, r6
 a54:	37 2d       	mov	r19, r7
 a56:	48 2d       	mov	r20, r8
 a58:	5d 89       	ldd	r21, Y+21	; 0x15
 a5a:	6e 89       	ldd	r22, Y+22	; 0x16
 a5c:	7f 89       	ldd	r23, Y+23	; 0x17
 a5e:	82 2d       	mov	r24, r2
 a60:	93 2d       	mov	r25, r3
 a62:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__umoddi3>
 a66:	e1 e0       	ldi	r30, 0x01	; 1
 a68:	f0 e0       	ldi	r31, 0x00	; 0
 a6a:	ec 0f       	add	r30, r28
 a6c:	fd 1f       	adc	r31, r29
 a6e:	e4 0d       	add	r30, r4
 a70:	f5 1d       	adc	r31, r5
 a72:	20 83       	st	Z, r18
		count++;
 a74:	93 94       	inc	r9
		number /=10;
 a76:	26 2d       	mov	r18, r6
 a78:	37 2d       	mov	r19, r7
 a7a:	48 2d       	mov	r20, r8
 a7c:	5d 89       	ldd	r21, Y+21	; 0x15
 a7e:	6e 89       	ldd	r22, Y+22	; 0x16
 a80:	7f 89       	ldd	r23, Y+23	; 0x17
 a82:	82 2d       	mov	r24, r2
 a84:	93 2d       	mov	r25, r3
 a86:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <__udivdi3>
 a8a:	62 2e       	mov	r6, r18
 a8c:	73 2e       	mov	r7, r19
 a8e:	84 2e       	mov	r8, r20
 a90:	5d 8b       	std	Y+21, r21	; 0x15
 a92:	6e 8b       	std	Y+22, r22	; 0x16
 a94:	7f 8b       	std	Y+23, r23	; 0x17
 a96:	28 2e       	mov	r2, r24
 a98:	39 2e       	mov	r3, r25
	u8 arr_number[20];
	//itoa(number,arr_number,10);
	//LCD_Void_4BitSendString(arr_number);
	
	u8 count=0;
	while(number !=0)
 a9a:	26 2d       	mov	r18, r6
 a9c:	37 2d       	mov	r19, r7
 a9e:	48 2d       	mov	r20, r8
 aa0:	5d 89       	ldd	r21, Y+21	; 0x15
 aa2:	6e 89       	ldd	r22, Y+22	; 0x16
 aa4:	7f 89       	ldd	r23, Y+23	; 0x17
 aa6:	82 2d       	mov	r24, r2
 aa8:	93 2d       	mov	r25, r3
 aaa:	a0 e0       	ldi	r26, 0x00	; 0
 aac:	0e 94 40 06 	call	0xc80	; 0xc80 <__cmpdi2_s8>
 ab0:	19 f6       	brne	.-122    	; 0xa38 <LCD_Void_4BitSendNumber+0x48>
		arr_number[count] =number%10;
		count++;
		number /=10;
	}
	
	for (int i=count-1;i>=0;i--)
 ab2:	89 2c       	mov	r8, r9
 ab4:	91 2c       	mov	r9, r1
 ab6:	81 e0       	ldi	r24, 0x01	; 1
 ab8:	88 1a       	sub	r8, r24
 aba:	91 08       	sbc	r9, r1
 abc:	0d c0       	rjmp	.+26     	; 0xad8 <LCD_Void_4BitSendNumber+0xe8>
	{
		LCD_Void_4BitSendChar(arr_number[i]+48);
 abe:	e1 e0       	ldi	r30, 0x01	; 1
 ac0:	f0 e0       	ldi	r31, 0x00	; 0
 ac2:	ec 0f       	add	r30, r28
 ac4:	fd 1f       	adc	r31, r29
 ac6:	e8 0d       	add	r30, r8
 ac8:	f9 1d       	adc	r31, r9
 aca:	80 81       	ld	r24, Z
 acc:	80 5d       	subi	r24, 0xD0	; 208
 ace:	0e 94 ab 04 	call	0x956	; 0x956 <LCD_Void_4BitSendChar>
		arr_number[count] =number%10;
		count++;
		number /=10;
	}
	
	for (int i=count-1;i>=0;i--)
 ad2:	81 e0       	ldi	r24, 0x01	; 1
 ad4:	88 1a       	sub	r8, r24
 ad6:	91 08       	sbc	r9, r1
 ad8:	99 20       	and	r9, r9
 ada:	8c f7       	brge	.-30     	; 0xabe <LCD_Void_4BitSendNumber+0xce>
	{
		LCD_Void_4BitSendChar(arr_number[i]+48);
	}

 adc:	67 96       	adiw	r28, 0x17	; 23
 ade:	0f b6       	in	r0, 0x3f	; 63
 ae0:	f8 94       	cli
 ae2:	de bf       	out	0x3e, r29	; 62
 ae4:	0f be       	out	0x3f, r0	; 63
 ae6:	cd bf       	out	0x3d, r28	; 61
 ae8:	df 91       	pop	r29
 aea:	cf 91       	pop	r28
 aec:	1f 91       	pop	r17
 aee:	0f 91       	pop	r16
 af0:	ff 90       	pop	r15
 af2:	ef 90       	pop	r14
 af4:	df 90       	pop	r13
 af6:	cf 90       	pop	r12
 af8:	bf 90       	pop	r11
 afa:	af 90       	pop	r10
 afc:	9f 90       	pop	r9
 afe:	8f 90       	pop	r8
 b00:	7f 90       	pop	r7
 b02:	6f 90       	pop	r6
 b04:	5f 90       	pop	r5
 b06:	4f 90       	pop	r4
 b08:	3f 90       	pop	r3
 b0a:	2f 90       	pop	r2
 b0c:	08 95       	ret

00000b0e <main>:
#include <util/delay.h>

int main(void)
{
    /* Replace with your application code */
	LCD_Void_4BitInit();
 b0e:	0e 94 5f 04 	call	0x8be	; 0x8be <LCD_Void_4BitInit>
	u16 result=0;
	//u8 result_8;
	DIO_VoidSetPortDirection(portC,OUTPUT);
 b12:	61 e0       	ldi	r22, 0x01	; 1
 b14:	84 e0       	ldi	r24, 0x04	; 4
 b16:	0e 94 04 03 	call	0x608	; 0x608 <DIO_VoidSetPortDirection>
	//DIO_VoidSetPinDirection(0,portD,OUTPUT);
	//DIO_VoidSetPinDirection(1,portD,OUTPUT);
	ADC_VoidInit(ADC0,VREF_AVCC,R_ADJUST_RESULT,DISABLE_AUTO_TRIGGER,PRESCALER_64,DISABLE_INTERRUPT);
 b1a:	68 94       	set
 b1c:	ee 24       	eor	r14, r14
 b1e:	e5 f8       	bld	r14, 5
 b20:	09 e0       	ldi	r16, 0x09	; 9
 b22:	2e e1       	ldi	r18, 0x1E	; 30
 b24:	4b e1       	ldi	r20, 0x1B	; 27
 b26:	61 e0       	ldi	r22, 0x01	; 1
 b28:	83 e1       	ldi	r24, 0x13	; 19
 b2a:	0e 94 86 01 	call	0x30c	; 0x30c <ADC_VoidInit>
 b2e:	2f ef       	ldi	r18, 0xFF	; 255
 b30:	80 e7       	ldi	r24, 0x70	; 112
 b32:	92 e0       	ldi	r25, 0x02	; 2
 b34:	21 50       	subi	r18, 0x01	; 1
 b36:	80 40       	sbci	r24, 0x00	; 0
 b38:	90 40       	sbci	r25, 0x00	; 0
 b3a:	e1 f7       	brne	.-8      	; 0xb34 <main+0x26>
 b3c:	00 c0       	rjmp	.+0      	; 0xb3e <main+0x30>
 b3e:	00 00       	nop
	_delay_ms(100);
    while (1) 
    {
		LCD_Void_4BitSendCommand(DISPLAYCLEAR);
 b40:	81 e0       	ldi	r24, 0x01	; 1
 b42:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
		LCD_Void_4BitSendString((u8*)"ADC result1 = ");
 b46:	80 e6       	ldi	r24, 0x60	; 96
 b48:	90 e0       	ldi	r25, 0x00	; 0
 b4a:	0e 94 e5 04 	call	0x9ca	; 0x9ca <LCD_Void_4BitSendString>
		result=ADC_VoidPollingADCResult_10BitDigitalResult(ADC0);
 b4e:	83 e1       	ldi	r24, 0x13	; 19
 b50:	0e 94 af 01 	call	0x35e	; 0x35e <ADC_VoidPollingADCResult_10BitDigitalResult>
		LCD_Void_4BitSendNumber(result);
 b54:	28 2f       	mov	r18, r24
 b56:	39 2f       	mov	r19, r25
 b58:	40 e0       	ldi	r20, 0x00	; 0
 b5a:	50 e0       	ldi	r21, 0x00	; 0
 b5c:	60 e0       	ldi	r22, 0x00	; 0
 b5e:	70 e0       	ldi	r23, 0x00	; 0
 b60:	80 e0       	ldi	r24, 0x00	; 0
 b62:	90 e0       	ldi	r25, 0x00	; 0
 b64:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <LCD_Void_4BitSendNumber>
 b68:	2f ef       	ldi	r18, 0xFF	; 255
 b6a:	89 e6       	ldi	r24, 0x69	; 105
 b6c:	98 e1       	ldi	r25, 0x18	; 24
 b6e:	21 50       	subi	r18, 0x01	; 1
 b70:	80 40       	sbci	r24, 0x00	; 0
 b72:	90 40       	sbci	r25, 0x00	; 0
 b74:	e1 f7       	brne	.-8      	; 0xb6e <main+0x60>
 b76:	00 c0       	rjmp	.+0      	; 0xb78 <main+0x6a>
 b78:	00 00       	nop
		//DIO_VoidSetPortValue(portC,(u8)result);
		//DIO_VoidSetPortValue(portD,(result>>8) & (0x02));
		
		_delay_ms(1000);
		
		LCD_Void_4BitSendCommand(DISPLAYCLEAR);
 b7a:	81 e0       	ldi	r24, 0x01	; 1
 b7c:	0e 94 1b 04 	call	0x836	; 0x836 <LCD_Void_4BitSendCommand>
		LCD_Void_4BitSendString((u8*)"ADC result2 = ");
 b80:	8f e6       	ldi	r24, 0x6F	; 111
 b82:	90 e0       	ldi	r25, 0x00	; 0
 b84:	0e 94 e5 04 	call	0x9ca	; 0x9ca <LCD_Void_4BitSendString>
		result=ADC_VoidPollingADCResult_10BitDigitalResult(ADC1);
 b88:	84 e1       	ldi	r24, 0x14	; 20
 b8a:	0e 94 af 01 	call	0x35e	; 0x35e <ADC_VoidPollingADCResult_10BitDigitalResult>
		LCD_Void_4BitSendNumber(result);
 b8e:	28 2f       	mov	r18, r24
 b90:	39 2f       	mov	r19, r25
 b92:	40 e0       	ldi	r20, 0x00	; 0
 b94:	50 e0       	ldi	r21, 0x00	; 0
 b96:	60 e0       	ldi	r22, 0x00	; 0
 b98:	70 e0       	ldi	r23, 0x00	; 0
 b9a:	80 e0       	ldi	r24, 0x00	; 0
 b9c:	90 e0       	ldi	r25, 0x00	; 0
 b9e:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <LCD_Void_4BitSendNumber>
 ba2:	2f ef       	ldi	r18, 0xFF	; 255
 ba4:	89 e6       	ldi	r24, 0x69	; 105
 ba6:	98 e1       	ldi	r25, 0x18	; 24
 ba8:	21 50       	subi	r18, 0x01	; 1
 baa:	80 40       	sbci	r24, 0x00	; 0
 bac:	90 40       	sbci	r25, 0x00	; 0
 bae:	e1 f7       	brne	.-8      	; 0xba8 <main+0x9a>
 bb0:	00 c0       	rjmp	.+0      	; 0xbb2 <main+0xa4>
 bb2:	00 00       	nop
 bb4:	c5 cf       	rjmp	.-118    	; 0xb40 <main+0x32>

00000bb6 <__tablejump2__>:
 bb6:	ee 0f       	add	r30, r30
 bb8:	ff 1f       	adc	r31, r31
 bba:	05 90       	lpm	r0, Z+
 bbc:	f4 91       	lpm	r31, Z
 bbe:	e0 2d       	mov	r30, r0
 bc0:	09 94       	ijmp

00000bc2 <__umoddi3>:
 bc2:	68 94       	set
 bc4:	01 c0       	rjmp	.+2      	; 0xbc8 <__udivdi3_umoddi3>

00000bc6 <__udivdi3>:
 bc6:	e8 94       	clt

00000bc8 <__udivdi3_umoddi3>:
 bc8:	8f 92       	push	r8
 bca:	9f 92       	push	r9
 bcc:	cf 93       	push	r28
 bce:	df 93       	push	r29
 bd0:	0e 94 ef 05 	call	0xbde	; 0xbde <__udivmod64>
 bd4:	df 91       	pop	r29
 bd6:	cf 91       	pop	r28
 bd8:	9f 90       	pop	r9
 bda:	8f 90       	pop	r8
 bdc:	08 95       	ret

00000bde <__udivmod64>:
 bde:	88 24       	eor	r8, r8
 be0:	99 24       	eor	r9, r9
 be2:	f4 01       	movw	r30, r8
 be4:	e4 01       	movw	r28, r8
 be6:	b0 e4       	ldi	r27, 0x40	; 64
 be8:	9f 93       	push	r25
 bea:	aa 27       	eor	r26, r26
 bec:	9a 15       	cp	r25, r10
 bee:	8b 04       	cpc	r8, r11
 bf0:	9c 04       	cpc	r9, r12
 bf2:	ed 05       	cpc	r30, r13
 bf4:	fe 05       	cpc	r31, r14
 bf6:	cf 05       	cpc	r28, r15
 bf8:	d0 07       	cpc	r29, r16
 bfa:	a1 07       	cpc	r26, r17
 bfc:	98 f4       	brcc	.+38     	; 0xc24 <__udivmod64+0x46>
 bfe:	ad 2f       	mov	r26, r29
 c00:	dc 2f       	mov	r29, r28
 c02:	cf 2f       	mov	r28, r31
 c04:	fe 2f       	mov	r31, r30
 c06:	e9 2d       	mov	r30, r9
 c08:	98 2c       	mov	r9, r8
 c0a:	89 2e       	mov	r8, r25
 c0c:	98 2f       	mov	r25, r24
 c0e:	87 2f       	mov	r24, r23
 c10:	76 2f       	mov	r23, r22
 c12:	65 2f       	mov	r22, r21
 c14:	54 2f       	mov	r21, r20
 c16:	43 2f       	mov	r20, r19
 c18:	32 2f       	mov	r19, r18
 c1a:	22 27       	eor	r18, r18
 c1c:	b8 50       	subi	r27, 0x08	; 8
 c1e:	31 f7       	brne	.-52     	; 0xbec <__udivmod64+0xe>
 c20:	bf 91       	pop	r27
 c22:	27 c0       	rjmp	.+78     	; 0xc72 <__udivmod64+0x94>
 c24:	1b 2e       	mov	r1, r27
 c26:	bf 91       	pop	r27
 c28:	bb 27       	eor	r27, r27
 c2a:	22 0f       	add	r18, r18
 c2c:	33 1f       	adc	r19, r19
 c2e:	44 1f       	adc	r20, r20
 c30:	55 1f       	adc	r21, r21
 c32:	66 1f       	adc	r22, r22
 c34:	77 1f       	adc	r23, r23
 c36:	88 1f       	adc	r24, r24
 c38:	99 1f       	adc	r25, r25
 c3a:	88 1c       	adc	r8, r8
 c3c:	99 1c       	adc	r9, r9
 c3e:	ee 1f       	adc	r30, r30
 c40:	ff 1f       	adc	r31, r31
 c42:	cc 1f       	adc	r28, r28
 c44:	dd 1f       	adc	r29, r29
 c46:	aa 1f       	adc	r26, r26
 c48:	bb 1f       	adc	r27, r27
 c4a:	8a 14       	cp	r8, r10
 c4c:	9b 04       	cpc	r9, r11
 c4e:	ec 05       	cpc	r30, r12
 c50:	fd 05       	cpc	r31, r13
 c52:	ce 05       	cpc	r28, r14
 c54:	df 05       	cpc	r29, r15
 c56:	a0 07       	cpc	r26, r16
 c58:	b1 07       	cpc	r27, r17
 c5a:	48 f0       	brcs	.+18     	; 0xc6e <__udivmod64+0x90>
 c5c:	8a 18       	sub	r8, r10
 c5e:	9b 08       	sbc	r9, r11
 c60:	ec 09       	sbc	r30, r12
 c62:	fd 09       	sbc	r31, r13
 c64:	ce 09       	sbc	r28, r14
 c66:	df 09       	sbc	r29, r15
 c68:	a0 0b       	sbc	r26, r16
 c6a:	b1 0b       	sbc	r27, r17
 c6c:	21 60       	ori	r18, 0x01	; 1
 c6e:	1a 94       	dec	r1
 c70:	e1 f6       	brne	.-72     	; 0xc2a <__udivmod64+0x4c>
 c72:	2e f4       	brtc	.+10     	; 0xc7e <__udivmod64+0xa0>
 c74:	94 01       	movw	r18, r8
 c76:	af 01       	movw	r20, r30
 c78:	be 01       	movw	r22, r28
 c7a:	cd 01       	movw	r24, r26
 c7c:	00 0c       	add	r0, r0
 c7e:	08 95       	ret

00000c80 <__cmpdi2_s8>:
 c80:	00 24       	eor	r0, r0
 c82:	a7 fd       	sbrc	r26, 7
 c84:	00 94       	com	r0
 c86:	2a 17       	cp	r18, r26
 c88:	30 05       	cpc	r19, r0
 c8a:	40 05       	cpc	r20, r0
 c8c:	50 05       	cpc	r21, r0
 c8e:	60 05       	cpc	r22, r0
 c90:	70 05       	cpc	r23, r0
 c92:	80 05       	cpc	r24, r0
 c94:	90 05       	cpc	r25, r0
 c96:	08 95       	ret

00000c98 <_exit>:
 c98:	f8 94       	cli

00000c9a <__stop_program>:
 c9a:	ff cf       	rjmp	.-2      	; 0xc9a <__stop_program>
