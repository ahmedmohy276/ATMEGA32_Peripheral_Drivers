
TIMER_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000091e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000992  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  00800060  00800060  00000992  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000992  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013d5  00000000  00000000  00000b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000825  00000000  00000000  00001f05  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dcd  00000000  00000000  0000272a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000368  00000000  00000000  000034f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000891  00000000  00000000  00003860  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001841  00000000  00000000  000040f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  00005932  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 a4 03 	jmp	0x748	; 0x748 <__vector_4>
  14:	0c 94 38 04 	jmp	0x870	; 0x870 <__vector_5>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__vector_10>
  2c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__vector_11>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	cd 01       	movw	r24, r26
  56:	d7 01       	movw	r26, r14
  58:	e1 01       	movw	r28, r2
  5a:	7a 02       	muls	r23, r26
  5c:	eb 01       	movw	r28, r22
  5e:	7a 02       	muls	r23, r26
  60:	f5 01       	movw	r30, r10
  62:	ff 01       	movw	r30, r30
  64:	09 02       	muls	r16, r25
  66:	13 02       	muls	r17, r19
  68:	2b 02       	muls	r18, r27
  6a:	35 02       	muls	r19, r21
  6c:	3f 02       	muls	r19, r31
  6e:	49 02       	muls	r20, r25
  70:	53 02       	muls	r21, r19
  72:	5d 02       	muls	r21, r29
  74:	67 02       	muls	r22, r23
  76:	71 02       	muls	r23, r17

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf e5       	ldi	r28, 0x5F	; 95
  7e:	d8 e0       	ldi	r29, 0x08	; 8
  80:	de bf       	out	0x3e, r29	; 62
  82:	cd bf       	out	0x3d, r28	; 61

00000084 <__do_clear_bss>:
  84:	20 e0       	ldi	r18, 0x00	; 0
  86:	a0 e6       	ldi	r26, 0x60	; 96
  88:	b0 e0       	ldi	r27, 0x00	; 0
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	a9 38       	cpi	r26, 0x89	; 137
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <main>
  98:	0c 94 8d 04 	jmp	0x91a	; 0x91a <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <DIO_VoidSetPinDirection>:
#include "DIO_PRIVATE.h"
//#include <avr/io.h>

void DIO_VoidSetPinDirection(u8 pin_number,u8 port_number,u8 direction)
{
	switch(port_number)
  a0:	63 30       	cpi	r22, 0x03	; 3
  a2:	51 f1       	breq	.+84     	; 0xf8 <DIO_VoidSetPinDirection+0x58>
  a4:	18 f4       	brcc	.+6      	; 0xac <DIO_VoidSetPinDirection+0xc>
  a6:	62 30       	cpi	r22, 0x02	; 2
  a8:	41 f0       	breq	.+16     	; 0xba <DIO_VoidSetPinDirection+0x1a>
  aa:	08 95       	ret
  ac:	64 30       	cpi	r22, 0x04	; 4
  ae:	09 f4       	brne	.+2      	; 0xb2 <DIO_VoidSetPinDirection+0x12>
  b0:	42 c0       	rjmp	.+132    	; 0x136 <DIO_VoidSetPinDirection+0x96>
  b2:	65 30       	cpi	r22, 0x05	; 5
  b4:	09 f4       	brne	.+2      	; 0xb8 <DIO_VoidSetPinDirection+0x18>
  b6:	5e c0       	rjmp	.+188    	; 0x174 <DIO_VoidSetPinDirection+0xd4>
  b8:	08 95       	ret
	{
		case portA:
			if (direction==OUTPUT)
  ba:	41 30       	cpi	r20, 0x01	; 1
  bc:	69 f4       	brne	.+26     	; 0xd8 <DIO_VoidSetPinDirection+0x38>
			{
				SET_Bit(DDRA_REG,pin_number);
  be:	4a b3       	in	r20, 0x1a	; 26
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	b9 01       	movw	r22, r18
  c6:	02 c0       	rjmp	.+4      	; 0xcc <DIO_VoidSetPinDirection+0x2c>
  c8:	66 0f       	add	r22, r22
  ca:	77 1f       	adc	r23, r23
  cc:	8a 95       	dec	r24
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <DIO_VoidSetPinDirection+0x28>
  d0:	cb 01       	movw	r24, r22
  d2:	84 2b       	or	r24, r20
  d4:	8a bb       	out	0x1a, r24	; 26
  d6:	08 95       	ret
			}
			else if (direction==INPUT)
  d8:	41 11       	cpse	r20, r1
  da:	6a c0       	rjmp	.+212    	; 0x1b0 <DIO_VoidSetPinDirection+0x110>
			{
				CLEAR_Bit(DDRA_REG,pin_number);
  dc:	4a b3       	in	r20, 0x1a	; 26
  de:	21 e0       	ldi	r18, 0x01	; 1
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	b9 01       	movw	r22, r18
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_VoidSetPinDirection+0x4a>
  e6:	66 0f       	add	r22, r22
  e8:	77 1f       	adc	r23, r23
  ea:	8a 95       	dec	r24
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_VoidSetPinDirection+0x46>
  ee:	cb 01       	movw	r24, r22
  f0:	80 95       	com	r24
  f2:	84 23       	and	r24, r20
  f4:	8a bb       	out	0x1a, r24	; 26
  f6:	08 95       	ret
			}
			break;
		case portB:
			if (direction==OUTPUT)
  f8:	41 30       	cpi	r20, 0x01	; 1
  fa:	69 f4       	brne	.+26     	; 0x116 <DIO_VoidSetPinDirection+0x76>
			{
				SET_Bit(DDRB_REG,pin_number);
  fc:	47 b3       	in	r20, 0x17	; 23
  fe:	21 e0       	ldi	r18, 0x01	; 1
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	b9 01       	movw	r22, r18
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_VoidSetPinDirection+0x6a>
 106:	66 0f       	add	r22, r22
 108:	77 1f       	adc	r23, r23
 10a:	8a 95       	dec	r24
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_VoidSetPinDirection+0x66>
 10e:	cb 01       	movw	r24, r22
 110:	84 2b       	or	r24, r20
 112:	87 bb       	out	0x17, r24	; 23
 114:	08 95       	ret
			}
			else if (direction==INPUT)
 116:	41 11       	cpse	r20, r1
 118:	4b c0       	rjmp	.+150    	; 0x1b0 <DIO_VoidSetPinDirection+0x110>
			{
				CLEAR_Bit(DDRB_REG,pin_number);
 11a:	47 b3       	in	r20, 0x17	; 23
 11c:	21 e0       	ldi	r18, 0x01	; 1
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	b9 01       	movw	r22, r18
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_VoidSetPinDirection+0x88>
 124:	66 0f       	add	r22, r22
 126:	77 1f       	adc	r23, r23
 128:	8a 95       	dec	r24
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_VoidSetPinDirection+0x84>
 12c:	cb 01       	movw	r24, r22
 12e:	80 95       	com	r24
 130:	84 23       	and	r24, r20
 132:	87 bb       	out	0x17, r24	; 23
 134:	08 95       	ret
			}
			break;
		case portC:
			if (direction==OUTPUT)
 136:	41 30       	cpi	r20, 0x01	; 1
 138:	69 f4       	brne	.+26     	; 0x154 <DIO_VoidSetPinDirection+0xb4>
			{
				SET_Bit(DDRC_REG,pin_number);
 13a:	44 b3       	in	r20, 0x14	; 20
 13c:	21 e0       	ldi	r18, 0x01	; 1
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	b9 01       	movw	r22, r18
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_VoidSetPinDirection+0xa8>
 144:	66 0f       	add	r22, r22
 146:	77 1f       	adc	r23, r23
 148:	8a 95       	dec	r24
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_VoidSetPinDirection+0xa4>
 14c:	cb 01       	movw	r24, r22
 14e:	84 2b       	or	r24, r20
 150:	84 bb       	out	0x14, r24	; 20
 152:	08 95       	ret
			}
			else if (direction==INPUT)
 154:	41 11       	cpse	r20, r1
 156:	2c c0       	rjmp	.+88     	; 0x1b0 <DIO_VoidSetPinDirection+0x110>
			{
				CLEAR_Bit(DDRC_REG,pin_number);
 158:	44 b3       	in	r20, 0x14	; 20
 15a:	21 e0       	ldi	r18, 0x01	; 1
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	b9 01       	movw	r22, r18
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_VoidSetPinDirection+0xc6>
 162:	66 0f       	add	r22, r22
 164:	77 1f       	adc	r23, r23
 166:	8a 95       	dec	r24
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_VoidSetPinDirection+0xc2>
 16a:	cb 01       	movw	r24, r22
 16c:	80 95       	com	r24
 16e:	84 23       	and	r24, r20
 170:	84 bb       	out	0x14, r24	; 20
 172:	08 95       	ret
			}
			break;
		case portD:
			if (direction==OUTPUT)
 174:	41 30       	cpi	r20, 0x01	; 1
 176:	69 f4       	brne	.+26     	; 0x192 <DIO_VoidSetPinDirection+0xf2>
			{
				SET_Bit(DDRD_REG,pin_number);
 178:	41 b3       	in	r20, 0x11	; 17
 17a:	21 e0       	ldi	r18, 0x01	; 1
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	b9 01       	movw	r22, r18
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_VoidSetPinDirection+0xe6>
 182:	66 0f       	add	r22, r22
 184:	77 1f       	adc	r23, r23
 186:	8a 95       	dec	r24
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_VoidSetPinDirection+0xe2>
 18a:	cb 01       	movw	r24, r22
 18c:	84 2b       	or	r24, r20
 18e:	81 bb       	out	0x11, r24	; 17
 190:	08 95       	ret
			}
			else if (direction==INPUT)
 192:	41 11       	cpse	r20, r1
 194:	0d c0       	rjmp	.+26     	; 0x1b0 <DIO_VoidSetPinDirection+0x110>
			{
				CLEAR_Bit(DDRD_REG,pin_number);
 196:	41 b3       	in	r20, 0x11	; 17
 198:	21 e0       	ldi	r18, 0x01	; 1
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	b9 01       	movw	r22, r18
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_VoidSetPinDirection+0x104>
 1a0:	66 0f       	add	r22, r22
 1a2:	77 1f       	adc	r23, r23
 1a4:	8a 95       	dec	r24
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_VoidSetPinDirection+0x100>
 1a8:	cb 01       	movw	r24, r22
 1aa:	80 95       	com	r24
 1ac:	84 23       	and	r24, r20
 1ae:	81 bb       	out	0x11, r24	; 17
 1b0:	08 95       	ret

000001b2 <main>:
void myfunc2(void);

int main(void)
{
    /* Replace with your application code */
	DIO_VoidSetPinDirection(0,portD,OUTPUT);
 1b2:	41 e0       	ldi	r20, 0x01	; 1
 1b4:	65 e0       	ldi	r22, 0x05	; 5
 1b6:	80 e0       	ldi	r24, 0x00	; 0
 1b8:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_VoidSetPinDirection>
	DIO_VoidSetPinDirection(1,portD,OUTPUT);
 1bc:	41 e0       	ldi	r20, 0x01	; 1
 1be:	65 e0       	ldi	r22, 0x05	; 5
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_VoidSetPinDirection>
	
	/*DIO_VoidSetPinValue(0,portD,HIGH);
	delay_ms(1000);
	DIO_VoidSetPinValue(0,portD,LOW);
	Timer_VoidSetAlarm(4000,TIMER_2,myfunc);*/
	Timer_VoidPWMGeneration(TIMER_2,90,FAST_PWM_MODE,NON_INVERTING_MODE,NO_PRESCALER);
 1c6:	0e e0       	ldi	r16, 0x0E	; 14
 1c8:	2b e0       	ldi	r18, 0x0B	; 11
 1ca:	45 e0       	ldi	r20, 0x05	; 5
 1cc:	6a e5       	ldi	r22, 0x5A	; 90
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 84 02 	call	0x508	; 0x508 <Timer_VoidPWMGeneration>
	Timer_VoidPWMGeneration(TIMER_0,60,PWM_PHASE_CORRECT_MODE,NON_INVERTING_MODE,NO_PRESCALER);
 1d4:	2b e0       	ldi	r18, 0x0B	; 11
 1d6:	43 e0       	ldi	r20, 0x03	; 3
 1d8:	6c e3       	ldi	r22, 0x3C	; 60
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	0e 94 84 02 	call	0x508	; 0x508 <Timer_VoidPWMGeneration>
 1e0:	ff cf       	rjmp	.-2      	; 0x1e0 <main+0x2e>

000001e2 <Timer_VoidSetWaveFormGenerationMode>:
	u_sec=time_us;
	Timer_VoidInit(TIMER_2,CTC_MODE,PRESCALER_64,COMPARE_MATCH_INT_EN);
	Timer_VoidSetCompareMatchMode(DISCONNECT_OC0,TIMER_2);
	Timer_VoidSetOCRValue(7,TIMER_2);
	while(us_delay_flag==1);
	TCCR2_REG = 0x00;
 1e2:	61 11       	cpse	r22, r1
 1e4:	27 c0       	rjmp	.+78     	; 0x234 <Timer_VoidSetWaveFormGenerationMode+0x52>
 1e6:	83 30       	cpi	r24, 0x03	; 3
 1e8:	81 f0       	breq	.+32     	; 0x20a <Timer_VoidSetWaveFormGenerationMode+0x28>
 1ea:	18 f4       	brcc	.+6      	; 0x1f2 <Timer_VoidSetWaveFormGenerationMode+0x10>
 1ec:	82 30       	cpi	r24, 0x02	; 2
 1ee:	31 f0       	breq	.+12     	; 0x1fc <Timer_VoidSetWaveFormGenerationMode+0x1a>
 1f0:	08 95       	ret
 1f2:	84 30       	cpi	r24, 0x04	; 4
 1f4:	89 f0       	breq	.+34     	; 0x218 <Timer_VoidSetWaveFormGenerationMode+0x36>
 1f6:	85 30       	cpi	r24, 0x05	; 5
 1f8:	b1 f0       	breq	.+44     	; 0x226 <Timer_VoidSetWaveFormGenerationMode+0x44>
 1fa:	08 95       	ret
 1fc:	83 b7       	in	r24, 0x33	; 51
 1fe:	8f 7b       	andi	r24, 0xBF	; 191
 200:	83 bf       	out	0x33, r24	; 51
 202:	83 b7       	in	r24, 0x33	; 51
 204:	87 7f       	andi	r24, 0xF7	; 247
 206:	83 bf       	out	0x33, r24	; 51
 208:	08 95       	ret
 20a:	83 b7       	in	r24, 0x33	; 51
 20c:	80 64       	ori	r24, 0x40	; 64
 20e:	83 bf       	out	0x33, r24	; 51
 210:	83 b7       	in	r24, 0x33	; 51
 212:	87 7f       	andi	r24, 0xF7	; 247
 214:	83 bf       	out	0x33, r24	; 51
 216:	08 95       	ret
 218:	83 b7       	in	r24, 0x33	; 51
 21a:	8f 7b       	andi	r24, 0xBF	; 191
 21c:	83 bf       	out	0x33, r24	; 51
 21e:	83 b7       	in	r24, 0x33	; 51
 220:	88 60       	ori	r24, 0x08	; 8
 222:	83 bf       	out	0x33, r24	; 51
 224:	08 95       	ret
 226:	83 b7       	in	r24, 0x33	; 51
 228:	80 64       	ori	r24, 0x40	; 64
 22a:	83 bf       	out	0x33, r24	; 51
 22c:	83 b7       	in	r24, 0x33	; 51
 22e:	88 60       	ori	r24, 0x08	; 8
 230:	83 bf       	out	0x33, r24	; 51
 232:	08 95       	ret
 234:	61 30       	cpi	r22, 0x01	; 1
 236:	31 f5       	brne	.+76     	; 0x284 <Timer_VoidSetWaveFormGenerationMode+0xa2>
 238:	83 30       	cpi	r24, 0x03	; 3
 23a:	81 f0       	breq	.+32     	; 0x25c <Timer_VoidSetWaveFormGenerationMode+0x7a>
 23c:	18 f4       	brcc	.+6      	; 0x244 <Timer_VoidSetWaveFormGenerationMode+0x62>
 23e:	82 30       	cpi	r24, 0x02	; 2
 240:	31 f0       	breq	.+12     	; 0x24e <Timer_VoidSetWaveFormGenerationMode+0x6c>
 242:	08 95       	ret
 244:	84 30       	cpi	r24, 0x04	; 4
 246:	89 f0       	breq	.+34     	; 0x26a <Timer_VoidSetWaveFormGenerationMode+0x88>
 248:	85 30       	cpi	r24, 0x05	; 5
 24a:	b1 f0       	breq	.+44     	; 0x278 <Timer_VoidSetWaveFormGenerationMode+0x96>
 24c:	08 95       	ret
 24e:	85 b5       	in	r24, 0x25	; 37
 250:	8f 7b       	andi	r24, 0xBF	; 191
 252:	85 bd       	out	0x25, r24	; 37
 254:	85 b5       	in	r24, 0x25	; 37
 256:	87 7f       	andi	r24, 0xF7	; 247
 258:	85 bd       	out	0x25, r24	; 37
 25a:	08 95       	ret
 25c:	85 b5       	in	r24, 0x25	; 37
 25e:	80 64       	ori	r24, 0x40	; 64
 260:	85 bd       	out	0x25, r24	; 37
 262:	85 b5       	in	r24, 0x25	; 37
 264:	87 7f       	andi	r24, 0xF7	; 247
 266:	85 bd       	out	0x25, r24	; 37
 268:	08 95       	ret
 26a:	85 b5       	in	r24, 0x25	; 37
 26c:	8f 7b       	andi	r24, 0xBF	; 191
 26e:	85 bd       	out	0x25, r24	; 37
 270:	85 b5       	in	r24, 0x25	; 37
 272:	88 60       	ori	r24, 0x08	; 8
 274:	85 bd       	out	0x25, r24	; 37
 276:	08 95       	ret
 278:	85 b5       	in	r24, 0x25	; 37
 27a:	80 64       	ori	r24, 0x40	; 64
 27c:	85 bd       	out	0x25, r24	; 37
 27e:	85 b5       	in	r24, 0x25	; 37
 280:	88 60       	ori	r24, 0x08	; 8
 282:	85 bd       	out	0x25, r24	; 37
 284:	08 95       	ret

00000286 <Timer_VoidSetCompareMatchMode>:
 286:	61 11       	cpse	r22, r1
 288:	3d c0       	rjmp	.+122    	; 0x304 <Timer_VoidSetCompareMatchMode+0x7e>
 28a:	86 30       	cpi	r24, 0x06	; 6
 28c:	39 f4       	brne	.+14     	; 0x29c <Timer_VoidSetCompareMatchMode+0x16>
 28e:	83 b7       	in	r24, 0x33	; 51
 290:	8f 7e       	andi	r24, 0xEF	; 239
 292:	83 bf       	out	0x33, r24	; 51
 294:	83 b7       	in	r24, 0x33	; 51
 296:	8f 7d       	andi	r24, 0xDF	; 223
 298:	83 bf       	out	0x33, r24	; 51
 29a:	08 95       	ret
 29c:	21 e0       	ldi	r18, 0x01	; 1
 29e:	87 30       	cpi	r24, 0x07	; 7
 2a0:	09 f0       	breq	.+2      	; 0x2a4 <Timer_VoidSetCompareMatchMode+0x1e>
 2a2:	20 e0       	ldi	r18, 0x00	; 0
 2a4:	91 e0       	ldi	r25, 0x01	; 1
 2a6:	8a 30       	cpi	r24, 0x0A	; 10
 2a8:	09 f0       	breq	.+2      	; 0x2ac <Timer_VoidSetCompareMatchMode+0x26>
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	92 2b       	or	r25, r18
 2ae:	39 f0       	breq	.+14     	; 0x2be <Timer_VoidSetCompareMatchMode+0x38>
 2b0:	83 b7       	in	r24, 0x33	; 51
 2b2:	80 61       	ori	r24, 0x10	; 16
 2b4:	83 bf       	out	0x33, r24	; 51
 2b6:	83 b7       	in	r24, 0x33	; 51
 2b8:	8f 7d       	andi	r24, 0xDF	; 223
 2ba:	83 bf       	out	0x33, r24	; 51
 2bc:	08 95       	ret
 2be:	21 e0       	ldi	r18, 0x01	; 1
 2c0:	88 30       	cpi	r24, 0x08	; 8
 2c2:	09 f0       	breq	.+2      	; 0x2c6 <Timer_VoidSetCompareMatchMode+0x40>
 2c4:	20 e0       	ldi	r18, 0x00	; 0
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	8b 30       	cpi	r24, 0x0B	; 11
 2ca:	09 f0       	breq	.+2      	; 0x2ce <Timer_VoidSetCompareMatchMode+0x48>
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	92 2b       	or	r25, r18
 2d0:	39 f0       	breq	.+14     	; 0x2e0 <Timer_VoidSetCompareMatchMode+0x5a>
 2d2:	83 b7       	in	r24, 0x33	; 51
 2d4:	8f 7e       	andi	r24, 0xEF	; 239
 2d6:	83 bf       	out	0x33, r24	; 51
 2d8:	83 b7       	in	r24, 0x33	; 51
 2da:	80 62       	ori	r24, 0x20	; 32
 2dc:	83 bf       	out	0x33, r24	; 51
 2de:	08 95       	ret
 2e0:	21 e0       	ldi	r18, 0x01	; 1
 2e2:	89 30       	cpi	r24, 0x09	; 9
 2e4:	09 f0       	breq	.+2      	; 0x2e8 <Timer_VoidSetCompareMatchMode+0x62>
 2e6:	20 e0       	ldi	r18, 0x00	; 0
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	8c 30       	cpi	r24, 0x0C	; 12
 2ec:	09 f0       	breq	.+2      	; 0x2f0 <Timer_VoidSetCompareMatchMode+0x6a>
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	92 2b       	or	r25, r18
 2f2:	09 f4       	brne	.+2      	; 0x2f6 <Timer_VoidSetCompareMatchMode+0x70>
 2f4:	44 c0       	rjmp	.+136    	; 0x37e <Timer_VoidSetCompareMatchMode+0xf8>
 2f6:	83 b7       	in	r24, 0x33	; 51
 2f8:	80 61       	ori	r24, 0x10	; 16
 2fa:	83 bf       	out	0x33, r24	; 51
 2fc:	83 b7       	in	r24, 0x33	; 51
 2fe:	80 62       	ori	r24, 0x20	; 32
 300:	83 bf       	out	0x33, r24	; 51
 302:	08 95       	ret
 304:	61 30       	cpi	r22, 0x01	; 1
 306:	d9 f5       	brne	.+118    	; 0x37e <Timer_VoidSetCompareMatchMode+0xf8>
 308:	86 30       	cpi	r24, 0x06	; 6
 30a:	39 f4       	brne	.+14     	; 0x31a <Timer_VoidSetCompareMatchMode+0x94>
 30c:	85 b5       	in	r24, 0x25	; 37
 30e:	8f 7e       	andi	r24, 0xEF	; 239
 310:	85 bd       	out	0x25, r24	; 37
 312:	85 b5       	in	r24, 0x25	; 37
 314:	8f 7d       	andi	r24, 0xDF	; 223
 316:	85 bd       	out	0x25, r24	; 37
 318:	08 95       	ret
 31a:	21 e0       	ldi	r18, 0x01	; 1
 31c:	87 30       	cpi	r24, 0x07	; 7
 31e:	09 f0       	breq	.+2      	; 0x322 <Timer_VoidSetCompareMatchMode+0x9c>
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	91 e0       	ldi	r25, 0x01	; 1
 324:	8a 30       	cpi	r24, 0x0A	; 10
 326:	09 f0       	breq	.+2      	; 0x32a <Timer_VoidSetCompareMatchMode+0xa4>
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	92 2b       	or	r25, r18
 32c:	39 f0       	breq	.+14     	; 0x33c <Timer_VoidSetCompareMatchMode+0xb6>
 32e:	85 b5       	in	r24, 0x25	; 37
 330:	80 61       	ori	r24, 0x10	; 16
 332:	85 bd       	out	0x25, r24	; 37
 334:	85 b5       	in	r24, 0x25	; 37
 336:	8f 7d       	andi	r24, 0xDF	; 223
 338:	85 bd       	out	0x25, r24	; 37
 33a:	08 95       	ret
 33c:	21 e0       	ldi	r18, 0x01	; 1
 33e:	88 30       	cpi	r24, 0x08	; 8
 340:	09 f0       	breq	.+2      	; 0x344 <Timer_VoidSetCompareMatchMode+0xbe>
 342:	20 e0       	ldi	r18, 0x00	; 0
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	8b 30       	cpi	r24, 0x0B	; 11
 348:	09 f0       	breq	.+2      	; 0x34c <Timer_VoidSetCompareMatchMode+0xc6>
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	92 2b       	or	r25, r18
 34e:	39 f0       	breq	.+14     	; 0x35e <Timer_VoidSetCompareMatchMode+0xd8>
 350:	85 b5       	in	r24, 0x25	; 37
 352:	8f 7e       	andi	r24, 0xEF	; 239
 354:	85 bd       	out	0x25, r24	; 37
 356:	85 b5       	in	r24, 0x25	; 37
 358:	80 62       	ori	r24, 0x20	; 32
 35a:	85 bd       	out	0x25, r24	; 37
 35c:	08 95       	ret
 35e:	21 e0       	ldi	r18, 0x01	; 1
 360:	89 30       	cpi	r24, 0x09	; 9
 362:	09 f0       	breq	.+2      	; 0x366 <Timer_VoidSetCompareMatchMode+0xe0>
 364:	20 e0       	ldi	r18, 0x00	; 0
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	8c 30       	cpi	r24, 0x0C	; 12
 36a:	09 f0       	breq	.+2      	; 0x36e <Timer_VoidSetCompareMatchMode+0xe8>
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	92 2b       	or	r25, r18
 370:	31 f0       	breq	.+12     	; 0x37e <Timer_VoidSetCompareMatchMode+0xf8>
 372:	85 b5       	in	r24, 0x25	; 37
 374:	80 61       	ori	r24, 0x10	; 16
 376:	85 bd       	out	0x25, r24	; 37
 378:	85 b5       	in	r24, 0x25	; 37
 37a:	80 62       	ori	r24, 0x20	; 32
 37c:	85 bd       	out	0x25, r24	; 37
 37e:	08 95       	ret

00000380 <Timer_VoidSetPrescaler>:
 380:	61 11       	cpse	r22, r1
 382:	5b c0       	rjmp	.+182    	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	fc 01       	movw	r30, r24
 388:	3d 97       	sbiw	r30, 0x0d	; 13
 38a:	ea 30       	cpi	r30, 0x0A	; 10
 38c:	f1 05       	cpc	r31, r1
 38e:	08 f0       	brcs	.+2      	; 0x392 <Timer_VoidSetPrescaler+0x12>
 390:	b1 c0       	rjmp	.+354    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 392:	e6 5d       	subi	r30, 0xD6	; 214
 394:	ff 4f       	sbci	r31, 0xFF	; 255
 396:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__tablejump2__>
 39a:	83 b7       	in	r24, 0x33	; 51
 39c:	8e 7f       	andi	r24, 0xFE	; 254
 39e:	83 bf       	out	0x33, r24	; 51
 3a0:	83 b7       	in	r24, 0x33	; 51
 3a2:	8d 7f       	andi	r24, 0xFD	; 253
 3a4:	83 bf       	out	0x33, r24	; 51
 3a6:	83 b7       	in	r24, 0x33	; 51
 3a8:	8b 7f       	andi	r24, 0xFB	; 251
 3aa:	83 bf       	out	0x33, r24	; 51
 3ac:	08 95       	ret
 3ae:	83 b7       	in	r24, 0x33	; 51
 3b0:	81 60       	ori	r24, 0x01	; 1
 3b2:	83 bf       	out	0x33, r24	; 51
 3b4:	83 b7       	in	r24, 0x33	; 51
 3b6:	8d 7f       	andi	r24, 0xFD	; 253
 3b8:	83 bf       	out	0x33, r24	; 51
 3ba:	83 b7       	in	r24, 0x33	; 51
 3bc:	8b 7f       	andi	r24, 0xFB	; 251
 3be:	83 bf       	out	0x33, r24	; 51
 3c0:	08 95       	ret
 3c2:	83 b7       	in	r24, 0x33	; 51
 3c4:	8e 7f       	andi	r24, 0xFE	; 254
 3c6:	83 bf       	out	0x33, r24	; 51
 3c8:	83 b7       	in	r24, 0x33	; 51
 3ca:	82 60       	ori	r24, 0x02	; 2
 3cc:	83 bf       	out	0x33, r24	; 51
 3ce:	83 b7       	in	r24, 0x33	; 51
 3d0:	8b 7f       	andi	r24, 0xFB	; 251
 3d2:	83 bf       	out	0x33, r24	; 51
 3d4:	08 95       	ret
 3d6:	83 b7       	in	r24, 0x33	; 51
 3d8:	81 60       	ori	r24, 0x01	; 1
 3da:	83 bf       	out	0x33, r24	; 51
 3dc:	83 b7       	in	r24, 0x33	; 51
 3de:	82 60       	ori	r24, 0x02	; 2
 3e0:	83 bf       	out	0x33, r24	; 51
 3e2:	83 b7       	in	r24, 0x33	; 51
 3e4:	8b 7f       	andi	r24, 0xFB	; 251
 3e6:	83 bf       	out	0x33, r24	; 51
 3e8:	08 95       	ret
 3ea:	83 b7       	in	r24, 0x33	; 51
 3ec:	8e 7f       	andi	r24, 0xFE	; 254
 3ee:	83 bf       	out	0x33, r24	; 51
 3f0:	83 b7       	in	r24, 0x33	; 51
 3f2:	8d 7f       	andi	r24, 0xFD	; 253
 3f4:	83 bf       	out	0x33, r24	; 51
 3f6:	83 b7       	in	r24, 0x33	; 51
 3f8:	84 60       	ori	r24, 0x04	; 4
 3fa:	83 bf       	out	0x33, r24	; 51
 3fc:	08 95       	ret
 3fe:	83 b7       	in	r24, 0x33	; 51
 400:	81 60       	ori	r24, 0x01	; 1
 402:	83 bf       	out	0x33, r24	; 51
 404:	83 b7       	in	r24, 0x33	; 51
 406:	8d 7f       	andi	r24, 0xFD	; 253
 408:	83 bf       	out	0x33, r24	; 51
 40a:	83 b7       	in	r24, 0x33	; 51
 40c:	84 60       	ori	r24, 0x04	; 4
 40e:	83 bf       	out	0x33, r24	; 51
 410:	08 95       	ret
 412:	83 b7       	in	r24, 0x33	; 51
 414:	8e 7f       	andi	r24, 0xFE	; 254
 416:	83 bf       	out	0x33, r24	; 51
 418:	83 b7       	in	r24, 0x33	; 51
 41a:	82 60       	ori	r24, 0x02	; 2
 41c:	83 bf       	out	0x33, r24	; 51
 41e:	83 b7       	in	r24, 0x33	; 51
 420:	84 60       	ori	r24, 0x04	; 4
 422:	83 bf       	out	0x33, r24	; 51
 424:	08 95       	ret
 426:	83 b7       	in	r24, 0x33	; 51
 428:	81 60       	ori	r24, 0x01	; 1
 42a:	83 bf       	out	0x33, r24	; 51
 42c:	83 b7       	in	r24, 0x33	; 51
 42e:	82 60       	ori	r24, 0x02	; 2
 430:	83 bf       	out	0x33, r24	; 51
 432:	83 b7       	in	r24, 0x33	; 51
 434:	84 60       	ori	r24, 0x04	; 4
 436:	83 bf       	out	0x33, r24	; 51
 438:	08 95       	ret
 43a:	61 30       	cpi	r22, 0x01	; 1
 43c:	09 f0       	breq	.+2      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 43e:	5a c0       	rjmp	.+180    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	fc 01       	movw	r30, r24
 444:	3d 97       	sbiw	r30, 0x0d	; 13
 446:	e8 30       	cpi	r30, 0x08	; 8
 448:	f1 05       	cpc	r31, r1
 44a:	08 f0       	brcs	.+2      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 44c:	53 c0       	rjmp	.+166    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 44e:	ec 5c       	subi	r30, 0xCC	; 204
 450:	ff 4f       	sbci	r31, 0xFF	; 255
 452:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__tablejump2__>
 456:	85 b5       	in	r24, 0x25	; 37
 458:	8e 7f       	andi	r24, 0xFE	; 254
 45a:	85 bd       	out	0x25, r24	; 37
 45c:	85 b5       	in	r24, 0x25	; 37
 45e:	8d 7f       	andi	r24, 0xFD	; 253
 460:	85 bd       	out	0x25, r24	; 37
 462:	85 b5       	in	r24, 0x25	; 37
 464:	8b 7f       	andi	r24, 0xFB	; 251
 466:	85 bd       	out	0x25, r24	; 37
 468:	08 95       	ret
 46a:	85 b5       	in	r24, 0x25	; 37
 46c:	81 60       	ori	r24, 0x01	; 1
 46e:	85 bd       	out	0x25, r24	; 37
 470:	85 b5       	in	r24, 0x25	; 37
 472:	8d 7f       	andi	r24, 0xFD	; 253
 474:	85 bd       	out	0x25, r24	; 37
 476:	85 b5       	in	r24, 0x25	; 37
 478:	8b 7f       	andi	r24, 0xFB	; 251
 47a:	85 bd       	out	0x25, r24	; 37
 47c:	08 95       	ret
 47e:	85 b5       	in	r24, 0x25	; 37
 480:	8e 7f       	andi	r24, 0xFE	; 254
 482:	85 bd       	out	0x25, r24	; 37
 484:	85 b5       	in	r24, 0x25	; 37
 486:	82 60       	ori	r24, 0x02	; 2
 488:	85 bd       	out	0x25, r24	; 37
 48a:	85 b5       	in	r24, 0x25	; 37
 48c:	8b 7f       	andi	r24, 0xFB	; 251
 48e:	85 bd       	out	0x25, r24	; 37
 490:	08 95       	ret
 492:	85 b5       	in	r24, 0x25	; 37
 494:	81 60       	ori	r24, 0x01	; 1
 496:	85 bd       	out	0x25, r24	; 37
 498:	85 b5       	in	r24, 0x25	; 37
 49a:	82 60       	ori	r24, 0x02	; 2
 49c:	85 bd       	out	0x25, r24	; 37
 49e:	83 b7       	in	r24, 0x33	; 51
 4a0:	8b 7f       	andi	r24, 0xFB	; 251
 4a2:	83 bf       	out	0x33, r24	; 51
 4a4:	08 95       	ret
 4a6:	85 b5       	in	r24, 0x25	; 37
 4a8:	8e 7f       	andi	r24, 0xFE	; 254
 4aa:	85 bd       	out	0x25, r24	; 37
 4ac:	85 b5       	in	r24, 0x25	; 37
 4ae:	8d 7f       	andi	r24, 0xFD	; 253
 4b0:	85 bd       	out	0x25, r24	; 37
 4b2:	85 b5       	in	r24, 0x25	; 37
 4b4:	84 60       	ori	r24, 0x04	; 4
 4b6:	85 bd       	out	0x25, r24	; 37
 4b8:	08 95       	ret
 4ba:	85 b5       	in	r24, 0x25	; 37
 4bc:	81 60       	ori	r24, 0x01	; 1
 4be:	85 bd       	out	0x25, r24	; 37
 4c0:	85 b5       	in	r24, 0x25	; 37
 4c2:	8d 7f       	andi	r24, 0xFD	; 253
 4c4:	85 bd       	out	0x25, r24	; 37
 4c6:	85 b5       	in	r24, 0x25	; 37
 4c8:	84 60       	ori	r24, 0x04	; 4
 4ca:	85 bd       	out	0x25, r24	; 37
 4cc:	08 95       	ret
 4ce:	85 b5       	in	r24, 0x25	; 37
 4d0:	8e 7f       	andi	r24, 0xFE	; 254
 4d2:	85 bd       	out	0x25, r24	; 37
 4d4:	85 b5       	in	r24, 0x25	; 37
 4d6:	82 60       	ori	r24, 0x02	; 2
 4d8:	85 bd       	out	0x25, r24	; 37
 4da:	85 b5       	in	r24, 0x25	; 37
 4dc:	84 60       	ori	r24, 0x04	; 4
 4de:	85 bd       	out	0x25, r24	; 37
 4e0:	08 95       	ret
 4e2:	85 b5       	in	r24, 0x25	; 37
 4e4:	81 60       	ori	r24, 0x01	; 1
 4e6:	85 bd       	out	0x25, r24	; 37
 4e8:	85 b5       	in	r24, 0x25	; 37
 4ea:	82 60       	ori	r24, 0x02	; 2
 4ec:	85 bd       	out	0x25, r24	; 37
 4ee:	85 b5       	in	r24, 0x25	; 37
 4f0:	84 60       	ori	r24, 0x04	; 4
 4f2:	85 bd       	out	0x25, r24	; 37
 4f4:	08 95       	ret

000004f6 <Timer_VoidSetOCRValue>:
 4f6:	66 23       	and	r22, r22
 4f8:	19 f0       	breq	.+6      	; 0x500 <Timer_VoidSetOCRValue+0xa>
 4fa:	61 30       	cpi	r22, 0x01	; 1
 4fc:	19 f0       	breq	.+6      	; 0x504 <Timer_VoidSetOCRValue+0xe>
 4fe:	08 95       	ret
 500:	8c bf       	out	0x3c, r24	; 60
 502:	08 95       	ret
 504:	83 bd       	out	0x23, r24	; 35
 506:	08 95       	ret

00000508 <Timer_VoidPWMGeneration>:
 508:	ff 92       	push	r15
 50a:	0f 93       	push	r16
 50c:	1f 93       	push	r17
 50e:	cf 93       	push	r28
 510:	df 93       	push	r29
 512:	c8 2f       	mov	r28, r24
 514:	f6 2e       	mov	r15, r22
 516:	d4 2f       	mov	r29, r20
 518:	12 2f       	mov	r17, r18
 51a:	68 2f       	mov	r22, r24
 51c:	84 2f       	mov	r24, r20
 51e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <Timer_VoidSetWaveFormGenerationMode>
 522:	6c 2f       	mov	r22, r28
 524:	81 2f       	mov	r24, r17
 526:	0e 94 43 01 	call	0x286	; 0x286 <Timer_VoidSetCompareMatchMode>
 52a:	6c 2f       	mov	r22, r28
 52c:	80 2f       	mov	r24, r16
 52e:	0e 94 c0 01 	call	0x380	; 0x380 <Timer_VoidSetPrescaler>
 532:	cc 23       	and	r28, r28
 534:	19 f0       	breq	.+6      	; 0x53c <Timer_VoidPWMGeneration+0x34>
 536:	c1 30       	cpi	r28, 0x01	; 1
 538:	39 f1       	breq	.+78     	; 0x588 <Timer_VoidPWMGeneration+0x80>
 53a:	45 c0       	rjmp	.+138    	; 0x5c6 <Timer_VoidPWMGeneration+0xbe>
 53c:	41 e0       	ldi	r20, 0x01	; 1
 53e:	63 e0       	ldi	r22, 0x03	; 3
 540:	83 e0       	ldi	r24, 0x03	; 3
 542:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_VoidSetPinDirection>
 546:	d5 30       	cpi	r29, 0x05	; 5
 548:	69 f4       	brne	.+26     	; 0x564 <Timer_VoidPWMGeneration+0x5c>
 54a:	2f ef       	ldi	r18, 0xFF	; 255
 54c:	f2 9e       	mul	r15, r18
 54e:	c0 01       	movw	r24, r0
 550:	11 24       	eor	r1, r1
 552:	64 e6       	ldi	r22, 0x64	; 100
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	0e 94 5f 04 	call	0x8be	; 0x8be <__divmodhi4>
 55a:	86 2f       	mov	r24, r22
 55c:	6c 2f       	mov	r22, r28
 55e:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <Timer_VoidSetOCRValue>
 562:	31 c0       	rjmp	.+98     	; 0x5c6 <Timer_VoidPWMGeneration+0xbe>
 564:	d3 30       	cpi	r29, 0x03	; 3
 566:	79 f5       	brne	.+94     	; 0x5c6 <Timer_VoidPWMGeneration+0xbe>
 568:	2e ef       	ldi	r18, 0xFE	; 254
 56a:	31 e0       	ldi	r19, 0x01	; 1
 56c:	f2 9e       	mul	r15, r18
 56e:	c0 01       	movw	r24, r0
 570:	f3 9e       	mul	r15, r19
 572:	90 0d       	add	r25, r0
 574:	11 24       	eor	r1, r1
 576:	64 e6       	ldi	r22, 0x64	; 100
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	0e 94 5f 04 	call	0x8be	; 0x8be <__divmodhi4>
 57e:	86 2f       	mov	r24, r22
 580:	6c 2f       	mov	r22, r28
 582:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <Timer_VoidSetOCRValue>
 586:	1f c0       	rjmp	.+62     	; 0x5c6 <Timer_VoidPWMGeneration+0xbe>
 588:	41 e0       	ldi	r20, 0x01	; 1
 58a:	65 e0       	ldi	r22, 0x05	; 5
 58c:	87 e0       	ldi	r24, 0x07	; 7
 58e:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_VoidSetPinDirection>
 592:	d5 30       	cpi	r29, 0x05	; 5
 594:	59 f4       	brne	.+22     	; 0x5ac <Timer_VoidPWMGeneration+0xa4>
 596:	9f 2d       	mov	r25, r15
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	64 e6       	ldi	r22, 0x64	; 100
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	0e 94 5f 04 	call	0x8be	; 0x8be <__divmodhi4>
 5a2:	86 2f       	mov	r24, r22
 5a4:	6c 2f       	mov	r22, r28
 5a6:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <Timer_VoidSetOCRValue>
 5aa:	0d c0       	rjmp	.+26     	; 0x5c6 <Timer_VoidPWMGeneration+0xbe>
 5ac:	d3 30       	cpi	r29, 0x03	; 3
 5ae:	59 f4       	brne	.+22     	; 0x5c6 <Timer_VoidPWMGeneration+0xbe>
 5b0:	9f 2d       	mov	r25, r15
 5b2:	99 0f       	add	r25, r25
 5b4:	80 e0       	ldi	r24, 0x00	; 0
 5b6:	64 e6       	ldi	r22, 0x64	; 100
 5b8:	70 e0       	ldi	r23, 0x00	; 0
 5ba:	0e 94 5f 04 	call	0x8be	; 0x8be <__divmodhi4>
 5be:	86 2f       	mov	r24, r22
 5c0:	6c 2f       	mov	r22, r28
 5c2:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <Timer_VoidSetOCRValue>
 5c6:	df 91       	pop	r29
 5c8:	cf 91       	pop	r28
 5ca:	1f 91       	pop	r17
 5cc:	0f 91       	pop	r16
 5ce:	ff 90       	pop	r15
 5d0:	08 95       	ret

000005d2 <__vector_10>:
	
}

 
ISR(TIMER0_COMP_vect)
{
 5d2:	1f 92       	push	r1
 5d4:	0f 92       	push	r0
 5d6:	0f b6       	in	r0, 0x3f	; 63
 5d8:	0f 92       	push	r0
 5da:	11 24       	eor	r1, r1
 5dc:	2f 93       	push	r18
 5de:	3f 93       	push	r19
 5e0:	4f 93       	push	r20
 5e2:	5f 93       	push	r21
 5e4:	6f 93       	push	r22
 5e6:	7f 93       	push	r23
 5e8:	8f 93       	push	r24
 5ea:	9f 93       	push	r25
 5ec:	af 93       	push	r26
 5ee:	bf 93       	push	r27
 5f0:	ef 93       	push	r30
 5f2:	ff 93       	push	r31
	static u32 count_0=0;
	static u32 ms_count_0=0;
	
	if (Timer==TIMER_0 && alarm_flag==1)
 5f4:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <Timer>
 5f8:	81 11       	cpse	r24, r1
 5fa:	32 c0       	rjmp	.+100    	; 0x660 <__vector_10+0x8e>
 5fc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <alarm_flag>
 600:	81 30       	cpi	r24, 0x01	; 1
 602:	71 f5       	brne	.+92     	; 0x660 <__vector_10+0x8e>
	{
		if (count_0==m_sec)
 604:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <count_0.1877>
 608:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <count_0.1877+0x1>
 60c:	a0 91 6e 00 	lds	r26, 0x006E	; 0x80006e <count_0.1877+0x2>
 610:	b0 91 6f 00 	lds	r27, 0x006F	; 0x80006f <count_0.1877+0x3>
 614:	40 91 80 00 	lds	r20, 0x0080	; 0x800080 <m_sec>
 618:	50 91 81 00 	lds	r21, 0x0081	; 0x800081 <m_sec+0x1>
 61c:	60 91 82 00 	lds	r22, 0x0082	; 0x800082 <m_sec+0x2>
 620:	70 91 83 00 	lds	r23, 0x0083	; 0x800083 <m_sec+0x3>
 624:	84 17       	cp	r24, r20
 626:	95 07       	cpc	r25, r21
 628:	a6 07       	cpc	r26, r22
 62a:	b7 07       	cpc	r27, r23
 62c:	71 f4       	brne	.+28     	; 0x64a <__vector_10+0x78>
		{
			ptr_TIMER_0_COMP();
 62e:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <ptr_TIMER_0_COMP>
 632:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <ptr_TIMER_0_COMP+0x1>
 636:	09 95       	icall
			count_0=0;
 638:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <count_0.1877>
 63c:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <count_0.1877+0x1>
 640:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <count_0.1877+0x2>
 644:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <count_0.1877+0x3>
 648:	0b c0       	rjmp	.+22     	; 0x660 <__vector_10+0x8e>
		}
		else
		{
			count_0++;
 64a:	01 96       	adiw	r24, 0x01	; 1
 64c:	a1 1d       	adc	r26, r1
 64e:	b1 1d       	adc	r27, r1
 650:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <count_0.1877>
 654:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <count_0.1877+0x1>
 658:	a0 93 6e 00 	sts	0x006E, r26	; 0x80006e <count_0.1877+0x2>
 65c:	b0 93 6f 00 	sts	0x006F, r27	; 0x80006f <count_0.1877+0x3>
		}
	}
	
	
	if (ms_delay_flag==1)
 660:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <ms_delay_flag>
 664:	81 30       	cpi	r24, 0x01	; 1
 666:	59 f5       	brne	.+86     	; 0x6be <__vector_10+0xec>
	{
		if (ms_count_0==m_sec)
 668:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ms_count_0.1878>
 66c:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <ms_count_0.1878+0x1>
 670:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <ms_count_0.1878+0x2>
 674:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <ms_count_0.1878+0x3>
 678:	40 91 80 00 	lds	r20, 0x0080	; 0x800080 <m_sec>
 67c:	50 91 81 00 	lds	r21, 0x0081	; 0x800081 <m_sec+0x1>
 680:	60 91 82 00 	lds	r22, 0x0082	; 0x800082 <m_sec+0x2>
 684:	70 91 83 00 	lds	r23, 0x0083	; 0x800083 <m_sec+0x3>
 688:	84 17       	cp	r24, r20
 68a:	95 07       	cpc	r25, r21
 68c:	a6 07       	cpc	r26, r22
 68e:	b7 07       	cpc	r27, r23
 690:	59 f4       	brne	.+22     	; 0x6a8 <__vector_10+0xd6>
		{
			ms_delay_flag=0;
 692:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <ms_delay_flag>
			ms_count_0=0;
 696:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <ms_count_0.1878>
 69a:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <ms_count_0.1878+0x1>
 69e:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <ms_count_0.1878+0x2>
 6a2:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <ms_count_0.1878+0x3>
 6a6:	0b c0       	rjmp	.+22     	; 0x6be <__vector_10+0xec>
		}
		else
		{
			ms_count_0++;
 6a8:	01 96       	adiw	r24, 0x01	; 1
 6aa:	a1 1d       	adc	r26, r1
 6ac:	b1 1d       	adc	r27, r1
 6ae:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <ms_count_0.1878>
 6b2:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <ms_count_0.1878+0x1>
 6b6:	a0 93 6a 00 	sts	0x006A, r26	; 0x80006a <ms_count_0.1878+0x2>
 6ba:	b0 93 6b 00 	sts	0x006B, r27	; 0x80006b <ms_count_0.1878+0x3>
		}
	}
	
	if (Timer==TIMER_0 && callback_flag==1)
 6be:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <Timer>
 6c2:	81 11       	cpse	r24, r1
 6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <__vector_10+0x106>
 6c6:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <callback_flag>
 6ca:	81 30       	cpi	r24, 0x01	; 1
 6cc:	29 f4       	brne	.+10     	; 0x6d8 <__vector_10+0x106>
	{
		ptr_TIMER_0_COMP();
 6ce:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <ptr_TIMER_0_COMP>
 6d2:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <ptr_TIMER_0_COMP+0x1>
 6d6:	09 95       	icall
	}
	
}
 6d8:	ff 91       	pop	r31
 6da:	ef 91       	pop	r30
 6dc:	bf 91       	pop	r27
 6de:	af 91       	pop	r26
 6e0:	9f 91       	pop	r25
 6e2:	8f 91       	pop	r24
 6e4:	7f 91       	pop	r23
 6e6:	6f 91       	pop	r22
 6e8:	5f 91       	pop	r21
 6ea:	4f 91       	pop	r20
 6ec:	3f 91       	pop	r19
 6ee:	2f 91       	pop	r18
 6f0:	0f 90       	pop	r0
 6f2:	0f be       	out	0x3f, r0	; 63
 6f4:	0f 90       	pop	r0
 6f6:	1f 90       	pop	r1
 6f8:	18 95       	reti

000006fa <__vector_11>:

ISR(TIMER0_OVF_vect)
{
 6fa:	1f 92       	push	r1
 6fc:	0f 92       	push	r0
 6fe:	0f b6       	in	r0, 0x3f	; 63
 700:	0f 92       	push	r0
 702:	11 24       	eor	r1, r1
 704:	2f 93       	push	r18
 706:	3f 93       	push	r19
 708:	4f 93       	push	r20
 70a:	5f 93       	push	r21
 70c:	6f 93       	push	r22
 70e:	7f 93       	push	r23
 710:	8f 93       	push	r24
 712:	9f 93       	push	r25
 714:	af 93       	push	r26
 716:	bf 93       	push	r27
 718:	ef 93       	push	r30
 71a:	ff 93       	push	r31
	ptr_TIMER_0_OVF();
 71c:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <ptr_TIMER_0_OVF>
 720:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <ptr_TIMER_0_OVF+0x1>
 724:	09 95       	icall
}
 726:	ff 91       	pop	r31
 728:	ef 91       	pop	r30
 72a:	bf 91       	pop	r27
 72c:	af 91       	pop	r26
 72e:	9f 91       	pop	r25
 730:	8f 91       	pop	r24
 732:	7f 91       	pop	r23
 734:	6f 91       	pop	r22
 736:	5f 91       	pop	r21
 738:	4f 91       	pop	r20
 73a:	3f 91       	pop	r19
 73c:	2f 91       	pop	r18
 73e:	0f 90       	pop	r0
 740:	0f be       	out	0x3f, r0	; 63
 742:	0f 90       	pop	r0
 744:	1f 90       	pop	r1
 746:	18 95       	reti

00000748 <__vector_4>:


ISR(TIMER2_COMP_vect)
{
 748:	1f 92       	push	r1
 74a:	0f 92       	push	r0
 74c:	0f b6       	in	r0, 0x3f	; 63
 74e:	0f 92       	push	r0
 750:	11 24       	eor	r1, r1
 752:	2f 93       	push	r18
 754:	3f 93       	push	r19
 756:	4f 93       	push	r20
 758:	5f 93       	push	r21
 75a:	6f 93       	push	r22
 75c:	7f 93       	push	r23
 75e:	8f 93       	push	r24
 760:	9f 93       	push	r25
 762:	af 93       	push	r26
 764:	bf 93       	push	r27
 766:	ef 93       	push	r30
 768:	ff 93       	push	r31
	static u32 count_2=0;
	static u32 us_count_2=0;
	if (Timer==TIMER_2 && alarm_flag==1)
 76a:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <Timer>
 76e:	81 30       	cpi	r24, 0x01	; 1
 770:	91 f5       	brne	.+100    	; 0x7d6 <__vector_4+0x8e>
 772:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <alarm_flag>
 776:	81 30       	cpi	r24, 0x01	; 1
 778:	71 f5       	brne	.+92     	; 0x7d6 <__vector_4+0x8e>
	{
		if (count_2==m_sec)
 77a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <count_2.1889>
 77e:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <count_2.1889+0x1>
 782:	a0 91 66 00 	lds	r26, 0x0066	; 0x800066 <count_2.1889+0x2>
 786:	b0 91 67 00 	lds	r27, 0x0067	; 0x800067 <count_2.1889+0x3>
 78a:	40 91 80 00 	lds	r20, 0x0080	; 0x800080 <m_sec>
 78e:	50 91 81 00 	lds	r21, 0x0081	; 0x800081 <m_sec+0x1>
 792:	60 91 82 00 	lds	r22, 0x0082	; 0x800082 <m_sec+0x2>
 796:	70 91 83 00 	lds	r23, 0x0083	; 0x800083 <m_sec+0x3>
 79a:	84 17       	cp	r24, r20
 79c:	95 07       	cpc	r25, r21
 79e:	a6 07       	cpc	r26, r22
 7a0:	b7 07       	cpc	r27, r23
 7a2:	71 f4       	brne	.+28     	; 0x7c0 <__vector_4+0x78>
		{
			ptr_TIMER_2_COMP();
 7a4:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <ptr_TIMER_2_COMP>
 7a8:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <ptr_TIMER_2_COMP+0x1>
 7ac:	09 95       	icall
			count_2=0;
 7ae:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <count_2.1889>
 7b2:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <count_2.1889+0x1>
 7b6:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <count_2.1889+0x2>
 7ba:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <count_2.1889+0x3>
 7be:	0b c0       	rjmp	.+22     	; 0x7d6 <__vector_4+0x8e>
		}
		else
		{
			count_2++;
 7c0:	01 96       	adiw	r24, 0x01	; 1
 7c2:	a1 1d       	adc	r26, r1
 7c4:	b1 1d       	adc	r27, r1
 7c6:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <count_2.1889>
 7ca:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <count_2.1889+0x1>
 7ce:	a0 93 66 00 	sts	0x0066, r26	; 0x800066 <count_2.1889+0x2>
 7d2:	b0 93 67 00 	sts	0x0067, r27	; 0x800067 <count_2.1889+0x3>
		}
	}
	
	if (us_delay_flag==1)
 7d6:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <us_delay_flag>
 7da:	81 30       	cpi	r24, 0x01	; 1
 7dc:	59 f5       	brne	.+86     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
	{
		if (us_count_2==u_sec)
 7de:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 7e2:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 7e6:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 7ea:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 7ee:	40 91 85 00 	lds	r20, 0x0085	; 0x800085 <u_sec>
 7f2:	50 91 86 00 	lds	r21, 0x0086	; 0x800086 <u_sec+0x1>
 7f6:	60 91 87 00 	lds	r22, 0x0087	; 0x800087 <u_sec+0x2>
 7fa:	70 91 88 00 	lds	r23, 0x0088	; 0x800088 <u_sec+0x3>
 7fe:	84 17       	cp	r24, r20
 800:	95 07       	cpc	r25, r21
 802:	a6 07       	cpc	r26, r22
 804:	b7 07       	cpc	r27, r23
 806:	59 f4       	brne	.+22     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
		{
			us_delay_flag=0;
 808:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <us_delay_flag>
			us_count_2=0;
 80c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 810:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 814:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 818:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 81c:	0b c0       	rjmp	.+22     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
		}
		else
		{
			us_count_2++;
 81e:	01 96       	adiw	r24, 0x01	; 1
 820:	a1 1d       	adc	r26, r1
 822:	b1 1d       	adc	r27, r1
 824:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 828:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 82c:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 830:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
		}
	}
	
	if (Timer==TIMER_2 && callback_flag==1)
 834:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <Timer>
 838:	81 30       	cpi	r24, 0x01	; 1
 83a:	49 f4       	brne	.+18     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 83c:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <callback_flag>
 840:	81 30       	cpi	r24, 0x01	; 1
 842:	29 f4       	brne	.+10     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
	{
		ptr_TIMER_2_COMP();
 844:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <ptr_TIMER_2_COMP>
 848:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <ptr_TIMER_2_COMP+0x1>
 84c:	09 95       	icall
	}
}
 84e:	ff 91       	pop	r31
 850:	ef 91       	pop	r30
 852:	bf 91       	pop	r27
 854:	af 91       	pop	r26
 856:	9f 91       	pop	r25
 858:	8f 91       	pop	r24
 85a:	7f 91       	pop	r23
 85c:	6f 91       	pop	r22
 85e:	5f 91       	pop	r21
 860:	4f 91       	pop	r20
 862:	3f 91       	pop	r19
 864:	2f 91       	pop	r18
 866:	0f 90       	pop	r0
 868:	0f be       	out	0x3f, r0	; 63
 86a:	0f 90       	pop	r0
 86c:	1f 90       	pop	r1
 86e:	18 95       	reti

00000870 <__vector_5>:

ISR(TIMER2_OVF_vect)
{
 870:	1f 92       	push	r1
 872:	0f 92       	push	r0
 874:	0f b6       	in	r0, 0x3f	; 63
 876:	0f 92       	push	r0
 878:	11 24       	eor	r1, r1
 87a:	2f 93       	push	r18
 87c:	3f 93       	push	r19
 87e:	4f 93       	push	r20
 880:	5f 93       	push	r21
 882:	6f 93       	push	r22
 884:	7f 93       	push	r23
 886:	8f 93       	push	r24
 888:	9f 93       	push	r25
 88a:	af 93       	push	r26
 88c:	bf 93       	push	r27
 88e:	ef 93       	push	r30
 890:	ff 93       	push	r31
	ptr_TIMER_2_OVF();
 892:	e0 91 7b 00 	lds	r30, 0x007B	; 0x80007b <ptr_TIMER_2_OVF>
 896:	f0 91 7c 00 	lds	r31, 0x007C	; 0x80007c <ptr_TIMER_2_OVF+0x1>
 89a:	09 95       	icall
 89c:	ff 91       	pop	r31
 89e:	ef 91       	pop	r30
 8a0:	bf 91       	pop	r27
 8a2:	af 91       	pop	r26
 8a4:	9f 91       	pop	r25
 8a6:	8f 91       	pop	r24
 8a8:	7f 91       	pop	r23
 8aa:	6f 91       	pop	r22
 8ac:	5f 91       	pop	r21
 8ae:	4f 91       	pop	r20
 8b0:	3f 91       	pop	r19
 8b2:	2f 91       	pop	r18
 8b4:	0f 90       	pop	r0
 8b6:	0f be       	out	0x3f, r0	; 63
 8b8:	0f 90       	pop	r0
 8ba:	1f 90       	pop	r1
 8bc:	18 95       	reti

000008be <__divmodhi4>:
 8be:	97 fb       	bst	r25, 7
 8c0:	07 2e       	mov	r0, r23
 8c2:	16 f4       	brtc	.+4      	; 0x8c8 <__divmodhi4+0xa>
 8c4:	00 94       	com	r0
 8c6:	07 d0       	rcall	.+14     	; 0x8d6 <__divmodhi4_neg1>
 8c8:	77 fd       	sbrc	r23, 7
 8ca:	09 d0       	rcall	.+18     	; 0x8de <__divmodhi4_neg2>
 8cc:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__udivmodhi4>
 8d0:	07 fc       	sbrc	r0, 7
 8d2:	05 d0       	rcall	.+10     	; 0x8de <__divmodhi4_neg2>
 8d4:	3e f4       	brtc	.+14     	; 0x8e4 <__divmodhi4_exit>

000008d6 <__divmodhi4_neg1>:
 8d6:	90 95       	com	r25
 8d8:	81 95       	neg	r24
 8da:	9f 4f       	sbci	r25, 0xFF	; 255
 8dc:	08 95       	ret

000008de <__divmodhi4_neg2>:
 8de:	70 95       	com	r23
 8e0:	61 95       	neg	r22
 8e2:	7f 4f       	sbci	r23, 0xFF	; 255

000008e4 <__divmodhi4_exit>:
 8e4:	08 95       	ret

000008e6 <__tablejump2__>:
 8e6:	ee 0f       	add	r30, r30
 8e8:	ff 1f       	adc	r31, r31
 8ea:	05 90       	lpm	r0, Z+
 8ec:	f4 91       	lpm	r31, Z
 8ee:	e0 2d       	mov	r30, r0
 8f0:	09 94       	ijmp

000008f2 <__udivmodhi4>:
 8f2:	aa 1b       	sub	r26, r26
 8f4:	bb 1b       	sub	r27, r27
 8f6:	51 e1       	ldi	r21, 0x11	; 17
 8f8:	07 c0       	rjmp	.+14     	; 0x908 <__udivmodhi4_ep>

000008fa <__udivmodhi4_loop>:
 8fa:	aa 1f       	adc	r26, r26
 8fc:	bb 1f       	adc	r27, r27
 8fe:	a6 17       	cp	r26, r22
 900:	b7 07       	cpc	r27, r23
 902:	10 f0       	brcs	.+4      	; 0x908 <__udivmodhi4_ep>
 904:	a6 1b       	sub	r26, r22
 906:	b7 0b       	sbc	r27, r23

00000908 <__udivmodhi4_ep>:
 908:	88 1f       	adc	r24, r24
 90a:	99 1f       	adc	r25, r25
 90c:	5a 95       	dec	r21
 90e:	a9 f7       	brne	.-22     	; 0x8fa <__udivmodhi4_loop>
 910:	80 95       	com	r24
 912:	90 95       	com	r25
 914:	bc 01       	movw	r22, r24
 916:	cd 01       	movw	r24, r26
 918:	08 95       	ret

0000091a <_exit>:
 91a:	f8 94       	cli

0000091c <__stop_program>:
 91c:	ff cf       	rjmp	.-2      	; 0x91c <__stop_program>
